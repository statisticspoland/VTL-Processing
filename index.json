{
  "api/index.html": {
    "href": "api/index.html",
    "title": "VTL Processing API documentation | VTL Processing API documentation",
    "keywords": "VTL Processing API documentation"
  },
  "api/StatisticsPoland.VtlProcessing.Core.BackEnd.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.BackEnd.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.BackEnd | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.BackEnd Interfaces IMapper Interface of an mapper of VTL 2.0 to target names. ITargetRenderer Interface of a target renderer for the VTL 2.0 translation."
  },
  "api/StatisticsPoland.VtlProcessing.Core.BackEnd.IMapper.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.BackEnd.IMapper.html",
    "title": "Interface IMapper | VTL Processing API documentation",
    "keywords": "Interface IMapper Interface of an mapper of VTL 2.0 to target names. Namespace : StatisticsPoland.VtlProcessing.Core.BackEnd Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IMapper Methods MapNames(ITransformationSchema) Maps names of objects in a transformation schema. Declaration void MapNames(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema The transformation schema. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.BackEnd.ITargetRenderer.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.BackEnd.ITargetRenderer.html",
    "title": "Interface ITargetRenderer | VTL Processing API documentation",
    "keywords": "Interface ITargetRenderer Interface of a target renderer for the VTL 2.0 translation. Namespace : StatisticsPoland.VtlProcessing.Core.BackEnd Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface ITargetRenderer Properties Name Gets the name of the target renderer. Declaration string Name { get; } Property Value Type Description System.String Methods Render(IExpression) Renders a TSQL translated code for a single expression of a transformation schema. Declaration string Render(IExpression expression) Parameters Type Name Description IExpression expression The expression to render the TSQL translated code from. Returns Type Description System.String The TSQL translated code. Render(ITransformationSchema) Renders a TSQL translated code for the entire transformation schema. Declaration string Render(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema The transformation schema. Returns Type Description System.String The TSQL translated code. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.DataModelAggregatorExtensions.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.DataModelAggregatorExtensions.html",
    "title": "Class DataModelAggregatorExtensions | VTL Processing API documentation",
    "keywords": "Class DataModelAggregatorExtensions The IDataModelAggregator extensions. Inheritance System.Object DataModelAggregatorExtensions Namespace : StatisticsPoland.VtlProcessing.Core.DataModelProviders Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public static class DataModelAggregatorExtensions : object Methods AddDictionaryModel(IDataModelAggregator, Action<IDictionaryModelConfiguration>, String) Adds a dictionary data model the the data models aggregator. Declaration public static void AddDictionaryModel(this IDataModelAggregator aggregator, Action<IDictionaryModelConfiguration> modelConfiguration, string namespaceName) Parameters Type Name Description IDataModelAggregator aggregator The data models aggregator. Action < IDictionaryModelConfiguration > modelConfiguration The dictionary data model configuration. System.String namespaceName The namespace name of data model structures. AddJsonModel(IDataModelAggregator, String) Adds a JSON model to the data models aggregator. Declaration public static void AddJsonModel(this IDataModelAggregator aggregator, string filePath) Parameters Type Name Description IDataModelAggregator aggregator The data models aggregator. System.String filePath The file path of JSON file. AddSdmxModel(IDataModelAggregator, String, String) Adds a SDMX data model to the data models aggregator. Declaration public static void AddSdmxModel(this IDataModelAggregator aggregator, string url, string namespaceName) Parameters Type Name Description IDataModelAggregator aggregator The data models aggregator. System.String url The SDMX model url address. System.String namespaceName The namespace name of data model structures. AddSqlServerModel(IDataModelAggregator, String) Add a TSQL model to the data models aggregator. Declaration public static void AddSqlServerModel(this IDataModelAggregator aggregator, string connectionString) Parameters Type Name Description IDataModelAggregator aggregator The data models aggregator. System.String connectionString The TSQL database connection string."
  },
  "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.DataModelProviderBase.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.DataModelProviderBase.html",
    "title": "Class DataModelProviderBase | VTL Processing API documentation",
    "keywords": "Class DataModelProviderBase The base for data model representations. Inheritance System.Object DataModelProviderBase DictionaryDataModelProvider JsonDataModelProvider SdmxDataModelProvider SqlServerDataModelProvider Implements IDataModelProvider Namespace : StatisticsPoland.VtlProcessing.Core.DataModelProviders Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public abstract class DataModelProviderBase : object, IDataModelProvider Constructors DataModelProviderBase(IDataModelProvider) Initializes a new instance of the DataModelProviderBase class. Declaration public DataModelProviderBase(IDataModelProvider rootModel) Parameters Type Name Description IDataModelProvider rootModel The root data model. Properties DefaultNamespace Declaration public string DefaultNamespace { get; } Property Value Type Description System.String Namespace Gets or sets the namespace name. Declaration public string Namespace { get; set; } Property Value Type Description System.String Methods GetDatasetStructure(String) Declaration public virtual IDataStructure GetDatasetStructure(string datasetName) Parameters Type Name Description System.String datasetName Returns Type Description IDataStructure SplitDatasetName(String, out String, out String) Splits a full dataset name to a namespace name and a dataset name. Declaration protected void SplitDatasetName(string fullDatasetName, out string namespaceName, out string datasetName) Parameters Type Name Description System.String fullDatasetName The full dataset name. System.String namespaceName The namespace name. System.String datasetName The dataset name. Implements IDataModelProvider Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.DictionaryDataModelProvider.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.DictionaryDataModelProvider.html",
    "title": "Class DictionaryDataModelProvider | VTL Processing API documentation",
    "keywords": "Class DictionaryDataModelProvider The dictionary VTL 2.0 data model. Inheritance System.Object DataModelProviderBase DictionaryDataModelProvider Implements IDataModelProvider Inherited Members DataModelProviderBase.DefaultNamespace DataModelProviderBase.Namespace DataModelProviderBase.SplitDatasetName(String, String, String) Namespace : StatisticsPoland.VtlProcessing.Core.DataModelProviders Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DictionaryDataModelProvider : DataModelProviderBase, IDataModelProvider Constructors DictionaryDataModelProvider(IDataModelProvider, String, Dictionary<String, IDataStructure>) Initializes a new instance of the DictionaryDataModelProvider class. Declaration public DictionaryDataModelProvider(IDataModelProvider rootModel, string namespaceName, Dictionary<string, IDataStructure> dataStructures) Parameters Type Name Description IDataModelProvider rootModel The root data model. System.String namespaceName The namespace name. Dictionary < System.String , IDataStructure > dataStructures The dictionary of structures. Methods GetDatasetStructure(String) Declaration public override IDataStructure GetDatasetStructure(string datasetName) Parameters Type Name Description System.String datasetName Returns Type Description IDataStructure Overrides DataModelProviderBase.GetDatasetStructure(String) Implements IDataModelProvider Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.DataModelProviders | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.DataModelProviders Classes DataModelAggregatorExtensions The IDataModelAggregator extensions. DataModelProviderBase The base for data model representations. DictionaryDataModelProvider The dictionary VTL 2.0 data model. JsonDataModelProvider The JSON VTL 2.0 data model. SdmxDataModelProvider The SDMX VTL 2.0 data model representation. SqlServerDataModelProvider The TSQL server VTL 2.0 data model."
  },
  "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure.DictionaryModelConfiguration.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure.DictionaryModelConfiguration.html",
    "title": "Class DictionaryModelConfiguration | VTL Processing API documentation",
    "keywords": "Class DictionaryModelConfiguration The VTL 2.0 dictionary model configuration. Inheritance System.Object DictionaryModelConfiguration Implements IDictionaryModelConfiguration Namespace : StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DictionaryModelConfiguration : object, IDictionaryModelConfiguration Constructors DictionaryModelConfiguration(Dictionary<String, IDataStructure>) Initializes a new instance of the DictionaryModelConfiguration class. Declaration public DictionaryModelConfiguration(Dictionary<string, IDataStructure> dataStructures) Parameters Type Name Description Dictionary < System.String , IDataStructure > dataStructures The dictionary of structures. Methods AddDataSet(String, (ComponentType, BasicDataType, String)[]) Adds a dataset to the model. Declaration public IDictionaryModelConfiguration AddDataSet(string name, params (ComponentType, BasicDataType, string)[] componentSettings) Parameters Type Name Description System.String name The name of dataset. System.ValueTuple < ComponentType , BasicDataType , System.String >[] componentSettings Tuple defining the element of structure of the dataset (Component Type, VTL data type, Component name). Returns Type Description IDictionaryModelConfiguration Implements IDictionaryModelConfiguration Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure.EnvironmentMapper.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure.EnvironmentMapper.html",
    "title": "Class EnvironmentMapper | VTL Processing API documentation",
    "keywords": "Class EnvironmentMapper The dictionary environment names mapper. Inheritance System.Object EnvironmentMapper Implements IEnvironmentMapper Namespace : StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class EnvironmentMapper : object, IEnvironmentMapper Constructors EnvironmentMapper(IDataModelAggregator) Initializes a new instance of the EnvironmentMapper class. Declaration public EnvironmentMapper(IDataModelAggregator dataModelAggregator) Parameters Type Name Description IDataModelAggregator dataModelAggregator The data models aggregator. Properties DefaultNamespace Declaration public string DefaultNamespace { get; } Property Value Type Description System.String DefaultTargetPrefix Declaration public string DefaultTargetPrefix { get; set; } Property Value Type Description System.String Mapping Declaration public Dictionary<string, string> Mapping { get; set; } Property Value Type Description Dictionary < System.String , System.String > Methods Map(String) Declaration public string Map(string datasetName) Parameters Type Name Description System.String datasetName Returns Type Description System.String Implements IEnvironmentMapper Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure Classes DictionaryModelConfiguration The VTL 2.0 dictionary model configuration. EnvironmentMapper The dictionary environment names mapper."
  },
  "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure.Interfaces Interfaces IDictionaryModelConfiguration The VTL 2.0 dictionary model configuration interface."
  },
  "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure.Interfaces.IDictionaryModelConfiguration.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure.Interfaces.IDictionaryModelConfiguration.html",
    "title": "Interface IDictionaryModelConfiguration | VTL Processing API documentation",
    "keywords": "Interface IDictionaryModelConfiguration The VTL 2.0 dictionary model configuration interface. Namespace : StatisticsPoland.VtlProcessing.Core.DataModelProviders.Infrastructure.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IDictionaryModelConfiguration Methods AddDataSet(String, (ComponentType, BasicDataType, String)[]) Adds a dataset to the model. Declaration IDictionaryModelConfiguration AddDataSet(string name, params (ComponentType, BasicDataType, string)[] componentSettings) Parameters Type Name Description System.String name The name of dataset. System.ValueTuple < ComponentType , BasicDataType , System.String >[] componentSettings The tuple defining an element of structure of the dataset. Returns Type Description IDictionaryModelConfiguration Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.JsonDataModelProvider.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.JsonDataModelProvider.html",
    "title": "Class JsonDataModelProvider | VTL Processing API documentation",
    "keywords": "Class JsonDataModelProvider The JSON VTL 2.0 data model. Inheritance System.Object DataModelProviderBase JsonDataModelProvider Implements IDataModelProvider Inherited Members DataModelProviderBase.DefaultNamespace DataModelProviderBase.Namespace DataModelProviderBase.SplitDatasetName(String, String, String) Namespace : StatisticsPoland.VtlProcessing.Core.DataModelProviders Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JsonDataModelProvider : DataModelProviderBase, IDataModelProvider Constructors JsonDataModelProvider(IDataModelProvider, String) Initializes a new instance of the JsonDataModelProvider class. Declaration public JsonDataModelProvider(IDataModelProvider rootModel, string jsonFilePath) Parameters Type Name Description IDataModelProvider rootModel The root data model. System.String jsonFilePath The JSON file path/url. Properties DataStructuresCollection The collection of data structures. Declaration public ICollection<DataStructure> DataStructuresCollection { get; set; } Property Value Type Description ICollection < DataStructure > Methods GetDatasetStructure(String) Declaration public override IDataStructure GetDatasetStructure(string datasetName) Parameters Type Name Description System.String datasetName Returns Type Description IDataStructure Overrides DataModelProviderBase.GetDatasetStructure(String) Implements IDataModelProvider Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.SdmxDataModelProvider.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.SdmxDataModelProvider.html",
    "title": "Class SdmxDataModelProvider | VTL Processing API documentation",
    "keywords": "Class SdmxDataModelProvider The SDMX VTL 2.0 data model representation. Inheritance System.Object DataModelProviderBase SdmxDataModelProvider Implements IDataModelProvider Inherited Members DataModelProviderBase.DefaultNamespace DataModelProviderBase.Namespace DataModelProviderBase.SplitDatasetName(String, String, String) Namespace : StatisticsPoland.VtlProcessing.Core.DataModelProviders Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class SdmxDataModelProvider : DataModelProviderBase, IDataModelProvider Constructors SdmxDataModelProvider(IDataModelProvider, String, FileInfo) Initializes a new instance of the SdmxDataModelProvider class. Declaration public SdmxDataModelProvider(IDataModelProvider rootModel, string namespaceName, FileInfo structureFile) Parameters Type Name Description IDataModelProvider rootModel The root data model. System.String namespaceName The namespace name. FileInfo structureFile The SDMX FileInfo. SdmxDataModelProvider(IDataModelProvider, String, Stream) Initializes a new instance of the SdmxDataModelProvider class. Declaration public SdmxDataModelProvider(IDataModelProvider rootModel, string namespaceName, Stream stream) Parameters Type Name Description IDataModelProvider rootModel The root data model. System.String namespaceName The namespace name. Stream stream The SDMX stream. SdmxDataModelProvider(IDataModelProvider, String, Byte[]) Initializes a new instance of the SdmxDataModelProvider class. Declaration public SdmxDataModelProvider(IDataModelProvider rootModel, string namespaceName, byte[] bytes) Parameters Type Name Description IDataModelProvider rootModel The root data model. System.String namespaceName The namespace name. System.Byte [] bytes The SDMX loaded file as a byte array. SdmxDataModelProvider(IDataModelProvider, String, String) Initializes a new instance of the SdmxDataModelProvider class. Declaration public SdmxDataModelProvider(IDataModelProvider rootModel, string namespaceName, string strUrl) Parameters Type Name Description IDataModelProvider rootModel The root data model. System.String namespaceName The namespace name. System.String strUrl The URL path to a SMDX file. SdmxDataModelProvider(IDataModelProvider, String, Uri) Initializes a new instance of the SdmxDataModelProvider class. Declaration public SdmxDataModelProvider(IDataModelProvider rootModel, string namespaceName, Uri structureUri) Parameters Type Name Description IDataModelProvider rootModel The root data model. System.String namespaceName The namespace name. Uri structureUri The SDMX Uri object. Methods GetDatasetStructure(String) Declaration public override IDataStructure GetDatasetStructure(string datasetName) Parameters Type Name Description System.String datasetName Returns Type Description IDataStructure Overrides DataModelProviderBase.GetDatasetStructure(String) Implements IDataModelProvider Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.SqlServerDataModelProvider.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.DataModelProviders.SqlServerDataModelProvider.html",
    "title": "Class SqlServerDataModelProvider | VTL Processing API documentation",
    "keywords": "Class SqlServerDataModelProvider The TSQL server VTL 2.0 data model. Inheritance System.Object DataModelProviderBase SqlServerDataModelProvider Implements IDataModelProvider Inherited Members DataModelProviderBase.DefaultNamespace DataModelProviderBase.Namespace DataModelProviderBase.SplitDatasetName(String, String, String) Namespace : StatisticsPoland.VtlProcessing.Core.DataModelProviders Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class SqlServerDataModelProvider : DataModelProviderBase, IDataModelProvider Constructors SqlServerDataModelProvider(IDataModelProvider, DataStructureResolver, String, IEnvironmentMapper) Initializes a new instance of the SqlServerDataModelProvider class. Declaration public SqlServerDataModelProvider(IDataModelProvider rootModel, DataStructureResolver dsResolver, string connectionString, IEnvironmentMapper mapper) Parameters Type Name Description IDataModelProvider rootModel The root data model. DataStructureResolver dsResolver The data structure resolver. System.String connectionString The TSQL Server connection string. IEnvironmentMapper mapper The environment names mapper. Methods GetDatasetStructure(String) Declaration public override IDataStructure GetDatasetStructure(string datasetName) Parameters Type Name Description System.String datasetName Returns Type Description IDataStructure Overrides DataModelProviderBase.GetDatasetStructure(String) Implements IDataModelProvider Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.ErrorHandling | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.ErrorHandling Classes VtlError The VTL 2.0 error representation. VtlOperatorError The VTL 2.0 operator error representation. VtlSyntaxError The VTL 2.0 syntax error representation. VtlSyntaxErrorListener The VTL 2.0 syntax error listener. VtlTargetError The VTL 2.0 translation target representation."
  },
  "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.ErrorHandling.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.ErrorHandling.Interfaces Interfaces IVtlError Interface of a VTL 2.0 error representation."
  },
  "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.Interfaces.IVtlError.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.Interfaces.IVtlError.html",
    "title": "Interface IVtlError | VTL Processing API documentation",
    "keywords": "Interface IVtlError Interface of a VTL 2.0 error representation. Namespace : StatisticsPoland.VtlProcessing.Core.ErrorHandling.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IVtlError Properties FullMessage Gets the message of the error. Declaration string FullMessage { get; } Property Value Type Description System.String Line Gets the line number of the error. Declaration int Line { get; } Property Value Type Description System.Int32 TypeError Gets the type of the error. Declaration ErrorType TypeError { get; } Property Value Type Description ErrorType Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.Logging.ErrorCollector.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.Logging.ErrorCollector.html",
    "title": "Class ErrorCollector | VTL Processing API documentation",
    "keywords": "Class ErrorCollector Performs logging and collecting errors. Inheritance System.Object ErrorCollector Namespace : StatisticsPoland.VtlProcessing.Core.ErrorHandling.Logging Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ErrorCollector : ILogger Constructors ErrorCollector() Initializes a new instance of the ErrorCollector class. Declaration public ErrorCollector() Properties Errors Gets the error list. Declaration public List<Exception> Errors { get; } Property Value Type Description List < Exception > Warnings Gets the warning list. Declaration public List<Exception> Warnings { get; } Property Value Type Description List < Exception > Methods BeginScope<TState>(TState) Declaration public IDisposable BeginScope<TState>(TState state) Parameters Type Name Description TState state Returns Type Description IDisposable Type Parameters Name Description TState IsEnabled(LogLevel) Declaration public bool IsEnabled(LogLevel logLevel) Parameters Type Name Description LogLevel logLevel Returns Type Description System.Boolean Log<TState>(LogLevel, EventId, TState, Exception, Func<TState, Exception, String>) Declaration public void Log<TState>(LogLevel logLevel, EventId eventId, TState state, Exception exception, Func<TState, Exception, string> formatter) Parameters Type Name Description LogLevel logLevel EventId eventId TState state Exception exception Func <TState, Exception , System.String > formatter Type Parameters Name Description TState Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.Logging.ErrorCollectorProvider.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.Logging.ErrorCollectorProvider.html",
    "title": "Class ErrorCollectorProvider | VTL Processing API documentation",
    "keywords": "Class ErrorCollectorProvider Creates and stores instances of ErrorCollector - representation. Inheritance System.Object ErrorCollectorProvider Namespace : StatisticsPoland.VtlProcessing.Core.ErrorHandling.Logging Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public sealed class ErrorCollectorProvider : ILoggerProvider Constructors ErrorCollectorProvider() Initializes a new instance of the ErrorCollectorProvider class. Declaration public ErrorCollectorProvider() Properties ErrorCollectors Gets the list of ErrorCollector instances. Declaration public List<ErrorCollector> ErrorCollectors { get; } Property Value Type Description List < ErrorCollector > Methods CreateLogger(String) Declaration public ILogger CreateLogger(string categoryName) Parameters Type Name Description System.String categoryName Returns Type Description ILogger Dispose() Declaration public void Dispose() GetErrorsOfType<TResult>() Gets errors of a given type from ErrorCollector instances. Declaration public IEnumerable<TResult> GetErrorsOfType<TResult>() Returns Type Description IEnumerable <TResult> The error enumerator. Type Parameters Name Description TResult The type of errors. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.Logging.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.Logging.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.ErrorHandling.Logging | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.ErrorHandling.Logging Classes ErrorCollector Performs logging and collecting errors. ErrorCollectorProvider Creates and stores instances of ErrorCollector - representation."
  },
  "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.VtlError.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.VtlError.html",
    "title": "Class VtlError | VTL Processing API documentation",
    "keywords": "Class VtlError The VTL 2.0 error representation. Inheritance System.Object VtlError Implements IVtlError Namespace : StatisticsPoland.VtlProcessing.Core.ErrorHandling Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class VtlError : ApplicationException, IVtlError Constructors VtlError(IExpression, String) Initializes a new instance of the VtlError class. Declaration public VtlError(IExpression expression, string message) Parameters Type Name Description IExpression expression The expression an error is from. System.String message The error message. VtlError(IExpression, String, Exception) Initializes a new instance of the VtlError class. Declaration public VtlError(IExpression expression, string message, Exception innerException) Parameters Type Name Description IExpression expression The expression an error is from. System.String message The error message. Exception innerException The exception that is the cause of the current exception. Properties FullMessage Declaration public string FullMessage { get; } Property Value Type Description System.String Line Declaration public int Line { get; } Property Value Type Description System.Int32 TypeError Declaration public ErrorType TypeError { get; } Property Value Type Description ErrorType Implements IVtlError Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.VtlOperatorError.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.VtlOperatorError.html",
    "title": "Class VtlOperatorError | VTL Processing API documentation",
    "keywords": "Class VtlOperatorError The VTL 2.0 operator error representation. Inheritance System.Object VtlOperatorError Implements IVtlError Namespace : StatisticsPoland.VtlProcessing.Core.ErrorHandling Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class VtlOperatorError : ApplicationException, IVtlError Constructors VtlOperatorError(IExpression, String, String) Initializes a new instance of the VtlOperatorError class. Declaration public VtlOperatorError(IExpression expression, string operator, string message) Parameters Type Name Description IExpression expression The expression an error is from. System.String operator The operator an error occured in. System.String message The error message. VtlOperatorError(IExpression, String, String, Exception) Initializes a new instance of the VtlOperatorError class. Declaration public VtlOperatorError(IExpression expression, string operator, string message, Exception innerException) Parameters Type Name Description IExpression expression The expression an error is from. System.String operator The operator an error occured in. System.String message The error message. Exception innerException The exception that is the cause of the current error. Properties FullMessage Declaration public string FullMessage { get; } Property Value Type Description System.String Line Declaration public int Line { get; } Property Value Type Description System.Int32 TypeError Declaration public ErrorType TypeError { get; } Property Value Type Description ErrorType Methods ToString() Declaration public override string ToString() Returns Type Description System.String Implements IVtlError Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.VtlSyntaxError.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.VtlSyntaxError.html",
    "title": "Class VtlSyntaxError | VTL Processing API documentation",
    "keywords": "Class VtlSyntaxError The VTL 2.0 syntax error representation. Inheritance System.Object VtlSyntaxError Implements IVtlError Namespace : StatisticsPoland.VtlProcessing.Core.ErrorHandling Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class VtlSyntaxError : ApplicationException, IVtlError Constructors VtlSyntaxError(String, Int32) Initializes a new instance of the VtlSyntaxError class. Declaration public VtlSyntaxError(string message, int line) Parameters Type Name Description System.String message The error message. System.Int32 line The line of the error. VtlSyntaxError(String, Int32, Exception) Initializes a new instance of the VtlSyntaxError class. Declaration public VtlSyntaxError(string message, int line, Exception innerException) Parameters Type Name Description System.String message The error message. System.Int32 line The line of the error. Exception innerException The exception that is the cause of the current error. Properties FullMessage Declaration public string FullMessage { get; } Property Value Type Description System.String Line Declaration public int Line { get; } Property Value Type Description System.Int32 TypeError Declaration public ErrorType TypeError { get; } Property Value Type Description ErrorType Methods ToString() Declaration public override string ToString() Returns Type Description System.String Implements IVtlError Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.VtlSyntaxErrorListener.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.VtlSyntaxErrorListener.html",
    "title": "Class VtlSyntaxErrorListener | VTL Processing API documentation",
    "keywords": "Class VtlSyntaxErrorListener The VTL 2.0 syntax error listener. Inheritance System.Object VtlSyntaxErrorListener Namespace : StatisticsPoland.VtlProcessing.Core.ErrorHandling Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class VtlSyntaxErrorListener : IAntlrErrorListener<IToken> Constructors VtlSyntaxErrorListener() Initializes a new instance of the VtlSyntaxErrorListener class. Declaration public VtlSyntaxErrorListener() Properties Errors Gets the errors enumerator. Declaration public IEnumerable<VtlSyntaxError> Errors { get; } Property Value Type Description IEnumerable < VtlSyntaxError > Methods SyntaxError(TextWriter, IRecognizer, IToken, Int32, Int32, String, RecognitionException) Declaration public void SyntaxError(TextWriter output, IRecognizer recognizer, IToken offendingSymbol, int line, int charPositionInLine, string msg, RecognitionException e) Parameters Type Name Description TextWriter output IRecognizer recognizer IToken offendingSymbol System.Int32 line System.Int32 charPositionInLine System.String msg RecognitionException e Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.VtlTargetError.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.ErrorHandling.VtlTargetError.html",
    "title": "Class VtlTargetError | VTL Processing API documentation",
    "keywords": "Class VtlTargetError The VTL 2.0 translation target representation. Inheritance System.Object VtlTargetError Implements IVtlError Namespace : StatisticsPoland.VtlProcessing.Core.ErrorHandling Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class VtlTargetError : ApplicationException, IVtlError Constructors VtlTargetError(IExpression, String) Initializes a new instance of the VtlTargetError class. Declaration public VtlTargetError(IExpression expression, string message) Parameters Type Name Description IExpression expression The expression an error is from. System.String message The error message. VtlTargetError(IExpression, String, Exception) Initializes a new instance of the VtlTargetError class. Declaration public VtlTargetError(IExpression expression, string message, Exception innerException) Parameters Type Name Description IExpression expression The expression an error is from. System.String message The error message. Exception innerException The exception that is the cause of the current exception. Properties FullMessage Declaration public string FullMessage { get; } Property Value Type Description System.String Line Declaration public int Line { get; } Property Value Type Description System.Int32 TypeError Declaration public ErrorType TypeError { get; } Property Value Type Description ErrorType Methods ToString() Declaration public override string ToString() Returns Type Description System.String Implements IVtlError Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.ErrorsCollection.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.ErrorsCollection.html",
    "title": "Class ErrorsCollection | VTL Processing API documentation",
    "keywords": "Class ErrorsCollection Collection of translation errors. Inheritance System.Object ErrorsCollection Namespace : StatisticsPoland.VtlProcessing.Core Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ErrorsCollection : object Constructors ErrorsCollection(ErrorCollectorProvider) Initializes a new instance of the ErrorsCollection class. Declaration public ErrorsCollection(ErrorCollectorProvider errorProvider) Parameters Type Name Description ErrorCollectorProvider errorProvider The collector of error logs.. Properties Count Gets the count of translation errors. Declaration public int Count { get; } Property Value Type Description System.Int32 Methods GetErrors() Gets the collection of translation errors. Declaration public IEnumerable<Exception> GetErrors() Returns Type Description IEnumerable < Exception > The collection of translation errors. GetErrors<TResult>() Gets the collection of translation errors of a specific type. Declaration public IEnumerable<TResult> GetErrors<TResult>() Returns Type Description IEnumerable <TResult> The collection of translation errors. Type Parameters Name Description TResult The type of errors to get. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Classes VtlBaseListener This class provides an empty implementation of IVtlListener , which can be extended to create a listener which only needs to handle a subset of the available methods. VtlBaseVisitor<Result> This class provides an empty implementation of IVtlVisitor<Result> , which can be extended to create a visitor which only needs to handle a subset of the available methods. VtlLexer VtlParser VtlParser.AggrClauseContext VtlParser.AggrExprContext VtlParser.AggrFunctionContext VtlParser.AggrFunctionNameContext VtlParser.AggrInvocationContext VtlParser.AnalyticClauseContext VtlParser.AnalyticFunctionContext VtlParser.AnalyticFunctionNameContext VtlParser.AnalyticInvocationContext VtlParser.CalcClauseContext VtlParser.CalcExprContext VtlParser.CheckDatapointContext VtlParser.ClosedDatasetContext VtlParser.ComponentContext VtlParser.ComponentIDContext VtlParser.ComponentRoleContext VtlParser.ConstantContext VtlParser.DatasetClauseContext VtlParser.DatasetComplexContext VtlParser.DatasetContext VtlParser.DatasetIDContext VtlParser.DefDatapointContext VtlParser.DefExprContext VtlParser.DropClauseContext VtlParser.ErrorCodeContext VtlParser.ErrorLevelContext VtlParser.FilterClauseContext VtlParser.FirstWindowLimitContext VtlParser.GroupingClauseContext VtlParser.GroupKeywordContext VtlParser.HavingClauseContext VtlParser.HavingExprContext VtlParser.IfThenElseDatasetContext VtlParser.IfThenElseScalarContext VtlParser.JoinAggrClauseContext VtlParser.JoinAliasesClauseContext VtlParser.JoinAliasExprContext VtlParser.JoinApplyClauseContext VtlParser.JoinBodyContext VtlParser.JoinCalcClauseContext VtlParser.JoinClauseContext VtlParser.JoinDropClauseContext VtlParser.JoinExprContext VtlParser.JoinFilterClauseContext VtlParser.JoinKeepClauseContext VtlParser.JoinKeywordContext VtlParser.JoinRenameClauseContext VtlParser.JoinUsingClauseContext VtlParser.KeepClauseContext VtlParser.LimitsMethodContext VtlParser.ListContext VtlParser.MembershipDatasetContext VtlParser.OpenedDatasetContext VtlParser.OptionalExprContext VtlParser.OrderClauseContext VtlParser.OrderExprContext VtlParser.PartitionClauseContext VtlParser.PivotClauseContext VtlParser.RenameClauseContext VtlParser.RenameExprContext VtlParser.RetainTypeContext VtlParser.RuleClauseDatapointContext VtlParser.RuleIDContext VtlParser.RuleItemDatapointContext VtlParser.RulesetIDContext VtlParser.RulesetSignatureContext VtlParser.ScalarContext VtlParser.SecondWindowLimitContext VtlParser.SetExprContext VtlParser.StartContext VtlParser.StatementContext VtlParser.SubspaceClauseContext VtlParser.SubspaceExprContext VtlParser.UnopenedDatasetContext VtlParser.UnpivotClauseContext VtlParser.ValueDomainNameContext VtlParser.VarIDContext VtlParser.VarSignatureContext VtlParser.WindowingClauseContext Interfaces IVtlListener This interface defines a complete listener for a parse tree produced by VtlParser . IVtlVisitor<Result> This interface defines a complete generic visitor for a parse tree produced by VtlParser ."
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.IVtlListener.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.IVtlListener.html",
    "title": "Interface IVtlListener | VTL Processing API documentation",
    "keywords": "Interface IVtlListener This interface defines a complete listener for a parse tree produced by VtlParser . Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IVtlListener : Antlr4.Runtime.Tree.IParseTreeListener Methods EnterAggrClause(VtlParser.AggrClauseContext) Enter a parse tree produced by aggrClause() . Declaration void EnterAggrClause(VtlParser.AggrClauseContext context) Parameters Type Name Description VtlParser.AggrClauseContext context The parse tree. EnterAggrExpr(VtlParser.AggrExprContext) Enter a parse tree produced by aggrExpr() . Declaration void EnterAggrExpr(VtlParser.AggrExprContext context) Parameters Type Name Description VtlParser.AggrExprContext context The parse tree. EnterAggrFunction(VtlParser.AggrFunctionContext) Enter a parse tree produced by aggrFunction() . Declaration void EnterAggrFunction(VtlParser.AggrFunctionContext context) Parameters Type Name Description VtlParser.AggrFunctionContext context The parse tree. EnterAggrFunctionName(VtlParser.AggrFunctionNameContext) Enter a parse tree produced by aggrFunctionName() . Declaration void EnterAggrFunctionName(VtlParser.AggrFunctionNameContext context) Parameters Type Name Description VtlParser.AggrFunctionNameContext context The parse tree. EnterAggrInvocation(VtlParser.AggrInvocationContext) Enter a parse tree produced by aggrInvocation() . Declaration void EnterAggrInvocation(VtlParser.AggrInvocationContext context) Parameters Type Name Description VtlParser.AggrInvocationContext context The parse tree. EnterAnalyticClause(VtlParser.AnalyticClauseContext) Enter a parse tree produced by analyticClause() . Declaration void EnterAnalyticClause(VtlParser.AnalyticClauseContext context) Parameters Type Name Description VtlParser.AnalyticClauseContext context The parse tree. EnterAnalyticFunction(VtlParser.AnalyticFunctionContext) Enter a parse tree produced by analyticFunction() . Declaration void EnterAnalyticFunction(VtlParser.AnalyticFunctionContext context) Parameters Type Name Description VtlParser.AnalyticFunctionContext context The parse tree. EnterAnalyticFunctionName(VtlParser.AnalyticFunctionNameContext) Enter a parse tree produced by analyticFunctionName() . Declaration void EnterAnalyticFunctionName(VtlParser.AnalyticFunctionNameContext context) Parameters Type Name Description VtlParser.AnalyticFunctionNameContext context The parse tree. EnterAnalyticInvocation(VtlParser.AnalyticInvocationContext) Enter a parse tree produced by analyticInvocation() . Declaration void EnterAnalyticInvocation(VtlParser.AnalyticInvocationContext context) Parameters Type Name Description VtlParser.AnalyticInvocationContext context The parse tree. EnterCalcClause(VtlParser.CalcClauseContext) Enter a parse tree produced by calcClause() . Declaration void EnterCalcClause(VtlParser.CalcClauseContext context) Parameters Type Name Description VtlParser.CalcClauseContext context The parse tree. EnterCalcExpr(VtlParser.CalcExprContext) Enter a parse tree produced by calcExpr() . Declaration void EnterCalcExpr(VtlParser.CalcExprContext context) Parameters Type Name Description VtlParser.CalcExprContext context The parse tree. EnterCheckDatapoint(VtlParser.CheckDatapointContext) Enter a parse tree produced by checkDatapoint() . Declaration void EnterCheckDatapoint(VtlParser.CheckDatapointContext context) Parameters Type Name Description VtlParser.CheckDatapointContext context The parse tree. EnterClosedDataset(VtlParser.ClosedDatasetContext) Enter a parse tree produced by closedDataset() . Declaration void EnterClosedDataset(VtlParser.ClosedDatasetContext context) Parameters Type Name Description VtlParser.ClosedDatasetContext context The parse tree. EnterComponent(VtlParser.ComponentContext) Enter a parse tree produced by component() . Declaration void EnterComponent(VtlParser.ComponentContext context) Parameters Type Name Description VtlParser.ComponentContext context The parse tree. EnterComponentID(VtlParser.ComponentIDContext) Enter a parse tree produced by componentID() . Declaration void EnterComponentID(VtlParser.ComponentIDContext context) Parameters Type Name Description VtlParser.ComponentIDContext context The parse tree. EnterComponentRole(VtlParser.ComponentRoleContext) Enter a parse tree produced by componentRole() . Declaration void EnterComponentRole(VtlParser.ComponentRoleContext context) Parameters Type Name Description VtlParser.ComponentRoleContext context The parse tree. EnterConstant(VtlParser.ConstantContext) Enter a parse tree produced by constant() . Declaration void EnterConstant(VtlParser.ConstantContext context) Parameters Type Name Description VtlParser.ConstantContext context The parse tree. EnterDataset(VtlParser.DatasetContext) Enter a parse tree produced by dataset() . Declaration void EnterDataset(VtlParser.DatasetContext context) Parameters Type Name Description VtlParser.DatasetContext context The parse tree. EnterDatasetClause(VtlParser.DatasetClauseContext) Enter a parse tree produced by datasetClause() . Declaration void EnterDatasetClause(VtlParser.DatasetClauseContext context) Parameters Type Name Description VtlParser.DatasetClauseContext context The parse tree. EnterDatasetComplex(VtlParser.DatasetComplexContext) Enter a parse tree produced by datasetComplex() . Declaration void EnterDatasetComplex(VtlParser.DatasetComplexContext context) Parameters Type Name Description VtlParser.DatasetComplexContext context The parse tree. EnterDatasetID(VtlParser.DatasetIDContext) Enter a parse tree produced by datasetID() . Declaration void EnterDatasetID(VtlParser.DatasetIDContext context) Parameters Type Name Description VtlParser.DatasetIDContext context The parse tree. EnterDefDatapoint(VtlParser.DefDatapointContext) Enter a parse tree produced by defDatapoint() . Declaration void EnterDefDatapoint(VtlParser.DefDatapointContext context) Parameters Type Name Description VtlParser.DefDatapointContext context The parse tree. EnterDefExpr(VtlParser.DefExprContext) Enter a parse tree produced by defExpr() . Declaration void EnterDefExpr(VtlParser.DefExprContext context) Parameters Type Name Description VtlParser.DefExprContext context The parse tree. EnterDropClause(VtlParser.DropClauseContext) Enter a parse tree produced by dropClause() . Declaration void EnterDropClause(VtlParser.DropClauseContext context) Parameters Type Name Description VtlParser.DropClauseContext context The parse tree. EnterErrorCode(VtlParser.ErrorCodeContext) Enter a parse tree produced by errorCode() . Declaration void EnterErrorCode(VtlParser.ErrorCodeContext context) Parameters Type Name Description VtlParser.ErrorCodeContext context The parse tree. EnterErrorLevel(VtlParser.ErrorLevelContext) Enter a parse tree produced by errorLevel() . Declaration void EnterErrorLevel(VtlParser.ErrorLevelContext context) Parameters Type Name Description VtlParser.ErrorLevelContext context The parse tree. EnterFilterClause(VtlParser.FilterClauseContext) Enter a parse tree produced by filterClause() . Declaration void EnterFilterClause(VtlParser.FilterClauseContext context) Parameters Type Name Description VtlParser.FilterClauseContext context The parse tree. EnterFirstWindowLimit(VtlParser.FirstWindowLimitContext) Enter a parse tree produced by firstWindowLimit() . Declaration void EnterFirstWindowLimit(VtlParser.FirstWindowLimitContext context) Parameters Type Name Description VtlParser.FirstWindowLimitContext context The parse tree. EnterGroupingClause(VtlParser.GroupingClauseContext) Enter a parse tree produced by groupingClause() . Declaration void EnterGroupingClause(VtlParser.GroupingClauseContext context) Parameters Type Name Description VtlParser.GroupingClauseContext context The parse tree. EnterGroupKeyword(VtlParser.GroupKeywordContext) Enter a parse tree produced by groupKeyword() . Declaration void EnterGroupKeyword(VtlParser.GroupKeywordContext context) Parameters Type Name Description VtlParser.GroupKeywordContext context The parse tree. EnterHavingClause(VtlParser.HavingClauseContext) Enter a parse tree produced by havingClause() . Declaration void EnterHavingClause(VtlParser.HavingClauseContext context) Parameters Type Name Description VtlParser.HavingClauseContext context The parse tree. EnterHavingExpr(VtlParser.HavingExprContext) Enter a parse tree produced by havingExpr() . Declaration void EnterHavingExpr(VtlParser.HavingExprContext context) Parameters Type Name Description VtlParser.HavingExprContext context The parse tree. EnterIfThenElseDataset(VtlParser.IfThenElseDatasetContext) Enter a parse tree produced by ifThenElseDataset() . Declaration void EnterIfThenElseDataset(VtlParser.IfThenElseDatasetContext context) Parameters Type Name Description VtlParser.IfThenElseDatasetContext context The parse tree. EnterIfThenElseScalar(VtlParser.IfThenElseScalarContext) Enter a parse tree produced by ifThenElseScalar() . Declaration void EnterIfThenElseScalar(VtlParser.IfThenElseScalarContext context) Parameters Type Name Description VtlParser.IfThenElseScalarContext context The parse tree. EnterJoinAggrClause(VtlParser.JoinAggrClauseContext) Enter a parse tree produced by joinAggrClause() . Declaration void EnterJoinAggrClause(VtlParser.JoinAggrClauseContext context) Parameters Type Name Description VtlParser.JoinAggrClauseContext context The parse tree. EnterJoinAliasesClause(VtlParser.JoinAliasesClauseContext) Enter a parse tree produced by joinAliasesClause() . Declaration void EnterJoinAliasesClause(VtlParser.JoinAliasesClauseContext context) Parameters Type Name Description VtlParser.JoinAliasesClauseContext context The parse tree. EnterJoinAliasExpr(VtlParser.JoinAliasExprContext) Enter a parse tree produced by joinAliasExpr() . Declaration void EnterJoinAliasExpr(VtlParser.JoinAliasExprContext context) Parameters Type Name Description VtlParser.JoinAliasExprContext context The parse tree. EnterJoinApplyClause(VtlParser.JoinApplyClauseContext) Enter a parse tree produced by joinApplyClause() . Declaration void EnterJoinApplyClause(VtlParser.JoinApplyClauseContext context) Parameters Type Name Description VtlParser.JoinApplyClauseContext context The parse tree. EnterJoinBody(VtlParser.JoinBodyContext) Enter a parse tree produced by joinBody() . Declaration void EnterJoinBody(VtlParser.JoinBodyContext context) Parameters Type Name Description VtlParser.JoinBodyContext context The parse tree. EnterJoinCalcClause(VtlParser.JoinCalcClauseContext) Enter a parse tree produced by joinCalcClause() . Declaration void EnterJoinCalcClause(VtlParser.JoinCalcClauseContext context) Parameters Type Name Description VtlParser.JoinCalcClauseContext context The parse tree. EnterJoinClause(VtlParser.JoinClauseContext) Enter a parse tree produced by joinClause() . Declaration void EnterJoinClause(VtlParser.JoinClauseContext context) Parameters Type Name Description VtlParser.JoinClauseContext context The parse tree. EnterJoinDropClause(VtlParser.JoinDropClauseContext) Enter a parse tree produced by joinDropClause() . Declaration void EnterJoinDropClause(VtlParser.JoinDropClauseContext context) Parameters Type Name Description VtlParser.JoinDropClauseContext context The parse tree. EnterJoinExpr(VtlParser.JoinExprContext) Enter a parse tree produced by joinExpr() . Declaration void EnterJoinExpr(VtlParser.JoinExprContext context) Parameters Type Name Description VtlParser.JoinExprContext context The parse tree. EnterJoinFilterClause(VtlParser.JoinFilterClauseContext) Enter a parse tree produced by joinFilterClause() . Declaration void EnterJoinFilterClause(VtlParser.JoinFilterClauseContext context) Parameters Type Name Description VtlParser.JoinFilterClauseContext context The parse tree. EnterJoinKeepClause(VtlParser.JoinKeepClauseContext) Enter a parse tree produced by joinKeepClause() . Declaration void EnterJoinKeepClause(VtlParser.JoinKeepClauseContext context) Parameters Type Name Description VtlParser.JoinKeepClauseContext context The parse tree. EnterJoinKeyword(VtlParser.JoinKeywordContext) Enter a parse tree produced by joinKeyword() . Declaration void EnterJoinKeyword(VtlParser.JoinKeywordContext context) Parameters Type Name Description VtlParser.JoinKeywordContext context The parse tree. EnterJoinRenameClause(VtlParser.JoinRenameClauseContext) Enter a parse tree produced by joinRenameClause() . Declaration void EnterJoinRenameClause(VtlParser.JoinRenameClauseContext context) Parameters Type Name Description VtlParser.JoinRenameClauseContext context The parse tree. EnterJoinUsingClause(VtlParser.JoinUsingClauseContext) Enter a parse tree produced by joinUsingClause() . Declaration void EnterJoinUsingClause(VtlParser.JoinUsingClauseContext context) Parameters Type Name Description VtlParser.JoinUsingClauseContext context The parse tree. EnterKeepClause(VtlParser.KeepClauseContext) Enter a parse tree produced by keepClause() . Declaration void EnterKeepClause(VtlParser.KeepClauseContext context) Parameters Type Name Description VtlParser.KeepClauseContext context The parse tree. EnterLimitsMethod(VtlParser.LimitsMethodContext) Enter a parse tree produced by limitsMethod() . Declaration void EnterLimitsMethod(VtlParser.LimitsMethodContext context) Parameters Type Name Description VtlParser.LimitsMethodContext context The parse tree. EnterList(VtlParser.ListContext) Enter a parse tree produced by list() . Declaration void EnterList(VtlParser.ListContext context) Parameters Type Name Description VtlParser.ListContext context The parse tree. EnterMembershipDataset(VtlParser.MembershipDatasetContext) Enter a parse tree produced by membershipDataset() . Declaration void EnterMembershipDataset(VtlParser.MembershipDatasetContext context) Parameters Type Name Description VtlParser.MembershipDatasetContext context The parse tree. EnterOpenedDataset(VtlParser.OpenedDatasetContext) Enter a parse tree produced by openedDataset() . Declaration void EnterOpenedDataset(VtlParser.OpenedDatasetContext context) Parameters Type Name Description VtlParser.OpenedDatasetContext context The parse tree. EnterOptionalExpr(VtlParser.OptionalExprContext) Enter a parse tree produced by optionalExpr() . Declaration void EnterOptionalExpr(VtlParser.OptionalExprContext context) Parameters Type Name Description VtlParser.OptionalExprContext context The parse tree. EnterOrderClause(VtlParser.OrderClauseContext) Enter a parse tree produced by orderClause() . Declaration void EnterOrderClause(VtlParser.OrderClauseContext context) Parameters Type Name Description VtlParser.OrderClauseContext context The parse tree. EnterOrderExpr(VtlParser.OrderExprContext) Enter a parse tree produced by orderExpr() . Declaration void EnterOrderExpr(VtlParser.OrderExprContext context) Parameters Type Name Description VtlParser.OrderExprContext context The parse tree. EnterPartitionClause(VtlParser.PartitionClauseContext) Enter a parse tree produced by partitionClause() . Declaration void EnterPartitionClause(VtlParser.PartitionClauseContext context) Parameters Type Name Description VtlParser.PartitionClauseContext context The parse tree. EnterPivotClause(VtlParser.PivotClauseContext) Enter a parse tree produced by pivotClause() . Declaration void EnterPivotClause(VtlParser.PivotClauseContext context) Parameters Type Name Description VtlParser.PivotClauseContext context The parse tree. EnterRenameClause(VtlParser.RenameClauseContext) Enter a parse tree produced by renameClause() . Declaration void EnterRenameClause(VtlParser.RenameClauseContext context) Parameters Type Name Description VtlParser.RenameClauseContext context The parse tree. EnterRenameExpr(VtlParser.RenameExprContext) Enter a parse tree produced by renameExpr() . Declaration void EnterRenameExpr(VtlParser.RenameExprContext context) Parameters Type Name Description VtlParser.RenameExprContext context The parse tree. EnterRetainType(VtlParser.RetainTypeContext) Enter a parse tree produced by retainType() . Declaration void EnterRetainType(VtlParser.RetainTypeContext context) Parameters Type Name Description VtlParser.RetainTypeContext context The parse tree. EnterRuleClauseDatapoint(VtlParser.RuleClauseDatapointContext) Enter a parse tree produced by ruleClauseDatapoint() . Declaration void EnterRuleClauseDatapoint(VtlParser.RuleClauseDatapointContext context) Parameters Type Name Description VtlParser.RuleClauseDatapointContext context The parse tree. EnterRuleID(VtlParser.RuleIDContext) Enter a parse tree produced by ruleID() . Declaration void EnterRuleID(VtlParser.RuleIDContext context) Parameters Type Name Description VtlParser.RuleIDContext context The parse tree. EnterRuleItemDatapoint(VtlParser.RuleItemDatapointContext) Enter a parse tree produced by ruleItemDatapoint() . Declaration void EnterRuleItemDatapoint(VtlParser.RuleItemDatapointContext context) Parameters Type Name Description VtlParser.RuleItemDatapointContext context The parse tree. EnterRulesetID(VtlParser.RulesetIDContext) Enter a parse tree produced by rulesetID() . Declaration void EnterRulesetID(VtlParser.RulesetIDContext context) Parameters Type Name Description VtlParser.RulesetIDContext context The parse tree. EnterRulesetSignature(VtlParser.RulesetSignatureContext) Enter a parse tree produced by rulesetSignature() . Declaration void EnterRulesetSignature(VtlParser.RulesetSignatureContext context) Parameters Type Name Description VtlParser.RulesetSignatureContext context The parse tree. EnterScalar(VtlParser.ScalarContext) Enter a parse tree produced by scalar() . Declaration void EnterScalar(VtlParser.ScalarContext context) Parameters Type Name Description VtlParser.ScalarContext context The parse tree. EnterSecondWindowLimit(VtlParser.SecondWindowLimitContext) Enter a parse tree produced by secondWindowLimit() . Declaration void EnterSecondWindowLimit(VtlParser.SecondWindowLimitContext context) Parameters Type Name Description VtlParser.SecondWindowLimitContext context The parse tree. EnterSetExpr(VtlParser.SetExprContext) Enter a parse tree produced by setExpr() . Declaration void EnterSetExpr(VtlParser.SetExprContext context) Parameters Type Name Description VtlParser.SetExprContext context The parse tree. EnterStart(VtlParser.StartContext) Enter a parse tree produced by start() . Declaration void EnterStart(VtlParser.StartContext context) Parameters Type Name Description VtlParser.StartContext context The parse tree. EnterStatement(VtlParser.StatementContext) Enter a parse tree produced by statement() . Declaration void EnterStatement(VtlParser.StatementContext context) Parameters Type Name Description VtlParser.StatementContext context The parse tree. EnterSubspaceClause(VtlParser.SubspaceClauseContext) Enter a parse tree produced by subspaceClause() . Declaration void EnterSubspaceClause(VtlParser.SubspaceClauseContext context) Parameters Type Name Description VtlParser.SubspaceClauseContext context The parse tree. EnterSubspaceExpr(VtlParser.SubspaceExprContext) Enter a parse tree produced by subspaceExpr() . Declaration void EnterSubspaceExpr(VtlParser.SubspaceExprContext context) Parameters Type Name Description VtlParser.SubspaceExprContext context The parse tree. EnterUnopenedDataset(VtlParser.UnopenedDatasetContext) Enter a parse tree produced by unopenedDataset() . Declaration void EnterUnopenedDataset(VtlParser.UnopenedDatasetContext context) Parameters Type Name Description VtlParser.UnopenedDatasetContext context The parse tree. EnterUnpivotClause(VtlParser.UnpivotClauseContext) Enter a parse tree produced by unpivotClause() . Declaration void EnterUnpivotClause(VtlParser.UnpivotClauseContext context) Parameters Type Name Description VtlParser.UnpivotClauseContext context The parse tree. EnterValueDomainName(VtlParser.ValueDomainNameContext) Enter a parse tree produced by valueDomainName() . Declaration void EnterValueDomainName(VtlParser.ValueDomainNameContext context) Parameters Type Name Description VtlParser.ValueDomainNameContext context The parse tree. EnterVarID(VtlParser.VarIDContext) Enter a parse tree produced by varID() . Declaration void EnterVarID(VtlParser.VarIDContext context) Parameters Type Name Description VtlParser.VarIDContext context The parse tree. EnterVarSignature(VtlParser.VarSignatureContext) Enter a parse tree produced by varSignature() . Declaration void EnterVarSignature(VtlParser.VarSignatureContext context) Parameters Type Name Description VtlParser.VarSignatureContext context The parse tree. EnterWindowingClause(VtlParser.WindowingClauseContext) Enter a parse tree produced by windowingClause() . Declaration void EnterWindowingClause(VtlParser.WindowingClauseContext context) Parameters Type Name Description VtlParser.WindowingClauseContext context The parse tree. ExitAggrClause(VtlParser.AggrClauseContext) Exit a parse tree produced by aggrClause() . Declaration void ExitAggrClause(VtlParser.AggrClauseContext context) Parameters Type Name Description VtlParser.AggrClauseContext context The parse tree. ExitAggrExpr(VtlParser.AggrExprContext) Exit a parse tree produced by aggrExpr() . Declaration void ExitAggrExpr(VtlParser.AggrExprContext context) Parameters Type Name Description VtlParser.AggrExprContext context The parse tree. ExitAggrFunction(VtlParser.AggrFunctionContext) Exit a parse tree produced by aggrFunction() . Declaration void ExitAggrFunction(VtlParser.AggrFunctionContext context) Parameters Type Name Description VtlParser.AggrFunctionContext context The parse tree. ExitAggrFunctionName(VtlParser.AggrFunctionNameContext) Exit a parse tree produced by aggrFunctionName() . Declaration void ExitAggrFunctionName(VtlParser.AggrFunctionNameContext context) Parameters Type Name Description VtlParser.AggrFunctionNameContext context The parse tree. ExitAggrInvocation(VtlParser.AggrInvocationContext) Exit a parse tree produced by aggrInvocation() . Declaration void ExitAggrInvocation(VtlParser.AggrInvocationContext context) Parameters Type Name Description VtlParser.AggrInvocationContext context The parse tree. ExitAnalyticClause(VtlParser.AnalyticClauseContext) Exit a parse tree produced by analyticClause() . Declaration void ExitAnalyticClause(VtlParser.AnalyticClauseContext context) Parameters Type Name Description VtlParser.AnalyticClauseContext context The parse tree. ExitAnalyticFunction(VtlParser.AnalyticFunctionContext) Exit a parse tree produced by analyticFunction() . Declaration void ExitAnalyticFunction(VtlParser.AnalyticFunctionContext context) Parameters Type Name Description VtlParser.AnalyticFunctionContext context The parse tree. ExitAnalyticFunctionName(VtlParser.AnalyticFunctionNameContext) Exit a parse tree produced by analyticFunctionName() . Declaration void ExitAnalyticFunctionName(VtlParser.AnalyticFunctionNameContext context) Parameters Type Name Description VtlParser.AnalyticFunctionNameContext context The parse tree. ExitAnalyticInvocation(VtlParser.AnalyticInvocationContext) Exit a parse tree produced by analyticInvocation() . Declaration void ExitAnalyticInvocation(VtlParser.AnalyticInvocationContext context) Parameters Type Name Description VtlParser.AnalyticInvocationContext context The parse tree. ExitCalcClause(VtlParser.CalcClauseContext) Exit a parse tree produced by calcClause() . Declaration void ExitCalcClause(VtlParser.CalcClauseContext context) Parameters Type Name Description VtlParser.CalcClauseContext context The parse tree. ExitCalcExpr(VtlParser.CalcExprContext) Exit a parse tree produced by calcExpr() . Declaration void ExitCalcExpr(VtlParser.CalcExprContext context) Parameters Type Name Description VtlParser.CalcExprContext context The parse tree. ExitCheckDatapoint(VtlParser.CheckDatapointContext) Exit a parse tree produced by checkDatapoint() . Declaration void ExitCheckDatapoint(VtlParser.CheckDatapointContext context) Parameters Type Name Description VtlParser.CheckDatapointContext context The parse tree. ExitClosedDataset(VtlParser.ClosedDatasetContext) Exit a parse tree produced by closedDataset() . Declaration void ExitClosedDataset(VtlParser.ClosedDatasetContext context) Parameters Type Name Description VtlParser.ClosedDatasetContext context The parse tree. ExitComponent(VtlParser.ComponentContext) Exit a parse tree produced by component() . Declaration void ExitComponent(VtlParser.ComponentContext context) Parameters Type Name Description VtlParser.ComponentContext context The parse tree. ExitComponentID(VtlParser.ComponentIDContext) Exit a parse tree produced by componentID() . Declaration void ExitComponentID(VtlParser.ComponentIDContext context) Parameters Type Name Description VtlParser.ComponentIDContext context The parse tree. ExitComponentRole(VtlParser.ComponentRoleContext) Exit a parse tree produced by componentRole() . Declaration void ExitComponentRole(VtlParser.ComponentRoleContext context) Parameters Type Name Description VtlParser.ComponentRoleContext context The parse tree. ExitConstant(VtlParser.ConstantContext) Exit a parse tree produced by constant() . Declaration void ExitConstant(VtlParser.ConstantContext context) Parameters Type Name Description VtlParser.ConstantContext context The parse tree. ExitDataset(VtlParser.DatasetContext) Exit a parse tree produced by dataset() . Declaration void ExitDataset(VtlParser.DatasetContext context) Parameters Type Name Description VtlParser.DatasetContext context The parse tree. ExitDatasetClause(VtlParser.DatasetClauseContext) Exit a parse tree produced by datasetClause() . Declaration void ExitDatasetClause(VtlParser.DatasetClauseContext context) Parameters Type Name Description VtlParser.DatasetClauseContext context The parse tree. ExitDatasetComplex(VtlParser.DatasetComplexContext) Exit a parse tree produced by datasetComplex() . Declaration void ExitDatasetComplex(VtlParser.DatasetComplexContext context) Parameters Type Name Description VtlParser.DatasetComplexContext context The parse tree. ExitDatasetID(VtlParser.DatasetIDContext) Exit a parse tree produced by datasetID() . Declaration void ExitDatasetID(VtlParser.DatasetIDContext context) Parameters Type Name Description VtlParser.DatasetIDContext context The parse tree. ExitDefDatapoint(VtlParser.DefDatapointContext) Exit a parse tree produced by defDatapoint() . Declaration void ExitDefDatapoint(VtlParser.DefDatapointContext context) Parameters Type Name Description VtlParser.DefDatapointContext context The parse tree. ExitDefExpr(VtlParser.DefExprContext) Exit a parse tree produced by defExpr() . Declaration void ExitDefExpr(VtlParser.DefExprContext context) Parameters Type Name Description VtlParser.DefExprContext context The parse tree. ExitDropClause(VtlParser.DropClauseContext) Exit a parse tree produced by dropClause() . Declaration void ExitDropClause(VtlParser.DropClauseContext context) Parameters Type Name Description VtlParser.DropClauseContext context The parse tree. ExitErrorCode(VtlParser.ErrorCodeContext) Exit a parse tree produced by errorCode() . Declaration void ExitErrorCode(VtlParser.ErrorCodeContext context) Parameters Type Name Description VtlParser.ErrorCodeContext context The parse tree. ExitErrorLevel(VtlParser.ErrorLevelContext) Exit a parse tree produced by errorLevel() . Declaration void ExitErrorLevel(VtlParser.ErrorLevelContext context) Parameters Type Name Description VtlParser.ErrorLevelContext context The parse tree. ExitFilterClause(VtlParser.FilterClauseContext) Exit a parse tree produced by filterClause() . Declaration void ExitFilterClause(VtlParser.FilterClauseContext context) Parameters Type Name Description VtlParser.FilterClauseContext context The parse tree. ExitFirstWindowLimit(VtlParser.FirstWindowLimitContext) Exit a parse tree produced by firstWindowLimit() . Declaration void ExitFirstWindowLimit(VtlParser.FirstWindowLimitContext context) Parameters Type Name Description VtlParser.FirstWindowLimitContext context The parse tree. ExitGroupingClause(VtlParser.GroupingClauseContext) Exit a parse tree produced by groupingClause() . Declaration void ExitGroupingClause(VtlParser.GroupingClauseContext context) Parameters Type Name Description VtlParser.GroupingClauseContext context The parse tree. ExitGroupKeyword(VtlParser.GroupKeywordContext) Exit a parse tree produced by groupKeyword() . Declaration void ExitGroupKeyword(VtlParser.GroupKeywordContext context) Parameters Type Name Description VtlParser.GroupKeywordContext context The parse tree. ExitHavingClause(VtlParser.HavingClauseContext) Exit a parse tree produced by havingClause() . Declaration void ExitHavingClause(VtlParser.HavingClauseContext context) Parameters Type Name Description VtlParser.HavingClauseContext context The parse tree. ExitHavingExpr(VtlParser.HavingExprContext) Exit a parse tree produced by havingExpr() . Declaration void ExitHavingExpr(VtlParser.HavingExprContext context) Parameters Type Name Description VtlParser.HavingExprContext context The parse tree. ExitIfThenElseDataset(VtlParser.IfThenElseDatasetContext) Exit a parse tree produced by ifThenElseDataset() . Declaration void ExitIfThenElseDataset(VtlParser.IfThenElseDatasetContext context) Parameters Type Name Description VtlParser.IfThenElseDatasetContext context The parse tree. ExitIfThenElseScalar(VtlParser.IfThenElseScalarContext) Exit a parse tree produced by ifThenElseScalar() . Declaration void ExitIfThenElseScalar(VtlParser.IfThenElseScalarContext context) Parameters Type Name Description VtlParser.IfThenElseScalarContext context The parse tree. ExitJoinAggrClause(VtlParser.JoinAggrClauseContext) Exit a parse tree produced by joinAggrClause() . Declaration void ExitJoinAggrClause(VtlParser.JoinAggrClauseContext context) Parameters Type Name Description VtlParser.JoinAggrClauseContext context The parse tree. ExitJoinAliasesClause(VtlParser.JoinAliasesClauseContext) Exit a parse tree produced by joinAliasesClause() . Declaration void ExitJoinAliasesClause(VtlParser.JoinAliasesClauseContext context) Parameters Type Name Description VtlParser.JoinAliasesClauseContext context The parse tree. ExitJoinAliasExpr(VtlParser.JoinAliasExprContext) Exit a parse tree produced by joinAliasExpr() . Declaration void ExitJoinAliasExpr(VtlParser.JoinAliasExprContext context) Parameters Type Name Description VtlParser.JoinAliasExprContext context The parse tree. ExitJoinApplyClause(VtlParser.JoinApplyClauseContext) Exit a parse tree produced by joinApplyClause() . Declaration void ExitJoinApplyClause(VtlParser.JoinApplyClauseContext context) Parameters Type Name Description VtlParser.JoinApplyClauseContext context The parse tree. ExitJoinBody(VtlParser.JoinBodyContext) Exit a parse tree produced by joinBody() . Declaration void ExitJoinBody(VtlParser.JoinBodyContext context) Parameters Type Name Description VtlParser.JoinBodyContext context The parse tree. ExitJoinCalcClause(VtlParser.JoinCalcClauseContext) Exit a parse tree produced by joinCalcClause() . Declaration void ExitJoinCalcClause(VtlParser.JoinCalcClauseContext context) Parameters Type Name Description VtlParser.JoinCalcClauseContext context The parse tree. ExitJoinClause(VtlParser.JoinClauseContext) Exit a parse tree produced by joinClause() . Declaration void ExitJoinClause(VtlParser.JoinClauseContext context) Parameters Type Name Description VtlParser.JoinClauseContext context The parse tree. ExitJoinDropClause(VtlParser.JoinDropClauseContext) Exit a parse tree produced by joinDropClause() . Declaration void ExitJoinDropClause(VtlParser.JoinDropClauseContext context) Parameters Type Name Description VtlParser.JoinDropClauseContext context The parse tree. ExitJoinExpr(VtlParser.JoinExprContext) Exit a parse tree produced by joinExpr() . Declaration void ExitJoinExpr(VtlParser.JoinExprContext context) Parameters Type Name Description VtlParser.JoinExprContext context The parse tree. ExitJoinFilterClause(VtlParser.JoinFilterClauseContext) Exit a parse tree produced by joinFilterClause() . Declaration void ExitJoinFilterClause(VtlParser.JoinFilterClauseContext context) Parameters Type Name Description VtlParser.JoinFilterClauseContext context The parse tree. ExitJoinKeepClause(VtlParser.JoinKeepClauseContext) Exit a parse tree produced by joinKeepClause() . Declaration void ExitJoinKeepClause(VtlParser.JoinKeepClauseContext context) Parameters Type Name Description VtlParser.JoinKeepClauseContext context The parse tree. ExitJoinKeyword(VtlParser.JoinKeywordContext) Exit a parse tree produced by joinKeyword() . Declaration void ExitJoinKeyword(VtlParser.JoinKeywordContext context) Parameters Type Name Description VtlParser.JoinKeywordContext context The parse tree. ExitJoinRenameClause(VtlParser.JoinRenameClauseContext) Exit a parse tree produced by joinRenameClause() . Declaration void ExitJoinRenameClause(VtlParser.JoinRenameClauseContext context) Parameters Type Name Description VtlParser.JoinRenameClauseContext context The parse tree. ExitJoinUsingClause(VtlParser.JoinUsingClauseContext) Exit a parse tree produced by joinUsingClause() . Declaration void ExitJoinUsingClause(VtlParser.JoinUsingClauseContext context) Parameters Type Name Description VtlParser.JoinUsingClauseContext context The parse tree. ExitKeepClause(VtlParser.KeepClauseContext) Exit a parse tree produced by keepClause() . Declaration void ExitKeepClause(VtlParser.KeepClauseContext context) Parameters Type Name Description VtlParser.KeepClauseContext context The parse tree. ExitLimitsMethod(VtlParser.LimitsMethodContext) Exit a parse tree produced by limitsMethod() . Declaration void ExitLimitsMethod(VtlParser.LimitsMethodContext context) Parameters Type Name Description VtlParser.LimitsMethodContext context The parse tree. ExitList(VtlParser.ListContext) Exit a parse tree produced by list() . Declaration void ExitList(VtlParser.ListContext context) Parameters Type Name Description VtlParser.ListContext context The parse tree. ExitMembershipDataset(VtlParser.MembershipDatasetContext) Exit a parse tree produced by membershipDataset() . Declaration void ExitMembershipDataset(VtlParser.MembershipDatasetContext context) Parameters Type Name Description VtlParser.MembershipDatasetContext context The parse tree. ExitOpenedDataset(VtlParser.OpenedDatasetContext) Exit a parse tree produced by openedDataset() . Declaration void ExitOpenedDataset(VtlParser.OpenedDatasetContext context) Parameters Type Name Description VtlParser.OpenedDatasetContext context The parse tree. ExitOptionalExpr(VtlParser.OptionalExprContext) Exit a parse tree produced by optionalExpr() . Declaration void ExitOptionalExpr(VtlParser.OptionalExprContext context) Parameters Type Name Description VtlParser.OptionalExprContext context The parse tree. ExitOrderClause(VtlParser.OrderClauseContext) Exit a parse tree produced by orderClause() . Declaration void ExitOrderClause(VtlParser.OrderClauseContext context) Parameters Type Name Description VtlParser.OrderClauseContext context The parse tree. ExitOrderExpr(VtlParser.OrderExprContext) Exit a parse tree produced by orderExpr() . Declaration void ExitOrderExpr(VtlParser.OrderExprContext context) Parameters Type Name Description VtlParser.OrderExprContext context The parse tree. ExitPartitionClause(VtlParser.PartitionClauseContext) Exit a parse tree produced by partitionClause() . Declaration void ExitPartitionClause(VtlParser.PartitionClauseContext context) Parameters Type Name Description VtlParser.PartitionClauseContext context The parse tree. ExitPivotClause(VtlParser.PivotClauseContext) Exit a parse tree produced by pivotClause() . Declaration void ExitPivotClause(VtlParser.PivotClauseContext context) Parameters Type Name Description VtlParser.PivotClauseContext context The parse tree. ExitRenameClause(VtlParser.RenameClauseContext) Exit a parse tree produced by renameClause() . Declaration void ExitRenameClause(VtlParser.RenameClauseContext context) Parameters Type Name Description VtlParser.RenameClauseContext context The parse tree. ExitRenameExpr(VtlParser.RenameExprContext) Exit a parse tree produced by renameExpr() . Declaration void ExitRenameExpr(VtlParser.RenameExprContext context) Parameters Type Name Description VtlParser.RenameExprContext context The parse tree. ExitRetainType(VtlParser.RetainTypeContext) Exit a parse tree produced by retainType() . Declaration void ExitRetainType(VtlParser.RetainTypeContext context) Parameters Type Name Description VtlParser.RetainTypeContext context The parse tree. ExitRuleClauseDatapoint(VtlParser.RuleClauseDatapointContext) Exit a parse tree produced by ruleClauseDatapoint() . Declaration void ExitRuleClauseDatapoint(VtlParser.RuleClauseDatapointContext context) Parameters Type Name Description VtlParser.RuleClauseDatapointContext context The parse tree. ExitRuleID(VtlParser.RuleIDContext) Exit a parse tree produced by ruleID() . Declaration void ExitRuleID(VtlParser.RuleIDContext context) Parameters Type Name Description VtlParser.RuleIDContext context The parse tree. ExitRuleItemDatapoint(VtlParser.RuleItemDatapointContext) Exit a parse tree produced by ruleItemDatapoint() . Declaration void ExitRuleItemDatapoint(VtlParser.RuleItemDatapointContext context) Parameters Type Name Description VtlParser.RuleItemDatapointContext context The parse tree. ExitRulesetID(VtlParser.RulesetIDContext) Exit a parse tree produced by rulesetID() . Declaration void ExitRulesetID(VtlParser.RulesetIDContext context) Parameters Type Name Description VtlParser.RulesetIDContext context The parse tree. ExitRulesetSignature(VtlParser.RulesetSignatureContext) Exit a parse tree produced by rulesetSignature() . Declaration void ExitRulesetSignature(VtlParser.RulesetSignatureContext context) Parameters Type Name Description VtlParser.RulesetSignatureContext context The parse tree. ExitScalar(VtlParser.ScalarContext) Exit a parse tree produced by scalar() . Declaration void ExitScalar(VtlParser.ScalarContext context) Parameters Type Name Description VtlParser.ScalarContext context The parse tree. ExitSecondWindowLimit(VtlParser.SecondWindowLimitContext) Exit a parse tree produced by secondWindowLimit() . Declaration void ExitSecondWindowLimit(VtlParser.SecondWindowLimitContext context) Parameters Type Name Description VtlParser.SecondWindowLimitContext context The parse tree. ExitSetExpr(VtlParser.SetExprContext) Exit a parse tree produced by setExpr() . Declaration void ExitSetExpr(VtlParser.SetExprContext context) Parameters Type Name Description VtlParser.SetExprContext context The parse tree. ExitStart(VtlParser.StartContext) Exit a parse tree produced by start() . Declaration void ExitStart(VtlParser.StartContext context) Parameters Type Name Description VtlParser.StartContext context The parse tree. ExitStatement(VtlParser.StatementContext) Exit a parse tree produced by statement() . Declaration void ExitStatement(VtlParser.StatementContext context) Parameters Type Name Description VtlParser.StatementContext context The parse tree. ExitSubspaceClause(VtlParser.SubspaceClauseContext) Exit a parse tree produced by subspaceClause() . Declaration void ExitSubspaceClause(VtlParser.SubspaceClauseContext context) Parameters Type Name Description VtlParser.SubspaceClauseContext context The parse tree. ExitSubspaceExpr(VtlParser.SubspaceExprContext) Exit a parse tree produced by subspaceExpr() . Declaration void ExitSubspaceExpr(VtlParser.SubspaceExprContext context) Parameters Type Name Description VtlParser.SubspaceExprContext context The parse tree. ExitUnopenedDataset(VtlParser.UnopenedDatasetContext) Exit a parse tree produced by unopenedDataset() . Declaration void ExitUnopenedDataset(VtlParser.UnopenedDatasetContext context) Parameters Type Name Description VtlParser.UnopenedDatasetContext context The parse tree. ExitUnpivotClause(VtlParser.UnpivotClauseContext) Exit a parse tree produced by unpivotClause() . Declaration void ExitUnpivotClause(VtlParser.UnpivotClauseContext context) Parameters Type Name Description VtlParser.UnpivotClauseContext context The parse tree. ExitValueDomainName(VtlParser.ValueDomainNameContext) Exit a parse tree produced by valueDomainName() . Declaration void ExitValueDomainName(VtlParser.ValueDomainNameContext context) Parameters Type Name Description VtlParser.ValueDomainNameContext context The parse tree. ExitVarID(VtlParser.VarIDContext) Exit a parse tree produced by varID() . Declaration void ExitVarID(VtlParser.VarIDContext context) Parameters Type Name Description VtlParser.VarIDContext context The parse tree. ExitVarSignature(VtlParser.VarSignatureContext) Exit a parse tree produced by varSignature() . Declaration void ExitVarSignature(VtlParser.VarSignatureContext context) Parameters Type Name Description VtlParser.VarSignatureContext context The parse tree. ExitWindowingClause(VtlParser.WindowingClauseContext) Exit a parse tree produced by windowingClause() . Declaration void ExitWindowingClause(VtlParser.WindowingClauseContext context) Parameters Type Name Description VtlParser.WindowingClauseContext context The parse tree. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.IVtlVisitor-1.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.IVtlVisitor-1.html",
    "title": "Interface IVtlVisitor<Result> | VTL Processing API documentation",
    "keywords": "Interface IVtlVisitor<Result> This interface defines a complete generic visitor for a parse tree produced by VtlParser . Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IVtlVisitor<Result> : IParseTreeVisitor<Result> Type Parameters Name Description Result The return type of the visit operation. Methods VisitAggrClause(VtlParser.AggrClauseContext) Visit a parse tree produced by aggrClause() . Declaration Result VisitAggrClause(VtlParser.AggrClauseContext context) Parameters Type Name Description VtlParser.AggrClauseContext context The parse tree. Returns Type Description Result VisitAggrExpr(VtlParser.AggrExprContext) Visit a parse tree produced by aggrExpr() . Declaration Result VisitAggrExpr(VtlParser.AggrExprContext context) Parameters Type Name Description VtlParser.AggrExprContext context The parse tree. Returns Type Description Result VisitAggrFunction(VtlParser.AggrFunctionContext) Visit a parse tree produced by aggrFunction() . Declaration Result VisitAggrFunction(VtlParser.AggrFunctionContext context) Parameters Type Name Description VtlParser.AggrFunctionContext context The parse tree. Returns Type Description Result VisitAggrFunctionName(VtlParser.AggrFunctionNameContext) Visit a parse tree produced by aggrFunctionName() . Declaration Result VisitAggrFunctionName(VtlParser.AggrFunctionNameContext context) Parameters Type Name Description VtlParser.AggrFunctionNameContext context The parse tree. Returns Type Description Result VisitAggrInvocation(VtlParser.AggrInvocationContext) Visit a parse tree produced by aggrInvocation() . Declaration Result VisitAggrInvocation(VtlParser.AggrInvocationContext context) Parameters Type Name Description VtlParser.AggrInvocationContext context The parse tree. Returns Type Description Result VisitAnalyticClause(VtlParser.AnalyticClauseContext) Visit a parse tree produced by analyticClause() . Declaration Result VisitAnalyticClause(VtlParser.AnalyticClauseContext context) Parameters Type Name Description VtlParser.AnalyticClauseContext context The parse tree. Returns Type Description Result VisitAnalyticFunction(VtlParser.AnalyticFunctionContext) Visit a parse tree produced by analyticFunction() . Declaration Result VisitAnalyticFunction(VtlParser.AnalyticFunctionContext context) Parameters Type Name Description VtlParser.AnalyticFunctionContext context The parse tree. Returns Type Description Result VisitAnalyticFunctionName(VtlParser.AnalyticFunctionNameContext) Visit a parse tree produced by analyticFunctionName() . Declaration Result VisitAnalyticFunctionName(VtlParser.AnalyticFunctionNameContext context) Parameters Type Name Description VtlParser.AnalyticFunctionNameContext context The parse tree. Returns Type Description Result VisitAnalyticInvocation(VtlParser.AnalyticInvocationContext) Visit a parse tree produced by analyticInvocation() . Declaration Result VisitAnalyticInvocation(VtlParser.AnalyticInvocationContext context) Parameters Type Name Description VtlParser.AnalyticInvocationContext context The parse tree. Returns Type Description Result VisitCalcClause(VtlParser.CalcClauseContext) Visit a parse tree produced by calcClause() . Declaration Result VisitCalcClause(VtlParser.CalcClauseContext context) Parameters Type Name Description VtlParser.CalcClauseContext context The parse tree. Returns Type Description Result VisitCalcExpr(VtlParser.CalcExprContext) Visit a parse tree produced by calcExpr() . Declaration Result VisitCalcExpr(VtlParser.CalcExprContext context) Parameters Type Name Description VtlParser.CalcExprContext context The parse tree. Returns Type Description Result VisitCheckDatapoint(VtlParser.CheckDatapointContext) Visit a parse tree produced by checkDatapoint() . Declaration Result VisitCheckDatapoint(VtlParser.CheckDatapointContext context) Parameters Type Name Description VtlParser.CheckDatapointContext context The parse tree. Returns Type Description Result VisitClosedDataset(VtlParser.ClosedDatasetContext) Visit a parse tree produced by closedDataset() . Declaration Result VisitClosedDataset(VtlParser.ClosedDatasetContext context) Parameters Type Name Description VtlParser.ClosedDatasetContext context The parse tree. Returns Type Description Result VisitComponent(VtlParser.ComponentContext) Visit a parse tree produced by component() . Declaration Result VisitComponent(VtlParser.ComponentContext context) Parameters Type Name Description VtlParser.ComponentContext context The parse tree. Returns Type Description Result VisitComponentID(VtlParser.ComponentIDContext) Visit a parse tree produced by componentID() . Declaration Result VisitComponentID(VtlParser.ComponentIDContext context) Parameters Type Name Description VtlParser.ComponentIDContext context The parse tree. Returns Type Description Result VisitComponentRole(VtlParser.ComponentRoleContext) Visit a parse tree produced by componentRole() . Declaration Result VisitComponentRole(VtlParser.ComponentRoleContext context) Parameters Type Name Description VtlParser.ComponentRoleContext context The parse tree. Returns Type Description Result VisitConstant(VtlParser.ConstantContext) Visit a parse tree produced by constant() . Declaration Result VisitConstant(VtlParser.ConstantContext context) Parameters Type Name Description VtlParser.ConstantContext context The parse tree. Returns Type Description Result VisitDataset(VtlParser.DatasetContext) Visit a parse tree produced by dataset() . Declaration Result VisitDataset(VtlParser.DatasetContext context) Parameters Type Name Description VtlParser.DatasetContext context The parse tree. Returns Type Description Result VisitDatasetClause(VtlParser.DatasetClauseContext) Visit a parse tree produced by datasetClause() . Declaration Result VisitDatasetClause(VtlParser.DatasetClauseContext context) Parameters Type Name Description VtlParser.DatasetClauseContext context The parse tree. Returns Type Description Result VisitDatasetComplex(VtlParser.DatasetComplexContext) Visit a parse tree produced by datasetComplex() . Declaration Result VisitDatasetComplex(VtlParser.DatasetComplexContext context) Parameters Type Name Description VtlParser.DatasetComplexContext context The parse tree. Returns Type Description Result VisitDatasetID(VtlParser.DatasetIDContext) Visit a parse tree produced by datasetID() . Declaration Result VisitDatasetID(VtlParser.DatasetIDContext context) Parameters Type Name Description VtlParser.DatasetIDContext context The parse tree. Returns Type Description Result VisitDefDatapoint(VtlParser.DefDatapointContext) Visit a parse tree produced by defDatapoint() . Declaration Result VisitDefDatapoint(VtlParser.DefDatapointContext context) Parameters Type Name Description VtlParser.DefDatapointContext context The parse tree. Returns Type Description Result VisitDefExpr(VtlParser.DefExprContext) Visit a parse tree produced by defExpr() . Declaration Result VisitDefExpr(VtlParser.DefExprContext context) Parameters Type Name Description VtlParser.DefExprContext context The parse tree. Returns Type Description Result VisitDropClause(VtlParser.DropClauseContext) Visit a parse tree produced by dropClause() . Declaration Result VisitDropClause(VtlParser.DropClauseContext context) Parameters Type Name Description VtlParser.DropClauseContext context The parse tree. Returns Type Description Result VisitErrorCode(VtlParser.ErrorCodeContext) Visit a parse tree produced by errorCode() . Declaration Result VisitErrorCode(VtlParser.ErrorCodeContext context) Parameters Type Name Description VtlParser.ErrorCodeContext context The parse tree. Returns Type Description Result VisitErrorLevel(VtlParser.ErrorLevelContext) Visit a parse tree produced by errorLevel() . Declaration Result VisitErrorLevel(VtlParser.ErrorLevelContext context) Parameters Type Name Description VtlParser.ErrorLevelContext context The parse tree. Returns Type Description Result VisitFilterClause(VtlParser.FilterClauseContext) Visit a parse tree produced by filterClause() . Declaration Result VisitFilterClause(VtlParser.FilterClauseContext context) Parameters Type Name Description VtlParser.FilterClauseContext context The parse tree. Returns Type Description Result VisitFirstWindowLimit(VtlParser.FirstWindowLimitContext) Visit a parse tree produced by firstWindowLimit() . Declaration Result VisitFirstWindowLimit(VtlParser.FirstWindowLimitContext context) Parameters Type Name Description VtlParser.FirstWindowLimitContext context The parse tree. Returns Type Description Result VisitGroupingClause(VtlParser.GroupingClauseContext) Visit a parse tree produced by groupingClause() . Declaration Result VisitGroupingClause(VtlParser.GroupingClauseContext context) Parameters Type Name Description VtlParser.GroupingClauseContext context The parse tree. Returns Type Description Result VisitGroupKeyword(VtlParser.GroupKeywordContext) Visit a parse tree produced by groupKeyword() . Declaration Result VisitGroupKeyword(VtlParser.GroupKeywordContext context) Parameters Type Name Description VtlParser.GroupKeywordContext context The parse tree. Returns Type Description Result VisitHavingClause(VtlParser.HavingClauseContext) Visit a parse tree produced by havingClause() . Declaration Result VisitHavingClause(VtlParser.HavingClauseContext context) Parameters Type Name Description VtlParser.HavingClauseContext context The parse tree. Returns Type Description Result VisitHavingExpr(VtlParser.HavingExprContext) Visit a parse tree produced by havingExpr() . Declaration Result VisitHavingExpr(VtlParser.HavingExprContext context) Parameters Type Name Description VtlParser.HavingExprContext context The parse tree. Returns Type Description Result VisitIfThenElseDataset(VtlParser.IfThenElseDatasetContext) Visit a parse tree produced by ifThenElseDataset() . Declaration Result VisitIfThenElseDataset(VtlParser.IfThenElseDatasetContext context) Parameters Type Name Description VtlParser.IfThenElseDatasetContext context The parse tree. Returns Type Description Result VisitIfThenElseScalar(VtlParser.IfThenElseScalarContext) Visit a parse tree produced by ifThenElseScalar() . Declaration Result VisitIfThenElseScalar(VtlParser.IfThenElseScalarContext context) Parameters Type Name Description VtlParser.IfThenElseScalarContext context The parse tree. Returns Type Description Result VisitJoinAggrClause(VtlParser.JoinAggrClauseContext) Visit a parse tree produced by joinAggrClause() . Declaration Result VisitJoinAggrClause(VtlParser.JoinAggrClauseContext context) Parameters Type Name Description VtlParser.JoinAggrClauseContext context The parse tree. Returns Type Description Result VisitJoinAliasesClause(VtlParser.JoinAliasesClauseContext) Visit a parse tree produced by joinAliasesClause() . Declaration Result VisitJoinAliasesClause(VtlParser.JoinAliasesClauseContext context) Parameters Type Name Description VtlParser.JoinAliasesClauseContext context The parse tree. Returns Type Description Result VisitJoinAliasExpr(VtlParser.JoinAliasExprContext) Visit a parse tree produced by joinAliasExpr() . Declaration Result VisitJoinAliasExpr(VtlParser.JoinAliasExprContext context) Parameters Type Name Description VtlParser.JoinAliasExprContext context The parse tree. Returns Type Description Result VisitJoinApplyClause(VtlParser.JoinApplyClauseContext) Visit a parse tree produced by joinApplyClause() . Declaration Result VisitJoinApplyClause(VtlParser.JoinApplyClauseContext context) Parameters Type Name Description VtlParser.JoinApplyClauseContext context The parse tree. Returns Type Description Result VisitJoinBody(VtlParser.JoinBodyContext) Visit a parse tree produced by joinBody() . Declaration Result VisitJoinBody(VtlParser.JoinBodyContext context) Parameters Type Name Description VtlParser.JoinBodyContext context The parse tree. Returns Type Description Result VisitJoinCalcClause(VtlParser.JoinCalcClauseContext) Visit a parse tree produced by joinCalcClause() . Declaration Result VisitJoinCalcClause(VtlParser.JoinCalcClauseContext context) Parameters Type Name Description VtlParser.JoinCalcClauseContext context The parse tree. Returns Type Description Result VisitJoinClause(VtlParser.JoinClauseContext) Visit a parse tree produced by joinClause() . Declaration Result VisitJoinClause(VtlParser.JoinClauseContext context) Parameters Type Name Description VtlParser.JoinClauseContext context The parse tree. Returns Type Description Result VisitJoinDropClause(VtlParser.JoinDropClauseContext) Visit a parse tree produced by joinDropClause() . Declaration Result VisitJoinDropClause(VtlParser.JoinDropClauseContext context) Parameters Type Name Description VtlParser.JoinDropClauseContext context The parse tree. Returns Type Description Result VisitJoinExpr(VtlParser.JoinExprContext) Visit a parse tree produced by joinExpr() . Declaration Result VisitJoinExpr(VtlParser.JoinExprContext context) Parameters Type Name Description VtlParser.JoinExprContext context The parse tree. Returns Type Description Result VisitJoinFilterClause(VtlParser.JoinFilterClauseContext) Visit a parse tree produced by joinFilterClause() . Declaration Result VisitJoinFilterClause(VtlParser.JoinFilterClauseContext context) Parameters Type Name Description VtlParser.JoinFilterClauseContext context The parse tree. Returns Type Description Result VisitJoinKeepClause(VtlParser.JoinKeepClauseContext) Visit a parse tree produced by joinKeepClause() . Declaration Result VisitJoinKeepClause(VtlParser.JoinKeepClauseContext context) Parameters Type Name Description VtlParser.JoinKeepClauseContext context The parse tree. Returns Type Description Result VisitJoinKeyword(VtlParser.JoinKeywordContext) Visit a parse tree produced by joinKeyword() . Declaration Result VisitJoinKeyword(VtlParser.JoinKeywordContext context) Parameters Type Name Description VtlParser.JoinKeywordContext context The parse tree. Returns Type Description Result VisitJoinRenameClause(VtlParser.JoinRenameClauseContext) Visit a parse tree produced by joinRenameClause() . Declaration Result VisitJoinRenameClause(VtlParser.JoinRenameClauseContext context) Parameters Type Name Description VtlParser.JoinRenameClauseContext context The parse tree. Returns Type Description Result VisitJoinUsingClause(VtlParser.JoinUsingClauseContext) Visit a parse tree produced by joinUsingClause() . Declaration Result VisitJoinUsingClause(VtlParser.JoinUsingClauseContext context) Parameters Type Name Description VtlParser.JoinUsingClauseContext context The parse tree. Returns Type Description Result VisitKeepClause(VtlParser.KeepClauseContext) Visit a parse tree produced by keepClause() . Declaration Result VisitKeepClause(VtlParser.KeepClauseContext context) Parameters Type Name Description VtlParser.KeepClauseContext context The parse tree. Returns Type Description Result VisitLimitsMethod(VtlParser.LimitsMethodContext) Visit a parse tree produced by limitsMethod() . Declaration Result VisitLimitsMethod(VtlParser.LimitsMethodContext context) Parameters Type Name Description VtlParser.LimitsMethodContext context The parse tree. Returns Type Description Result VisitList(VtlParser.ListContext) Visit a parse tree produced by list() . Declaration Result VisitList(VtlParser.ListContext context) Parameters Type Name Description VtlParser.ListContext context The parse tree. Returns Type Description Result VisitMembershipDataset(VtlParser.MembershipDatasetContext) Visit a parse tree produced by membershipDataset() . Declaration Result VisitMembershipDataset(VtlParser.MembershipDatasetContext context) Parameters Type Name Description VtlParser.MembershipDatasetContext context The parse tree. Returns Type Description Result VisitOpenedDataset(VtlParser.OpenedDatasetContext) Visit a parse tree produced by openedDataset() . Declaration Result VisitOpenedDataset(VtlParser.OpenedDatasetContext context) Parameters Type Name Description VtlParser.OpenedDatasetContext context The parse tree. Returns Type Description Result VisitOptionalExpr(VtlParser.OptionalExprContext) Visit a parse tree produced by optionalExpr() . Declaration Result VisitOptionalExpr(VtlParser.OptionalExprContext context) Parameters Type Name Description VtlParser.OptionalExprContext context The parse tree. Returns Type Description Result VisitOrderClause(VtlParser.OrderClauseContext) Visit a parse tree produced by orderClause() . Declaration Result VisitOrderClause(VtlParser.OrderClauseContext context) Parameters Type Name Description VtlParser.OrderClauseContext context The parse tree. Returns Type Description Result VisitOrderExpr(VtlParser.OrderExprContext) Visit a parse tree produced by orderExpr() . Declaration Result VisitOrderExpr(VtlParser.OrderExprContext context) Parameters Type Name Description VtlParser.OrderExprContext context The parse tree. Returns Type Description Result VisitPartitionClause(VtlParser.PartitionClauseContext) Visit a parse tree produced by partitionClause() . Declaration Result VisitPartitionClause(VtlParser.PartitionClauseContext context) Parameters Type Name Description VtlParser.PartitionClauseContext context The parse tree. Returns Type Description Result VisitPivotClause(VtlParser.PivotClauseContext) Visit a parse tree produced by pivotClause() . Declaration Result VisitPivotClause(VtlParser.PivotClauseContext context) Parameters Type Name Description VtlParser.PivotClauseContext context The parse tree. Returns Type Description Result VisitRenameClause(VtlParser.RenameClauseContext) Visit a parse tree produced by renameClause() . Declaration Result VisitRenameClause(VtlParser.RenameClauseContext context) Parameters Type Name Description VtlParser.RenameClauseContext context The parse tree. Returns Type Description Result VisitRenameExpr(VtlParser.RenameExprContext) Visit a parse tree produced by renameExpr() . Declaration Result VisitRenameExpr(VtlParser.RenameExprContext context) Parameters Type Name Description VtlParser.RenameExprContext context The parse tree. Returns Type Description Result VisitRetainType(VtlParser.RetainTypeContext) Visit a parse tree produced by retainType() . Declaration Result VisitRetainType(VtlParser.RetainTypeContext context) Parameters Type Name Description VtlParser.RetainTypeContext context The parse tree. Returns Type Description Result VisitRuleClauseDatapoint(VtlParser.RuleClauseDatapointContext) Visit a parse tree produced by ruleClauseDatapoint() . Declaration Result VisitRuleClauseDatapoint(VtlParser.RuleClauseDatapointContext context) Parameters Type Name Description VtlParser.RuleClauseDatapointContext context The parse tree. Returns Type Description Result VisitRuleID(VtlParser.RuleIDContext) Visit a parse tree produced by ruleID() . Declaration Result VisitRuleID(VtlParser.RuleIDContext context) Parameters Type Name Description VtlParser.RuleIDContext context The parse tree. Returns Type Description Result VisitRuleItemDatapoint(VtlParser.RuleItemDatapointContext) Visit a parse tree produced by ruleItemDatapoint() . Declaration Result VisitRuleItemDatapoint(VtlParser.RuleItemDatapointContext context) Parameters Type Name Description VtlParser.RuleItemDatapointContext context The parse tree. Returns Type Description Result VisitRulesetID(VtlParser.RulesetIDContext) Visit a parse tree produced by rulesetID() . Declaration Result VisitRulesetID(VtlParser.RulesetIDContext context) Parameters Type Name Description VtlParser.RulesetIDContext context The parse tree. Returns Type Description Result VisitRulesetSignature(VtlParser.RulesetSignatureContext) Visit a parse tree produced by rulesetSignature() . Declaration Result VisitRulesetSignature(VtlParser.RulesetSignatureContext context) Parameters Type Name Description VtlParser.RulesetSignatureContext context The parse tree. Returns Type Description Result VisitScalar(VtlParser.ScalarContext) Visit a parse tree produced by scalar() . Declaration Result VisitScalar(VtlParser.ScalarContext context) Parameters Type Name Description VtlParser.ScalarContext context The parse tree. Returns Type Description Result VisitSecondWindowLimit(VtlParser.SecondWindowLimitContext) Visit a parse tree produced by secondWindowLimit() . Declaration Result VisitSecondWindowLimit(VtlParser.SecondWindowLimitContext context) Parameters Type Name Description VtlParser.SecondWindowLimitContext context The parse tree. Returns Type Description Result VisitSetExpr(VtlParser.SetExprContext) Visit a parse tree produced by setExpr() . Declaration Result VisitSetExpr(VtlParser.SetExprContext context) Parameters Type Name Description VtlParser.SetExprContext context The parse tree. Returns Type Description Result VisitStart(VtlParser.StartContext) Visit a parse tree produced by start() . Declaration Result VisitStart(VtlParser.StartContext context) Parameters Type Name Description VtlParser.StartContext context The parse tree. Returns Type Description Result VisitStatement(VtlParser.StatementContext) Visit a parse tree produced by statement() . Declaration Result VisitStatement(VtlParser.StatementContext context) Parameters Type Name Description VtlParser.StatementContext context The parse tree. Returns Type Description Result VisitSubspaceClause(VtlParser.SubspaceClauseContext) Visit a parse tree produced by subspaceClause() . Declaration Result VisitSubspaceClause(VtlParser.SubspaceClauseContext context) Parameters Type Name Description VtlParser.SubspaceClauseContext context The parse tree. Returns Type Description Result VisitSubspaceExpr(VtlParser.SubspaceExprContext) Visit a parse tree produced by subspaceExpr() . Declaration Result VisitSubspaceExpr(VtlParser.SubspaceExprContext context) Parameters Type Name Description VtlParser.SubspaceExprContext context The parse tree. Returns Type Description Result VisitUnopenedDataset(VtlParser.UnopenedDatasetContext) Visit a parse tree produced by unopenedDataset() . Declaration Result VisitUnopenedDataset(VtlParser.UnopenedDatasetContext context) Parameters Type Name Description VtlParser.UnopenedDatasetContext context The parse tree. Returns Type Description Result VisitUnpivotClause(VtlParser.UnpivotClauseContext) Visit a parse tree produced by unpivotClause() . Declaration Result VisitUnpivotClause(VtlParser.UnpivotClauseContext context) Parameters Type Name Description VtlParser.UnpivotClauseContext context The parse tree. Returns Type Description Result VisitValueDomainName(VtlParser.ValueDomainNameContext) Visit a parse tree produced by valueDomainName() . Declaration Result VisitValueDomainName(VtlParser.ValueDomainNameContext context) Parameters Type Name Description VtlParser.ValueDomainNameContext context The parse tree. Returns Type Description Result VisitVarID(VtlParser.VarIDContext) Visit a parse tree produced by varID() . Declaration Result VisitVarID(VtlParser.VarIDContext context) Parameters Type Name Description VtlParser.VarIDContext context The parse tree. Returns Type Description Result VisitVarSignature(VtlParser.VarSignatureContext) Visit a parse tree produced by varSignature() . Declaration Result VisitVarSignature(VtlParser.VarSignatureContext context) Parameters Type Name Description VtlParser.VarSignatureContext context The parse tree. Returns Type Description Result VisitWindowingClause(VtlParser.WindowingClauseContext) Visit a parse tree produced by windowingClause() . Declaration Result VisitWindowingClause(VtlParser.WindowingClauseContext context) Parameters Type Name Description VtlParser.WindowingClauseContext context The parse tree. Returns Type Description Result Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseListener.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseListener.html",
    "title": "Class VtlBaseListener | VTL Processing API documentation",
    "keywords": "Class VtlBaseListener This class provides an empty implementation of IVtlListener , which can be extended to create a listener which only needs to handle a subset of the available methods. Inheritance System.Object VtlBaseListener Implements IVtlListener Antlr4.Runtime.Tree.IParseTreeListener Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class VtlBaseListener : object, IVtlListener, Antlr4.Runtime.Tree.IParseTreeListener Methods EnterAggrClause(VtlParser.AggrClauseContext) Enter a parse tree produced by aggrClause() . The default implementation does nothing. Declaration public virtual void EnterAggrClause(VtlParser.AggrClauseContext context) Parameters Type Name Description VtlParser.AggrClauseContext context The parse tree. EnterAggrExpr(VtlParser.AggrExprContext) Enter a parse tree produced by aggrExpr() . The default implementation does nothing. Declaration public virtual void EnterAggrExpr(VtlParser.AggrExprContext context) Parameters Type Name Description VtlParser.AggrExprContext context The parse tree. EnterAggrFunction(VtlParser.AggrFunctionContext) Enter a parse tree produced by aggrFunction() . The default implementation does nothing. Declaration public virtual void EnterAggrFunction(VtlParser.AggrFunctionContext context) Parameters Type Name Description VtlParser.AggrFunctionContext context The parse tree. EnterAggrFunctionName(VtlParser.AggrFunctionNameContext) Enter a parse tree produced by aggrFunctionName() . The default implementation does nothing. Declaration public virtual void EnterAggrFunctionName(VtlParser.AggrFunctionNameContext context) Parameters Type Name Description VtlParser.AggrFunctionNameContext context The parse tree. EnterAggrInvocation(VtlParser.AggrInvocationContext) Enter a parse tree produced by aggrInvocation() . The default implementation does nothing. Declaration public virtual void EnterAggrInvocation(VtlParser.AggrInvocationContext context) Parameters Type Name Description VtlParser.AggrInvocationContext context The parse tree. EnterAnalyticClause(VtlParser.AnalyticClauseContext) Enter a parse tree produced by analyticClause() . The default implementation does nothing. Declaration public virtual void EnterAnalyticClause(VtlParser.AnalyticClauseContext context) Parameters Type Name Description VtlParser.AnalyticClauseContext context The parse tree. EnterAnalyticFunction(VtlParser.AnalyticFunctionContext) Enter a parse tree produced by analyticFunction() . The default implementation does nothing. Declaration public virtual void EnterAnalyticFunction(VtlParser.AnalyticFunctionContext context) Parameters Type Name Description VtlParser.AnalyticFunctionContext context The parse tree. EnterAnalyticFunctionName(VtlParser.AnalyticFunctionNameContext) Enter a parse tree produced by analyticFunctionName() . The default implementation does nothing. Declaration public virtual void EnterAnalyticFunctionName(VtlParser.AnalyticFunctionNameContext context) Parameters Type Name Description VtlParser.AnalyticFunctionNameContext context The parse tree. EnterAnalyticInvocation(VtlParser.AnalyticInvocationContext) Enter a parse tree produced by analyticInvocation() . The default implementation does nothing. Declaration public virtual void EnterAnalyticInvocation(VtlParser.AnalyticInvocationContext context) Parameters Type Name Description VtlParser.AnalyticInvocationContext context The parse tree. EnterCalcClause(VtlParser.CalcClauseContext) Enter a parse tree produced by calcClause() . The default implementation does nothing. Declaration public virtual void EnterCalcClause(VtlParser.CalcClauseContext context) Parameters Type Name Description VtlParser.CalcClauseContext context The parse tree. EnterCalcExpr(VtlParser.CalcExprContext) Enter a parse tree produced by calcExpr() . The default implementation does nothing. Declaration public virtual void EnterCalcExpr(VtlParser.CalcExprContext context) Parameters Type Name Description VtlParser.CalcExprContext context The parse tree. EnterCheckDatapoint(VtlParser.CheckDatapointContext) Enter a parse tree produced by checkDatapoint() . The default implementation does nothing. Declaration public virtual void EnterCheckDatapoint(VtlParser.CheckDatapointContext context) Parameters Type Name Description VtlParser.CheckDatapointContext context The parse tree. EnterClosedDataset(VtlParser.ClosedDatasetContext) Enter a parse tree produced by closedDataset() . The default implementation does nothing. Declaration public virtual void EnterClosedDataset(VtlParser.ClosedDatasetContext context) Parameters Type Name Description VtlParser.ClosedDatasetContext context The parse tree. EnterComponent(VtlParser.ComponentContext) Enter a parse tree produced by component() . The default implementation does nothing. Declaration public virtual void EnterComponent(VtlParser.ComponentContext context) Parameters Type Name Description VtlParser.ComponentContext context The parse tree. EnterComponentID(VtlParser.ComponentIDContext) Enter a parse tree produced by componentID() . The default implementation does nothing. Declaration public virtual void EnterComponentID(VtlParser.ComponentIDContext context) Parameters Type Name Description VtlParser.ComponentIDContext context The parse tree. EnterComponentRole(VtlParser.ComponentRoleContext) Enter a parse tree produced by componentRole() . The default implementation does nothing. Declaration public virtual void EnterComponentRole(VtlParser.ComponentRoleContext context) Parameters Type Name Description VtlParser.ComponentRoleContext context The parse tree. EnterConstant(VtlParser.ConstantContext) Enter a parse tree produced by constant() . The default implementation does nothing. Declaration public virtual void EnterConstant(VtlParser.ConstantContext context) Parameters Type Name Description VtlParser.ConstantContext context The parse tree. EnterDataset(VtlParser.DatasetContext) Enter a parse tree produced by dataset() . The default implementation does nothing. Declaration public virtual void EnterDataset(VtlParser.DatasetContext context) Parameters Type Name Description VtlParser.DatasetContext context The parse tree. EnterDatasetClause(VtlParser.DatasetClauseContext) Enter a parse tree produced by datasetClause() . The default implementation does nothing. Declaration public virtual void EnterDatasetClause(VtlParser.DatasetClauseContext context) Parameters Type Name Description VtlParser.DatasetClauseContext context The parse tree. EnterDatasetComplex(VtlParser.DatasetComplexContext) Enter a parse tree produced by datasetComplex() . The default implementation does nothing. Declaration public virtual void EnterDatasetComplex(VtlParser.DatasetComplexContext context) Parameters Type Name Description VtlParser.DatasetComplexContext context The parse tree. EnterDatasetID(VtlParser.DatasetIDContext) Enter a parse tree produced by datasetID() . The default implementation does nothing. Declaration public virtual void EnterDatasetID(VtlParser.DatasetIDContext context) Parameters Type Name Description VtlParser.DatasetIDContext context The parse tree. EnterDefDatapoint(VtlParser.DefDatapointContext) Enter a parse tree produced by defDatapoint() . The default implementation does nothing. Declaration public virtual void EnterDefDatapoint(VtlParser.DefDatapointContext context) Parameters Type Name Description VtlParser.DefDatapointContext context The parse tree. EnterDefExpr(VtlParser.DefExprContext) Enter a parse tree produced by defExpr() . The default implementation does nothing. Declaration public virtual void EnterDefExpr(VtlParser.DefExprContext context) Parameters Type Name Description VtlParser.DefExprContext context The parse tree. EnterDropClause(VtlParser.DropClauseContext) Enter a parse tree produced by dropClause() . The default implementation does nothing. Declaration public virtual void EnterDropClause(VtlParser.DropClauseContext context) Parameters Type Name Description VtlParser.DropClauseContext context The parse tree. EnterErrorCode(VtlParser.ErrorCodeContext) Enter a parse tree produced by errorCode() . The default implementation does nothing. Declaration public virtual void EnterErrorCode(VtlParser.ErrorCodeContext context) Parameters Type Name Description VtlParser.ErrorCodeContext context The parse tree. EnterErrorLevel(VtlParser.ErrorLevelContext) Enter a parse tree produced by errorLevel() . The default implementation does nothing. Declaration public virtual void EnterErrorLevel(VtlParser.ErrorLevelContext context) Parameters Type Name Description VtlParser.ErrorLevelContext context The parse tree. EnterEveryRule(Antlr4.Runtime.ParserRuleContext) Declaration public virtual void EnterEveryRule(Antlr4.Runtime.ParserRuleContext context) Parameters Type Name Description Antlr4.Runtime.ParserRuleContext context Remarks The default implementation does nothing. EnterFilterClause(VtlParser.FilterClauseContext) Enter a parse tree produced by filterClause() . The default implementation does nothing. Declaration public virtual void EnterFilterClause(VtlParser.FilterClauseContext context) Parameters Type Name Description VtlParser.FilterClauseContext context The parse tree. EnterFirstWindowLimit(VtlParser.FirstWindowLimitContext) Enter a parse tree produced by firstWindowLimit() . The default implementation does nothing. Declaration public virtual void EnterFirstWindowLimit(VtlParser.FirstWindowLimitContext context) Parameters Type Name Description VtlParser.FirstWindowLimitContext context The parse tree. EnterGroupingClause(VtlParser.GroupingClauseContext) Enter a parse tree produced by groupingClause() . The default implementation does nothing. Declaration public virtual void EnterGroupingClause(VtlParser.GroupingClauseContext context) Parameters Type Name Description VtlParser.GroupingClauseContext context The parse tree. EnterGroupKeyword(VtlParser.GroupKeywordContext) Enter a parse tree produced by groupKeyword() . The default implementation does nothing. Declaration public virtual void EnterGroupKeyword(VtlParser.GroupKeywordContext context) Parameters Type Name Description VtlParser.GroupKeywordContext context The parse tree. EnterHavingClause(VtlParser.HavingClauseContext) Enter a parse tree produced by havingClause() . The default implementation does nothing. Declaration public virtual void EnterHavingClause(VtlParser.HavingClauseContext context) Parameters Type Name Description VtlParser.HavingClauseContext context The parse tree. EnterHavingExpr(VtlParser.HavingExprContext) Enter a parse tree produced by havingExpr() . The default implementation does nothing. Declaration public virtual void EnterHavingExpr(VtlParser.HavingExprContext context) Parameters Type Name Description VtlParser.HavingExprContext context The parse tree. EnterIfThenElseDataset(VtlParser.IfThenElseDatasetContext) Enter a parse tree produced by ifThenElseDataset() . The default implementation does nothing. Declaration public virtual void EnterIfThenElseDataset(VtlParser.IfThenElseDatasetContext context) Parameters Type Name Description VtlParser.IfThenElseDatasetContext context The parse tree. EnterIfThenElseScalar(VtlParser.IfThenElseScalarContext) Enter a parse tree produced by ifThenElseScalar() . The default implementation does nothing. Declaration public virtual void EnterIfThenElseScalar(VtlParser.IfThenElseScalarContext context) Parameters Type Name Description VtlParser.IfThenElseScalarContext context The parse tree. EnterJoinAggrClause(VtlParser.JoinAggrClauseContext) Enter a parse tree produced by joinAggrClause() . The default implementation does nothing. Declaration public virtual void EnterJoinAggrClause(VtlParser.JoinAggrClauseContext context) Parameters Type Name Description VtlParser.JoinAggrClauseContext context The parse tree. EnterJoinAliasesClause(VtlParser.JoinAliasesClauseContext) Enter a parse tree produced by joinAliasesClause() . The default implementation does nothing. Declaration public virtual void EnterJoinAliasesClause(VtlParser.JoinAliasesClauseContext context) Parameters Type Name Description VtlParser.JoinAliasesClauseContext context The parse tree. EnterJoinAliasExpr(VtlParser.JoinAliasExprContext) Enter a parse tree produced by joinAliasExpr() . The default implementation does nothing. Declaration public virtual void EnterJoinAliasExpr(VtlParser.JoinAliasExprContext context) Parameters Type Name Description VtlParser.JoinAliasExprContext context The parse tree. EnterJoinApplyClause(VtlParser.JoinApplyClauseContext) Enter a parse tree produced by joinApplyClause() . The default implementation does nothing. Declaration public virtual void EnterJoinApplyClause(VtlParser.JoinApplyClauseContext context) Parameters Type Name Description VtlParser.JoinApplyClauseContext context The parse tree. EnterJoinBody(VtlParser.JoinBodyContext) Enter a parse tree produced by joinBody() . The default implementation does nothing. Declaration public virtual void EnterJoinBody(VtlParser.JoinBodyContext context) Parameters Type Name Description VtlParser.JoinBodyContext context The parse tree. EnterJoinCalcClause(VtlParser.JoinCalcClauseContext) Enter a parse tree produced by joinCalcClause() . The default implementation does nothing. Declaration public virtual void EnterJoinCalcClause(VtlParser.JoinCalcClauseContext context) Parameters Type Name Description VtlParser.JoinCalcClauseContext context The parse tree. EnterJoinClause(VtlParser.JoinClauseContext) Enter a parse tree produced by joinClause() . The default implementation does nothing. Declaration public virtual void EnterJoinClause(VtlParser.JoinClauseContext context) Parameters Type Name Description VtlParser.JoinClauseContext context The parse tree. EnterJoinDropClause(VtlParser.JoinDropClauseContext) Enter a parse tree produced by joinDropClause() . The default implementation does nothing. Declaration public virtual void EnterJoinDropClause(VtlParser.JoinDropClauseContext context) Parameters Type Name Description VtlParser.JoinDropClauseContext context The parse tree. EnterJoinExpr(VtlParser.JoinExprContext) Enter a parse tree produced by joinExpr() . The default implementation does nothing. Declaration public virtual void EnterJoinExpr(VtlParser.JoinExprContext context) Parameters Type Name Description VtlParser.JoinExprContext context The parse tree. EnterJoinFilterClause(VtlParser.JoinFilterClauseContext) Enter a parse tree produced by joinFilterClause() . The default implementation does nothing. Declaration public virtual void EnterJoinFilterClause(VtlParser.JoinFilterClauseContext context) Parameters Type Name Description VtlParser.JoinFilterClauseContext context The parse tree. EnterJoinKeepClause(VtlParser.JoinKeepClauseContext) Enter a parse tree produced by joinKeepClause() . The default implementation does nothing. Declaration public virtual void EnterJoinKeepClause(VtlParser.JoinKeepClauseContext context) Parameters Type Name Description VtlParser.JoinKeepClauseContext context The parse tree. EnterJoinKeyword(VtlParser.JoinKeywordContext) Enter a parse tree produced by joinKeyword() . The default implementation does nothing. Declaration public virtual void EnterJoinKeyword(VtlParser.JoinKeywordContext context) Parameters Type Name Description VtlParser.JoinKeywordContext context The parse tree. EnterJoinRenameClause(VtlParser.JoinRenameClauseContext) Enter a parse tree produced by joinRenameClause() . The default implementation does nothing. Declaration public virtual void EnterJoinRenameClause(VtlParser.JoinRenameClauseContext context) Parameters Type Name Description VtlParser.JoinRenameClauseContext context The parse tree. EnterJoinUsingClause(VtlParser.JoinUsingClauseContext) Enter a parse tree produced by joinUsingClause() . The default implementation does nothing. Declaration public virtual void EnterJoinUsingClause(VtlParser.JoinUsingClauseContext context) Parameters Type Name Description VtlParser.JoinUsingClauseContext context The parse tree. EnterKeepClause(VtlParser.KeepClauseContext) Enter a parse tree produced by keepClause() . The default implementation does nothing. Declaration public virtual void EnterKeepClause(VtlParser.KeepClauseContext context) Parameters Type Name Description VtlParser.KeepClauseContext context The parse tree. EnterLimitsMethod(VtlParser.LimitsMethodContext) Enter a parse tree produced by limitsMethod() . The default implementation does nothing. Declaration public virtual void EnterLimitsMethod(VtlParser.LimitsMethodContext context) Parameters Type Name Description VtlParser.LimitsMethodContext context The parse tree. EnterList(VtlParser.ListContext) Enter a parse tree produced by list() . The default implementation does nothing. Declaration public virtual void EnterList(VtlParser.ListContext context) Parameters Type Name Description VtlParser.ListContext context The parse tree. EnterMembershipDataset(VtlParser.MembershipDatasetContext) Enter a parse tree produced by membershipDataset() . The default implementation does nothing. Declaration public virtual void EnterMembershipDataset(VtlParser.MembershipDatasetContext context) Parameters Type Name Description VtlParser.MembershipDatasetContext context The parse tree. EnterOpenedDataset(VtlParser.OpenedDatasetContext) Enter a parse tree produced by openedDataset() . The default implementation does nothing. Declaration public virtual void EnterOpenedDataset(VtlParser.OpenedDatasetContext context) Parameters Type Name Description VtlParser.OpenedDatasetContext context The parse tree. EnterOptionalExpr(VtlParser.OptionalExprContext) Enter a parse tree produced by optionalExpr() . The default implementation does nothing. Declaration public virtual void EnterOptionalExpr(VtlParser.OptionalExprContext context) Parameters Type Name Description VtlParser.OptionalExprContext context The parse tree. EnterOrderClause(VtlParser.OrderClauseContext) Enter a parse tree produced by orderClause() . The default implementation does nothing. Declaration public virtual void EnterOrderClause(VtlParser.OrderClauseContext context) Parameters Type Name Description VtlParser.OrderClauseContext context The parse tree. EnterOrderExpr(VtlParser.OrderExprContext) Enter a parse tree produced by orderExpr() . The default implementation does nothing. Declaration public virtual void EnterOrderExpr(VtlParser.OrderExprContext context) Parameters Type Name Description VtlParser.OrderExprContext context The parse tree. EnterPartitionClause(VtlParser.PartitionClauseContext) Enter a parse tree produced by partitionClause() . The default implementation does nothing. Declaration public virtual void EnterPartitionClause(VtlParser.PartitionClauseContext context) Parameters Type Name Description VtlParser.PartitionClauseContext context The parse tree. EnterPivotClause(VtlParser.PivotClauseContext) Enter a parse tree produced by pivotClause() . The default implementation does nothing. Declaration public virtual void EnterPivotClause(VtlParser.PivotClauseContext context) Parameters Type Name Description VtlParser.PivotClauseContext context The parse tree. EnterRenameClause(VtlParser.RenameClauseContext) Enter a parse tree produced by renameClause() . The default implementation does nothing. Declaration public virtual void EnterRenameClause(VtlParser.RenameClauseContext context) Parameters Type Name Description VtlParser.RenameClauseContext context The parse tree. EnterRenameExpr(VtlParser.RenameExprContext) Enter a parse tree produced by renameExpr() . The default implementation does nothing. Declaration public virtual void EnterRenameExpr(VtlParser.RenameExprContext context) Parameters Type Name Description VtlParser.RenameExprContext context The parse tree. EnterRetainType(VtlParser.RetainTypeContext) Enter a parse tree produced by retainType() . The default implementation does nothing. Declaration public virtual void EnterRetainType(VtlParser.RetainTypeContext context) Parameters Type Name Description VtlParser.RetainTypeContext context The parse tree. EnterRuleClauseDatapoint(VtlParser.RuleClauseDatapointContext) Enter a parse tree produced by ruleClauseDatapoint() . The default implementation does nothing. Declaration public virtual void EnterRuleClauseDatapoint(VtlParser.RuleClauseDatapointContext context) Parameters Type Name Description VtlParser.RuleClauseDatapointContext context The parse tree. EnterRuleID(VtlParser.RuleIDContext) Enter a parse tree produced by ruleID() . The default implementation does nothing. Declaration public virtual void EnterRuleID(VtlParser.RuleIDContext context) Parameters Type Name Description VtlParser.RuleIDContext context The parse tree. EnterRuleItemDatapoint(VtlParser.RuleItemDatapointContext) Enter a parse tree produced by ruleItemDatapoint() . The default implementation does nothing. Declaration public virtual void EnterRuleItemDatapoint(VtlParser.RuleItemDatapointContext context) Parameters Type Name Description VtlParser.RuleItemDatapointContext context The parse tree. EnterRulesetID(VtlParser.RulesetIDContext) Enter a parse tree produced by rulesetID() . The default implementation does nothing. Declaration public virtual void EnterRulesetID(VtlParser.RulesetIDContext context) Parameters Type Name Description VtlParser.RulesetIDContext context The parse tree. EnterRulesetSignature(VtlParser.RulesetSignatureContext) Enter a parse tree produced by rulesetSignature() . The default implementation does nothing. Declaration public virtual void EnterRulesetSignature(VtlParser.RulesetSignatureContext context) Parameters Type Name Description VtlParser.RulesetSignatureContext context The parse tree. EnterScalar(VtlParser.ScalarContext) Enter a parse tree produced by scalar() . The default implementation does nothing. Declaration public virtual void EnterScalar(VtlParser.ScalarContext context) Parameters Type Name Description VtlParser.ScalarContext context The parse tree. EnterSecondWindowLimit(VtlParser.SecondWindowLimitContext) Enter a parse tree produced by secondWindowLimit() . The default implementation does nothing. Declaration public virtual void EnterSecondWindowLimit(VtlParser.SecondWindowLimitContext context) Parameters Type Name Description VtlParser.SecondWindowLimitContext context The parse tree. EnterSetExpr(VtlParser.SetExprContext) Enter a parse tree produced by setExpr() . The default implementation does nothing. Declaration public virtual void EnterSetExpr(VtlParser.SetExprContext context) Parameters Type Name Description VtlParser.SetExprContext context The parse tree. EnterStart(VtlParser.StartContext) Enter a parse tree produced by start() . The default implementation does nothing. Declaration public virtual void EnterStart(VtlParser.StartContext context) Parameters Type Name Description VtlParser.StartContext context The parse tree. EnterStatement(VtlParser.StatementContext) Enter a parse tree produced by statement() . The default implementation does nothing. Declaration public virtual void EnterStatement(VtlParser.StatementContext context) Parameters Type Name Description VtlParser.StatementContext context The parse tree. EnterSubspaceClause(VtlParser.SubspaceClauseContext) Enter a parse tree produced by subspaceClause() . The default implementation does nothing. Declaration public virtual void EnterSubspaceClause(VtlParser.SubspaceClauseContext context) Parameters Type Name Description VtlParser.SubspaceClauseContext context The parse tree. EnterSubspaceExpr(VtlParser.SubspaceExprContext) Enter a parse tree produced by subspaceExpr() . The default implementation does nothing. Declaration public virtual void EnterSubspaceExpr(VtlParser.SubspaceExprContext context) Parameters Type Name Description VtlParser.SubspaceExprContext context The parse tree. EnterUnopenedDataset(VtlParser.UnopenedDatasetContext) Enter a parse tree produced by unopenedDataset() . The default implementation does nothing. Declaration public virtual void EnterUnopenedDataset(VtlParser.UnopenedDatasetContext context) Parameters Type Name Description VtlParser.UnopenedDatasetContext context The parse tree. EnterUnpivotClause(VtlParser.UnpivotClauseContext) Enter a parse tree produced by unpivotClause() . The default implementation does nothing. Declaration public virtual void EnterUnpivotClause(VtlParser.UnpivotClauseContext context) Parameters Type Name Description VtlParser.UnpivotClauseContext context The parse tree. EnterValueDomainName(VtlParser.ValueDomainNameContext) Enter a parse tree produced by valueDomainName() . The default implementation does nothing. Declaration public virtual void EnterValueDomainName(VtlParser.ValueDomainNameContext context) Parameters Type Name Description VtlParser.ValueDomainNameContext context The parse tree. EnterVarID(VtlParser.VarIDContext) Enter a parse tree produced by varID() . The default implementation does nothing. Declaration public virtual void EnterVarID(VtlParser.VarIDContext context) Parameters Type Name Description VtlParser.VarIDContext context The parse tree. EnterVarSignature(VtlParser.VarSignatureContext) Enter a parse tree produced by varSignature() . The default implementation does nothing. Declaration public virtual void EnterVarSignature(VtlParser.VarSignatureContext context) Parameters Type Name Description VtlParser.VarSignatureContext context The parse tree. EnterWindowingClause(VtlParser.WindowingClauseContext) Enter a parse tree produced by windowingClause() . The default implementation does nothing. Declaration public virtual void EnterWindowingClause(VtlParser.WindowingClauseContext context) Parameters Type Name Description VtlParser.WindowingClauseContext context The parse tree. ExitAggrClause(VtlParser.AggrClauseContext) Exit a parse tree produced by aggrClause() . The default implementation does nothing. Declaration public virtual void ExitAggrClause(VtlParser.AggrClauseContext context) Parameters Type Name Description VtlParser.AggrClauseContext context The parse tree. ExitAggrExpr(VtlParser.AggrExprContext) Exit a parse tree produced by aggrExpr() . The default implementation does nothing. Declaration public virtual void ExitAggrExpr(VtlParser.AggrExprContext context) Parameters Type Name Description VtlParser.AggrExprContext context The parse tree. ExitAggrFunction(VtlParser.AggrFunctionContext) Exit a parse tree produced by aggrFunction() . The default implementation does nothing. Declaration public virtual void ExitAggrFunction(VtlParser.AggrFunctionContext context) Parameters Type Name Description VtlParser.AggrFunctionContext context The parse tree. ExitAggrFunctionName(VtlParser.AggrFunctionNameContext) Exit a parse tree produced by aggrFunctionName() . The default implementation does nothing. Declaration public virtual void ExitAggrFunctionName(VtlParser.AggrFunctionNameContext context) Parameters Type Name Description VtlParser.AggrFunctionNameContext context The parse tree. ExitAggrInvocation(VtlParser.AggrInvocationContext) Exit a parse tree produced by aggrInvocation() . The default implementation does nothing. Declaration public virtual void ExitAggrInvocation(VtlParser.AggrInvocationContext context) Parameters Type Name Description VtlParser.AggrInvocationContext context The parse tree. ExitAnalyticClause(VtlParser.AnalyticClauseContext) Exit a parse tree produced by analyticClause() . The default implementation does nothing. Declaration public virtual void ExitAnalyticClause(VtlParser.AnalyticClauseContext context) Parameters Type Name Description VtlParser.AnalyticClauseContext context The parse tree. ExitAnalyticFunction(VtlParser.AnalyticFunctionContext) Exit a parse tree produced by analyticFunction() . The default implementation does nothing. Declaration public virtual void ExitAnalyticFunction(VtlParser.AnalyticFunctionContext context) Parameters Type Name Description VtlParser.AnalyticFunctionContext context The parse tree. ExitAnalyticFunctionName(VtlParser.AnalyticFunctionNameContext) Exit a parse tree produced by analyticFunctionName() . The default implementation does nothing. Declaration public virtual void ExitAnalyticFunctionName(VtlParser.AnalyticFunctionNameContext context) Parameters Type Name Description VtlParser.AnalyticFunctionNameContext context The parse tree. ExitAnalyticInvocation(VtlParser.AnalyticInvocationContext) Exit a parse tree produced by analyticInvocation() . The default implementation does nothing. Declaration public virtual void ExitAnalyticInvocation(VtlParser.AnalyticInvocationContext context) Parameters Type Name Description VtlParser.AnalyticInvocationContext context The parse tree. ExitCalcClause(VtlParser.CalcClauseContext) Exit a parse tree produced by calcClause() . The default implementation does nothing. Declaration public virtual void ExitCalcClause(VtlParser.CalcClauseContext context) Parameters Type Name Description VtlParser.CalcClauseContext context The parse tree. ExitCalcExpr(VtlParser.CalcExprContext) Exit a parse tree produced by calcExpr() . The default implementation does nothing. Declaration public virtual void ExitCalcExpr(VtlParser.CalcExprContext context) Parameters Type Name Description VtlParser.CalcExprContext context The parse tree. ExitCheckDatapoint(VtlParser.CheckDatapointContext) Exit a parse tree produced by checkDatapoint() . The default implementation does nothing. Declaration public virtual void ExitCheckDatapoint(VtlParser.CheckDatapointContext context) Parameters Type Name Description VtlParser.CheckDatapointContext context The parse tree. ExitClosedDataset(VtlParser.ClosedDatasetContext) Exit a parse tree produced by closedDataset() . The default implementation does nothing. Declaration public virtual void ExitClosedDataset(VtlParser.ClosedDatasetContext context) Parameters Type Name Description VtlParser.ClosedDatasetContext context The parse tree. ExitComponent(VtlParser.ComponentContext) Exit a parse tree produced by component() . The default implementation does nothing. Declaration public virtual void ExitComponent(VtlParser.ComponentContext context) Parameters Type Name Description VtlParser.ComponentContext context The parse tree. ExitComponentID(VtlParser.ComponentIDContext) Exit a parse tree produced by componentID() . The default implementation does nothing. Declaration public virtual void ExitComponentID(VtlParser.ComponentIDContext context) Parameters Type Name Description VtlParser.ComponentIDContext context The parse tree. ExitComponentRole(VtlParser.ComponentRoleContext) Exit a parse tree produced by componentRole() . The default implementation does nothing. Declaration public virtual void ExitComponentRole(VtlParser.ComponentRoleContext context) Parameters Type Name Description VtlParser.ComponentRoleContext context The parse tree. ExitConstant(VtlParser.ConstantContext) Exit a parse tree produced by constant() . The default implementation does nothing. Declaration public virtual void ExitConstant(VtlParser.ConstantContext context) Parameters Type Name Description VtlParser.ConstantContext context The parse tree. ExitDataset(VtlParser.DatasetContext) Exit a parse tree produced by dataset() . The default implementation does nothing. Declaration public virtual void ExitDataset(VtlParser.DatasetContext context) Parameters Type Name Description VtlParser.DatasetContext context The parse tree. ExitDatasetClause(VtlParser.DatasetClauseContext) Exit a parse tree produced by datasetClause() . The default implementation does nothing. Declaration public virtual void ExitDatasetClause(VtlParser.DatasetClauseContext context) Parameters Type Name Description VtlParser.DatasetClauseContext context The parse tree. ExitDatasetComplex(VtlParser.DatasetComplexContext) Exit a parse tree produced by datasetComplex() . The default implementation does nothing. Declaration public virtual void ExitDatasetComplex(VtlParser.DatasetComplexContext context) Parameters Type Name Description VtlParser.DatasetComplexContext context The parse tree. ExitDatasetID(VtlParser.DatasetIDContext) Exit a parse tree produced by datasetID() . The default implementation does nothing. Declaration public virtual void ExitDatasetID(VtlParser.DatasetIDContext context) Parameters Type Name Description VtlParser.DatasetIDContext context The parse tree. ExitDefDatapoint(VtlParser.DefDatapointContext) Exit a parse tree produced by defDatapoint() . The default implementation does nothing. Declaration public virtual void ExitDefDatapoint(VtlParser.DefDatapointContext context) Parameters Type Name Description VtlParser.DefDatapointContext context The parse tree. ExitDefExpr(VtlParser.DefExprContext) Exit a parse tree produced by defExpr() . The default implementation does nothing. Declaration public virtual void ExitDefExpr(VtlParser.DefExprContext context) Parameters Type Name Description VtlParser.DefExprContext context The parse tree. ExitDropClause(VtlParser.DropClauseContext) Exit a parse tree produced by dropClause() . The default implementation does nothing. Declaration public virtual void ExitDropClause(VtlParser.DropClauseContext context) Parameters Type Name Description VtlParser.DropClauseContext context The parse tree. ExitErrorCode(VtlParser.ErrorCodeContext) Exit a parse tree produced by errorCode() . The default implementation does nothing. Declaration public virtual void ExitErrorCode(VtlParser.ErrorCodeContext context) Parameters Type Name Description VtlParser.ErrorCodeContext context The parse tree. ExitErrorLevel(VtlParser.ErrorLevelContext) Exit a parse tree produced by errorLevel() . The default implementation does nothing. Declaration public virtual void ExitErrorLevel(VtlParser.ErrorLevelContext context) Parameters Type Name Description VtlParser.ErrorLevelContext context The parse tree. ExitEveryRule(Antlr4.Runtime.ParserRuleContext) Declaration public virtual void ExitEveryRule(Antlr4.Runtime.ParserRuleContext context) Parameters Type Name Description Antlr4.Runtime.ParserRuleContext context Remarks The default implementation does nothing. ExitFilterClause(VtlParser.FilterClauseContext) Exit a parse tree produced by filterClause() . The default implementation does nothing. Declaration public virtual void ExitFilterClause(VtlParser.FilterClauseContext context) Parameters Type Name Description VtlParser.FilterClauseContext context The parse tree. ExitFirstWindowLimit(VtlParser.FirstWindowLimitContext) Exit a parse tree produced by firstWindowLimit() . The default implementation does nothing. Declaration public virtual void ExitFirstWindowLimit(VtlParser.FirstWindowLimitContext context) Parameters Type Name Description VtlParser.FirstWindowLimitContext context The parse tree. ExitGroupingClause(VtlParser.GroupingClauseContext) Exit a parse tree produced by groupingClause() . The default implementation does nothing. Declaration public virtual void ExitGroupingClause(VtlParser.GroupingClauseContext context) Parameters Type Name Description VtlParser.GroupingClauseContext context The parse tree. ExitGroupKeyword(VtlParser.GroupKeywordContext) Exit a parse tree produced by groupKeyword() . The default implementation does nothing. Declaration public virtual void ExitGroupKeyword(VtlParser.GroupKeywordContext context) Parameters Type Name Description VtlParser.GroupKeywordContext context The parse tree. ExitHavingClause(VtlParser.HavingClauseContext) Exit a parse tree produced by havingClause() . The default implementation does nothing. Declaration public virtual void ExitHavingClause(VtlParser.HavingClauseContext context) Parameters Type Name Description VtlParser.HavingClauseContext context The parse tree. ExitHavingExpr(VtlParser.HavingExprContext) Exit a parse tree produced by havingExpr() . The default implementation does nothing. Declaration public virtual void ExitHavingExpr(VtlParser.HavingExprContext context) Parameters Type Name Description VtlParser.HavingExprContext context The parse tree. ExitIfThenElseDataset(VtlParser.IfThenElseDatasetContext) Exit a parse tree produced by ifThenElseDataset() . The default implementation does nothing. Declaration public virtual void ExitIfThenElseDataset(VtlParser.IfThenElseDatasetContext context) Parameters Type Name Description VtlParser.IfThenElseDatasetContext context The parse tree. ExitIfThenElseScalar(VtlParser.IfThenElseScalarContext) Exit a parse tree produced by ifThenElseScalar() . The default implementation does nothing. Declaration public virtual void ExitIfThenElseScalar(VtlParser.IfThenElseScalarContext context) Parameters Type Name Description VtlParser.IfThenElseScalarContext context The parse tree. ExitJoinAggrClause(VtlParser.JoinAggrClauseContext) Exit a parse tree produced by joinAggrClause() . The default implementation does nothing. Declaration public virtual void ExitJoinAggrClause(VtlParser.JoinAggrClauseContext context) Parameters Type Name Description VtlParser.JoinAggrClauseContext context The parse tree. ExitJoinAliasesClause(VtlParser.JoinAliasesClauseContext) Exit a parse tree produced by joinAliasesClause() . The default implementation does nothing. Declaration public virtual void ExitJoinAliasesClause(VtlParser.JoinAliasesClauseContext context) Parameters Type Name Description VtlParser.JoinAliasesClauseContext context The parse tree. ExitJoinAliasExpr(VtlParser.JoinAliasExprContext) Exit a parse tree produced by joinAliasExpr() . The default implementation does nothing. Declaration public virtual void ExitJoinAliasExpr(VtlParser.JoinAliasExprContext context) Parameters Type Name Description VtlParser.JoinAliasExprContext context The parse tree. ExitJoinApplyClause(VtlParser.JoinApplyClauseContext) Exit a parse tree produced by joinApplyClause() . The default implementation does nothing. Declaration public virtual void ExitJoinApplyClause(VtlParser.JoinApplyClauseContext context) Parameters Type Name Description VtlParser.JoinApplyClauseContext context The parse tree. ExitJoinBody(VtlParser.JoinBodyContext) Exit a parse tree produced by joinBody() . The default implementation does nothing. Declaration public virtual void ExitJoinBody(VtlParser.JoinBodyContext context) Parameters Type Name Description VtlParser.JoinBodyContext context The parse tree. ExitJoinCalcClause(VtlParser.JoinCalcClauseContext) Exit a parse tree produced by joinCalcClause() . The default implementation does nothing. Declaration public virtual void ExitJoinCalcClause(VtlParser.JoinCalcClauseContext context) Parameters Type Name Description VtlParser.JoinCalcClauseContext context The parse tree. ExitJoinClause(VtlParser.JoinClauseContext) Exit a parse tree produced by joinClause() . The default implementation does nothing. Declaration public virtual void ExitJoinClause(VtlParser.JoinClauseContext context) Parameters Type Name Description VtlParser.JoinClauseContext context The parse tree. ExitJoinDropClause(VtlParser.JoinDropClauseContext) Exit a parse tree produced by joinDropClause() . The default implementation does nothing. Declaration public virtual void ExitJoinDropClause(VtlParser.JoinDropClauseContext context) Parameters Type Name Description VtlParser.JoinDropClauseContext context The parse tree. ExitJoinExpr(VtlParser.JoinExprContext) Exit a parse tree produced by joinExpr() . The default implementation does nothing. Declaration public virtual void ExitJoinExpr(VtlParser.JoinExprContext context) Parameters Type Name Description VtlParser.JoinExprContext context The parse tree. ExitJoinFilterClause(VtlParser.JoinFilterClauseContext) Exit a parse tree produced by joinFilterClause() . The default implementation does nothing. Declaration public virtual void ExitJoinFilterClause(VtlParser.JoinFilterClauseContext context) Parameters Type Name Description VtlParser.JoinFilterClauseContext context The parse tree. ExitJoinKeepClause(VtlParser.JoinKeepClauseContext) Exit a parse tree produced by joinKeepClause() . The default implementation does nothing. Declaration public virtual void ExitJoinKeepClause(VtlParser.JoinKeepClauseContext context) Parameters Type Name Description VtlParser.JoinKeepClauseContext context The parse tree. ExitJoinKeyword(VtlParser.JoinKeywordContext) Exit a parse tree produced by joinKeyword() . The default implementation does nothing. Declaration public virtual void ExitJoinKeyword(VtlParser.JoinKeywordContext context) Parameters Type Name Description VtlParser.JoinKeywordContext context The parse tree. ExitJoinRenameClause(VtlParser.JoinRenameClauseContext) Exit a parse tree produced by joinRenameClause() . The default implementation does nothing. Declaration public virtual void ExitJoinRenameClause(VtlParser.JoinRenameClauseContext context) Parameters Type Name Description VtlParser.JoinRenameClauseContext context The parse tree. ExitJoinUsingClause(VtlParser.JoinUsingClauseContext) Exit a parse tree produced by joinUsingClause() . The default implementation does nothing. Declaration public virtual void ExitJoinUsingClause(VtlParser.JoinUsingClauseContext context) Parameters Type Name Description VtlParser.JoinUsingClauseContext context The parse tree. ExitKeepClause(VtlParser.KeepClauseContext) Exit a parse tree produced by keepClause() . The default implementation does nothing. Declaration public virtual void ExitKeepClause(VtlParser.KeepClauseContext context) Parameters Type Name Description VtlParser.KeepClauseContext context The parse tree. ExitLimitsMethod(VtlParser.LimitsMethodContext) Exit a parse tree produced by limitsMethod() . The default implementation does nothing. Declaration public virtual void ExitLimitsMethod(VtlParser.LimitsMethodContext context) Parameters Type Name Description VtlParser.LimitsMethodContext context The parse tree. ExitList(VtlParser.ListContext) Exit a parse tree produced by list() . The default implementation does nothing. Declaration public virtual void ExitList(VtlParser.ListContext context) Parameters Type Name Description VtlParser.ListContext context The parse tree. ExitMembershipDataset(VtlParser.MembershipDatasetContext) Exit a parse tree produced by membershipDataset() . The default implementation does nothing. Declaration public virtual void ExitMembershipDataset(VtlParser.MembershipDatasetContext context) Parameters Type Name Description VtlParser.MembershipDatasetContext context The parse tree. ExitOpenedDataset(VtlParser.OpenedDatasetContext) Exit a parse tree produced by openedDataset() . The default implementation does nothing. Declaration public virtual void ExitOpenedDataset(VtlParser.OpenedDatasetContext context) Parameters Type Name Description VtlParser.OpenedDatasetContext context The parse tree. ExitOptionalExpr(VtlParser.OptionalExprContext) Exit a parse tree produced by optionalExpr() . The default implementation does nothing. Declaration public virtual void ExitOptionalExpr(VtlParser.OptionalExprContext context) Parameters Type Name Description VtlParser.OptionalExprContext context The parse tree. ExitOrderClause(VtlParser.OrderClauseContext) Exit a parse tree produced by orderClause() . The default implementation does nothing. Declaration public virtual void ExitOrderClause(VtlParser.OrderClauseContext context) Parameters Type Name Description VtlParser.OrderClauseContext context The parse tree. ExitOrderExpr(VtlParser.OrderExprContext) Exit a parse tree produced by orderExpr() . The default implementation does nothing. Declaration public virtual void ExitOrderExpr(VtlParser.OrderExprContext context) Parameters Type Name Description VtlParser.OrderExprContext context The parse tree. ExitPartitionClause(VtlParser.PartitionClauseContext) Exit a parse tree produced by partitionClause() . The default implementation does nothing. Declaration public virtual void ExitPartitionClause(VtlParser.PartitionClauseContext context) Parameters Type Name Description VtlParser.PartitionClauseContext context The parse tree. ExitPivotClause(VtlParser.PivotClauseContext) Exit a parse tree produced by pivotClause() . The default implementation does nothing. Declaration public virtual void ExitPivotClause(VtlParser.PivotClauseContext context) Parameters Type Name Description VtlParser.PivotClauseContext context The parse tree. ExitRenameClause(VtlParser.RenameClauseContext) Exit a parse tree produced by renameClause() . The default implementation does nothing. Declaration public virtual void ExitRenameClause(VtlParser.RenameClauseContext context) Parameters Type Name Description VtlParser.RenameClauseContext context The parse tree. ExitRenameExpr(VtlParser.RenameExprContext) Exit a parse tree produced by renameExpr() . The default implementation does nothing. Declaration public virtual void ExitRenameExpr(VtlParser.RenameExprContext context) Parameters Type Name Description VtlParser.RenameExprContext context The parse tree. ExitRetainType(VtlParser.RetainTypeContext) Exit a parse tree produced by retainType() . The default implementation does nothing. Declaration public virtual void ExitRetainType(VtlParser.RetainTypeContext context) Parameters Type Name Description VtlParser.RetainTypeContext context The parse tree. ExitRuleClauseDatapoint(VtlParser.RuleClauseDatapointContext) Exit a parse tree produced by ruleClauseDatapoint() . The default implementation does nothing. Declaration public virtual void ExitRuleClauseDatapoint(VtlParser.RuleClauseDatapointContext context) Parameters Type Name Description VtlParser.RuleClauseDatapointContext context The parse tree. ExitRuleID(VtlParser.RuleIDContext) Exit a parse tree produced by ruleID() . The default implementation does nothing. Declaration public virtual void ExitRuleID(VtlParser.RuleIDContext context) Parameters Type Name Description VtlParser.RuleIDContext context The parse tree. ExitRuleItemDatapoint(VtlParser.RuleItemDatapointContext) Exit a parse tree produced by ruleItemDatapoint() . The default implementation does nothing. Declaration public virtual void ExitRuleItemDatapoint(VtlParser.RuleItemDatapointContext context) Parameters Type Name Description VtlParser.RuleItemDatapointContext context The parse tree. ExitRulesetID(VtlParser.RulesetIDContext) Exit a parse tree produced by rulesetID() . The default implementation does nothing. Declaration public virtual void ExitRulesetID(VtlParser.RulesetIDContext context) Parameters Type Name Description VtlParser.RulesetIDContext context The parse tree. ExitRulesetSignature(VtlParser.RulesetSignatureContext) Exit a parse tree produced by rulesetSignature() . The default implementation does nothing. Declaration public virtual void ExitRulesetSignature(VtlParser.RulesetSignatureContext context) Parameters Type Name Description VtlParser.RulesetSignatureContext context The parse tree. ExitScalar(VtlParser.ScalarContext) Exit a parse tree produced by scalar() . The default implementation does nothing. Declaration public virtual void ExitScalar(VtlParser.ScalarContext context) Parameters Type Name Description VtlParser.ScalarContext context The parse tree. ExitSecondWindowLimit(VtlParser.SecondWindowLimitContext) Exit a parse tree produced by secondWindowLimit() . The default implementation does nothing. Declaration public virtual void ExitSecondWindowLimit(VtlParser.SecondWindowLimitContext context) Parameters Type Name Description VtlParser.SecondWindowLimitContext context The parse tree. ExitSetExpr(VtlParser.SetExprContext) Exit a parse tree produced by setExpr() . The default implementation does nothing. Declaration public virtual void ExitSetExpr(VtlParser.SetExprContext context) Parameters Type Name Description VtlParser.SetExprContext context The parse tree. ExitStart(VtlParser.StartContext) Exit a parse tree produced by start() . The default implementation does nothing. Declaration public virtual void ExitStart(VtlParser.StartContext context) Parameters Type Name Description VtlParser.StartContext context The parse tree. ExitStatement(VtlParser.StatementContext) Exit a parse tree produced by statement() . The default implementation does nothing. Declaration public virtual void ExitStatement(VtlParser.StatementContext context) Parameters Type Name Description VtlParser.StatementContext context The parse tree. ExitSubspaceClause(VtlParser.SubspaceClauseContext) Exit a parse tree produced by subspaceClause() . The default implementation does nothing. Declaration public virtual void ExitSubspaceClause(VtlParser.SubspaceClauseContext context) Parameters Type Name Description VtlParser.SubspaceClauseContext context The parse tree. ExitSubspaceExpr(VtlParser.SubspaceExprContext) Exit a parse tree produced by subspaceExpr() . The default implementation does nothing. Declaration public virtual void ExitSubspaceExpr(VtlParser.SubspaceExprContext context) Parameters Type Name Description VtlParser.SubspaceExprContext context The parse tree. ExitUnopenedDataset(VtlParser.UnopenedDatasetContext) Exit a parse tree produced by unopenedDataset() . The default implementation does nothing. Declaration public virtual void ExitUnopenedDataset(VtlParser.UnopenedDatasetContext context) Parameters Type Name Description VtlParser.UnopenedDatasetContext context The parse tree. ExitUnpivotClause(VtlParser.UnpivotClauseContext) Exit a parse tree produced by unpivotClause() . The default implementation does nothing. Declaration public virtual void ExitUnpivotClause(VtlParser.UnpivotClauseContext context) Parameters Type Name Description VtlParser.UnpivotClauseContext context The parse tree. ExitValueDomainName(VtlParser.ValueDomainNameContext) Exit a parse tree produced by valueDomainName() . The default implementation does nothing. Declaration public virtual void ExitValueDomainName(VtlParser.ValueDomainNameContext context) Parameters Type Name Description VtlParser.ValueDomainNameContext context The parse tree. ExitVarID(VtlParser.VarIDContext) Exit a parse tree produced by varID() . The default implementation does nothing. Declaration public virtual void ExitVarID(VtlParser.VarIDContext context) Parameters Type Name Description VtlParser.VarIDContext context The parse tree. ExitVarSignature(VtlParser.VarSignatureContext) Exit a parse tree produced by varSignature() . The default implementation does nothing. Declaration public virtual void ExitVarSignature(VtlParser.VarSignatureContext context) Parameters Type Name Description VtlParser.VarSignatureContext context The parse tree. ExitWindowingClause(VtlParser.WindowingClauseContext) Exit a parse tree produced by windowingClause() . The default implementation does nothing. Declaration public virtual void ExitWindowingClause(VtlParser.WindowingClauseContext context) Parameters Type Name Description VtlParser.WindowingClauseContext context The parse tree. VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode) Declaration public virtual void VisitErrorNode(Antlr4.Runtime.Tree.IErrorNode node) Parameters Type Name Description Antlr4.Runtime.Tree.IErrorNode node Remarks The default implementation does nothing. VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode) Declaration public virtual void VisitTerminal(Antlr4.Runtime.Tree.ITerminalNode node) Parameters Type Name Description Antlr4.Runtime.Tree.ITerminalNode node Remarks The default implementation does nothing. Implements IVtlListener Antlr4.Runtime.Tree.IParseTreeListener Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor-1.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor-1.html",
    "title": "Class VtlBaseVisitor<Result> | VTL Processing API documentation",
    "keywords": "Class VtlBaseVisitor<Result> This class provides an empty implementation of IVtlVisitor<Result> , which can be extended to create a visitor which only needs to handle a subset of the available methods. Inheritance System.Object VtlBaseVisitor<Result> VisitorTransformer Implements IVtlVisitor <Result> IParseTreeVisitor <Result> Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class VtlBaseVisitor<Result> : AbstractParseTreeVisitor<Result>, IVtlVisitor<Result>, IParseTreeVisitor<Result> Type Parameters Name Description Result The return type of the visit operation. Methods VisitAggrClause(VtlParser.AggrClauseContext) Visit a parse tree produced by aggrClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitAggrClause(VtlParser.AggrClauseContext context) Parameters Type Name Description VtlParser.AggrClauseContext context The parse tree. Returns Type Description Result VisitAggrExpr(VtlParser.AggrExprContext) Visit a parse tree produced by aggrExpr() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitAggrExpr(VtlParser.AggrExprContext context) Parameters Type Name Description VtlParser.AggrExprContext context The parse tree. Returns Type Description Result VisitAggrFunction(VtlParser.AggrFunctionContext) Visit a parse tree produced by aggrFunction() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitAggrFunction(VtlParser.AggrFunctionContext context) Parameters Type Name Description VtlParser.AggrFunctionContext context The parse tree. Returns Type Description Result VisitAggrFunctionName(VtlParser.AggrFunctionNameContext) Visit a parse tree produced by aggrFunctionName() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitAggrFunctionName(VtlParser.AggrFunctionNameContext context) Parameters Type Name Description VtlParser.AggrFunctionNameContext context The parse tree. Returns Type Description Result VisitAggrInvocation(VtlParser.AggrInvocationContext) Visit a parse tree produced by aggrInvocation() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitAggrInvocation(VtlParser.AggrInvocationContext context) Parameters Type Name Description VtlParser.AggrInvocationContext context The parse tree. Returns Type Description Result VisitAnalyticClause(VtlParser.AnalyticClauseContext) Visit a parse tree produced by analyticClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitAnalyticClause(VtlParser.AnalyticClauseContext context) Parameters Type Name Description VtlParser.AnalyticClauseContext context The parse tree. Returns Type Description Result VisitAnalyticFunction(VtlParser.AnalyticFunctionContext) Visit a parse tree produced by analyticFunction() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitAnalyticFunction(VtlParser.AnalyticFunctionContext context) Parameters Type Name Description VtlParser.AnalyticFunctionContext context The parse tree. Returns Type Description Result VisitAnalyticFunctionName(VtlParser.AnalyticFunctionNameContext) Visit a parse tree produced by analyticFunctionName() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitAnalyticFunctionName(VtlParser.AnalyticFunctionNameContext context) Parameters Type Name Description VtlParser.AnalyticFunctionNameContext context The parse tree. Returns Type Description Result VisitAnalyticInvocation(VtlParser.AnalyticInvocationContext) Visit a parse tree produced by analyticInvocation() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitAnalyticInvocation(VtlParser.AnalyticInvocationContext context) Parameters Type Name Description VtlParser.AnalyticInvocationContext context The parse tree. Returns Type Description Result VisitCalcClause(VtlParser.CalcClauseContext) Visit a parse tree produced by calcClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitCalcClause(VtlParser.CalcClauseContext context) Parameters Type Name Description VtlParser.CalcClauseContext context The parse tree. Returns Type Description Result VisitCalcExpr(VtlParser.CalcExprContext) Visit a parse tree produced by calcExpr() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitCalcExpr(VtlParser.CalcExprContext context) Parameters Type Name Description VtlParser.CalcExprContext context The parse tree. Returns Type Description Result VisitCheckDatapoint(VtlParser.CheckDatapointContext) Visit a parse tree produced by checkDatapoint() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitCheckDatapoint(VtlParser.CheckDatapointContext context) Parameters Type Name Description VtlParser.CheckDatapointContext context The parse tree. Returns Type Description Result VisitClosedDataset(VtlParser.ClosedDatasetContext) Visit a parse tree produced by closedDataset() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitClosedDataset(VtlParser.ClosedDatasetContext context) Parameters Type Name Description VtlParser.ClosedDatasetContext context The parse tree. Returns Type Description Result VisitComponent(VtlParser.ComponentContext) Visit a parse tree produced by component() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitComponent(VtlParser.ComponentContext context) Parameters Type Name Description VtlParser.ComponentContext context The parse tree. Returns Type Description Result VisitComponentID(VtlParser.ComponentIDContext) Visit a parse tree produced by componentID() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitComponentID(VtlParser.ComponentIDContext context) Parameters Type Name Description VtlParser.ComponentIDContext context The parse tree. Returns Type Description Result VisitComponentRole(VtlParser.ComponentRoleContext) Visit a parse tree produced by componentRole() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitComponentRole(VtlParser.ComponentRoleContext context) Parameters Type Name Description VtlParser.ComponentRoleContext context The parse tree. Returns Type Description Result VisitConstant(VtlParser.ConstantContext) Visit a parse tree produced by constant() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitConstant(VtlParser.ConstantContext context) Parameters Type Name Description VtlParser.ConstantContext context The parse tree. Returns Type Description Result VisitDataset(VtlParser.DatasetContext) Visit a parse tree produced by dataset() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitDataset(VtlParser.DatasetContext context) Parameters Type Name Description VtlParser.DatasetContext context The parse tree. Returns Type Description Result VisitDatasetClause(VtlParser.DatasetClauseContext) Visit a parse tree produced by datasetClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitDatasetClause(VtlParser.DatasetClauseContext context) Parameters Type Name Description VtlParser.DatasetClauseContext context The parse tree. Returns Type Description Result VisitDatasetComplex(VtlParser.DatasetComplexContext) Visit a parse tree produced by datasetComplex() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitDatasetComplex(VtlParser.DatasetComplexContext context) Parameters Type Name Description VtlParser.DatasetComplexContext context The parse tree. Returns Type Description Result VisitDatasetID(VtlParser.DatasetIDContext) Visit a parse tree produced by datasetID() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitDatasetID(VtlParser.DatasetIDContext context) Parameters Type Name Description VtlParser.DatasetIDContext context The parse tree. Returns Type Description Result VisitDefDatapoint(VtlParser.DefDatapointContext) Visit a parse tree produced by defDatapoint() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitDefDatapoint(VtlParser.DefDatapointContext context) Parameters Type Name Description VtlParser.DefDatapointContext context The parse tree. Returns Type Description Result VisitDefExpr(VtlParser.DefExprContext) Visit a parse tree produced by defExpr() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitDefExpr(VtlParser.DefExprContext context) Parameters Type Name Description VtlParser.DefExprContext context The parse tree. Returns Type Description Result VisitDropClause(VtlParser.DropClauseContext) Visit a parse tree produced by dropClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitDropClause(VtlParser.DropClauseContext context) Parameters Type Name Description VtlParser.DropClauseContext context The parse tree. Returns Type Description Result VisitErrorCode(VtlParser.ErrorCodeContext) Visit a parse tree produced by errorCode() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitErrorCode(VtlParser.ErrorCodeContext context) Parameters Type Name Description VtlParser.ErrorCodeContext context The parse tree. Returns Type Description Result VisitErrorLevel(VtlParser.ErrorLevelContext) Visit a parse tree produced by errorLevel() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitErrorLevel(VtlParser.ErrorLevelContext context) Parameters Type Name Description VtlParser.ErrorLevelContext context The parse tree. Returns Type Description Result VisitFilterClause(VtlParser.FilterClauseContext) Visit a parse tree produced by filterClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitFilterClause(VtlParser.FilterClauseContext context) Parameters Type Name Description VtlParser.FilterClauseContext context The parse tree. Returns Type Description Result VisitFirstWindowLimit(VtlParser.FirstWindowLimitContext) Visit a parse tree produced by firstWindowLimit() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitFirstWindowLimit(VtlParser.FirstWindowLimitContext context) Parameters Type Name Description VtlParser.FirstWindowLimitContext context The parse tree. Returns Type Description Result VisitGroupingClause(VtlParser.GroupingClauseContext) Visit a parse tree produced by groupingClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitGroupingClause(VtlParser.GroupingClauseContext context) Parameters Type Name Description VtlParser.GroupingClauseContext context The parse tree. Returns Type Description Result VisitGroupKeyword(VtlParser.GroupKeywordContext) Visit a parse tree produced by groupKeyword() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitGroupKeyword(VtlParser.GroupKeywordContext context) Parameters Type Name Description VtlParser.GroupKeywordContext context The parse tree. Returns Type Description Result VisitHavingClause(VtlParser.HavingClauseContext) Visit a parse tree produced by havingClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitHavingClause(VtlParser.HavingClauseContext context) Parameters Type Name Description VtlParser.HavingClauseContext context The parse tree. Returns Type Description Result VisitHavingExpr(VtlParser.HavingExprContext) Visit a parse tree produced by havingExpr() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitHavingExpr(VtlParser.HavingExprContext context) Parameters Type Name Description VtlParser.HavingExprContext context The parse tree. Returns Type Description Result VisitIfThenElseDataset(VtlParser.IfThenElseDatasetContext) Visit a parse tree produced by ifThenElseDataset() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitIfThenElseDataset(VtlParser.IfThenElseDatasetContext context) Parameters Type Name Description VtlParser.IfThenElseDatasetContext context The parse tree. Returns Type Description Result VisitIfThenElseScalar(VtlParser.IfThenElseScalarContext) Visit a parse tree produced by ifThenElseScalar() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitIfThenElseScalar(VtlParser.IfThenElseScalarContext context) Parameters Type Name Description VtlParser.IfThenElseScalarContext context The parse tree. Returns Type Description Result VisitJoinAggrClause(VtlParser.JoinAggrClauseContext) Visit a parse tree produced by joinAggrClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinAggrClause(VtlParser.JoinAggrClauseContext context) Parameters Type Name Description VtlParser.JoinAggrClauseContext context The parse tree. Returns Type Description Result VisitJoinAliasesClause(VtlParser.JoinAliasesClauseContext) Visit a parse tree produced by joinAliasesClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinAliasesClause(VtlParser.JoinAliasesClauseContext context) Parameters Type Name Description VtlParser.JoinAliasesClauseContext context The parse tree. Returns Type Description Result VisitJoinAliasExpr(VtlParser.JoinAliasExprContext) Visit a parse tree produced by joinAliasExpr() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinAliasExpr(VtlParser.JoinAliasExprContext context) Parameters Type Name Description VtlParser.JoinAliasExprContext context The parse tree. Returns Type Description Result VisitJoinApplyClause(VtlParser.JoinApplyClauseContext) Visit a parse tree produced by joinApplyClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinApplyClause(VtlParser.JoinApplyClauseContext context) Parameters Type Name Description VtlParser.JoinApplyClauseContext context The parse tree. Returns Type Description Result VisitJoinBody(VtlParser.JoinBodyContext) Visit a parse tree produced by joinBody() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinBody(VtlParser.JoinBodyContext context) Parameters Type Name Description VtlParser.JoinBodyContext context The parse tree. Returns Type Description Result VisitJoinCalcClause(VtlParser.JoinCalcClauseContext) Visit a parse tree produced by joinCalcClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinCalcClause(VtlParser.JoinCalcClauseContext context) Parameters Type Name Description VtlParser.JoinCalcClauseContext context The parse tree. Returns Type Description Result VisitJoinClause(VtlParser.JoinClauseContext) Visit a parse tree produced by joinClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinClause(VtlParser.JoinClauseContext context) Parameters Type Name Description VtlParser.JoinClauseContext context The parse tree. Returns Type Description Result VisitJoinDropClause(VtlParser.JoinDropClauseContext) Visit a parse tree produced by joinDropClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinDropClause(VtlParser.JoinDropClauseContext context) Parameters Type Name Description VtlParser.JoinDropClauseContext context The parse tree. Returns Type Description Result VisitJoinExpr(VtlParser.JoinExprContext) Visit a parse tree produced by joinExpr() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinExpr(VtlParser.JoinExprContext context) Parameters Type Name Description VtlParser.JoinExprContext context The parse tree. Returns Type Description Result VisitJoinFilterClause(VtlParser.JoinFilterClauseContext) Visit a parse tree produced by joinFilterClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinFilterClause(VtlParser.JoinFilterClauseContext context) Parameters Type Name Description VtlParser.JoinFilterClauseContext context The parse tree. Returns Type Description Result VisitJoinKeepClause(VtlParser.JoinKeepClauseContext) Visit a parse tree produced by joinKeepClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinKeepClause(VtlParser.JoinKeepClauseContext context) Parameters Type Name Description VtlParser.JoinKeepClauseContext context The parse tree. Returns Type Description Result VisitJoinKeyword(VtlParser.JoinKeywordContext) Visit a parse tree produced by joinKeyword() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinKeyword(VtlParser.JoinKeywordContext context) Parameters Type Name Description VtlParser.JoinKeywordContext context The parse tree. Returns Type Description Result VisitJoinRenameClause(VtlParser.JoinRenameClauseContext) Visit a parse tree produced by joinRenameClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinRenameClause(VtlParser.JoinRenameClauseContext context) Parameters Type Name Description VtlParser.JoinRenameClauseContext context The parse tree. Returns Type Description Result VisitJoinUsingClause(VtlParser.JoinUsingClauseContext) Visit a parse tree produced by joinUsingClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitJoinUsingClause(VtlParser.JoinUsingClauseContext context) Parameters Type Name Description VtlParser.JoinUsingClauseContext context The parse tree. Returns Type Description Result VisitKeepClause(VtlParser.KeepClauseContext) Visit a parse tree produced by keepClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitKeepClause(VtlParser.KeepClauseContext context) Parameters Type Name Description VtlParser.KeepClauseContext context The parse tree. Returns Type Description Result VisitLimitsMethod(VtlParser.LimitsMethodContext) Visit a parse tree produced by limitsMethod() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitLimitsMethod(VtlParser.LimitsMethodContext context) Parameters Type Name Description VtlParser.LimitsMethodContext context The parse tree. Returns Type Description Result VisitList(VtlParser.ListContext) Visit a parse tree produced by list() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitList(VtlParser.ListContext context) Parameters Type Name Description VtlParser.ListContext context The parse tree. Returns Type Description Result VisitMembershipDataset(VtlParser.MembershipDatasetContext) Visit a parse tree produced by membershipDataset() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitMembershipDataset(VtlParser.MembershipDatasetContext context) Parameters Type Name Description VtlParser.MembershipDatasetContext context The parse tree. Returns Type Description Result VisitOpenedDataset(VtlParser.OpenedDatasetContext) Visit a parse tree produced by openedDataset() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitOpenedDataset(VtlParser.OpenedDatasetContext context) Parameters Type Name Description VtlParser.OpenedDatasetContext context The parse tree. Returns Type Description Result VisitOptionalExpr(VtlParser.OptionalExprContext) Visit a parse tree produced by optionalExpr() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitOptionalExpr(VtlParser.OptionalExprContext context) Parameters Type Name Description VtlParser.OptionalExprContext context The parse tree. Returns Type Description Result VisitOrderClause(VtlParser.OrderClauseContext) Visit a parse tree produced by orderClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitOrderClause(VtlParser.OrderClauseContext context) Parameters Type Name Description VtlParser.OrderClauseContext context The parse tree. Returns Type Description Result VisitOrderExpr(VtlParser.OrderExprContext) Visit a parse tree produced by orderExpr() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitOrderExpr(VtlParser.OrderExprContext context) Parameters Type Name Description VtlParser.OrderExprContext context The parse tree. Returns Type Description Result VisitPartitionClause(VtlParser.PartitionClauseContext) Visit a parse tree produced by partitionClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitPartitionClause(VtlParser.PartitionClauseContext context) Parameters Type Name Description VtlParser.PartitionClauseContext context The parse tree. Returns Type Description Result VisitPivotClause(VtlParser.PivotClauseContext) Visit a parse tree produced by pivotClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitPivotClause(VtlParser.PivotClauseContext context) Parameters Type Name Description VtlParser.PivotClauseContext context The parse tree. Returns Type Description Result VisitRenameClause(VtlParser.RenameClauseContext) Visit a parse tree produced by renameClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitRenameClause(VtlParser.RenameClauseContext context) Parameters Type Name Description VtlParser.RenameClauseContext context The parse tree. Returns Type Description Result VisitRenameExpr(VtlParser.RenameExprContext) Visit a parse tree produced by renameExpr() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitRenameExpr(VtlParser.RenameExprContext context) Parameters Type Name Description VtlParser.RenameExprContext context The parse tree. Returns Type Description Result VisitRetainType(VtlParser.RetainTypeContext) Visit a parse tree produced by retainType() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitRetainType(VtlParser.RetainTypeContext context) Parameters Type Name Description VtlParser.RetainTypeContext context The parse tree. Returns Type Description Result VisitRuleClauseDatapoint(VtlParser.RuleClauseDatapointContext) Visit a parse tree produced by ruleClauseDatapoint() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitRuleClauseDatapoint(VtlParser.RuleClauseDatapointContext context) Parameters Type Name Description VtlParser.RuleClauseDatapointContext context The parse tree. Returns Type Description Result VisitRuleID(VtlParser.RuleIDContext) Visit a parse tree produced by ruleID() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitRuleID(VtlParser.RuleIDContext context) Parameters Type Name Description VtlParser.RuleIDContext context The parse tree. Returns Type Description Result VisitRuleItemDatapoint(VtlParser.RuleItemDatapointContext) Visit a parse tree produced by ruleItemDatapoint() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitRuleItemDatapoint(VtlParser.RuleItemDatapointContext context) Parameters Type Name Description VtlParser.RuleItemDatapointContext context The parse tree. Returns Type Description Result VisitRulesetID(VtlParser.RulesetIDContext) Visit a parse tree produced by rulesetID() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitRulesetID(VtlParser.RulesetIDContext context) Parameters Type Name Description VtlParser.RulesetIDContext context The parse tree. Returns Type Description Result VisitRulesetSignature(VtlParser.RulesetSignatureContext) Visit a parse tree produced by rulesetSignature() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitRulesetSignature(VtlParser.RulesetSignatureContext context) Parameters Type Name Description VtlParser.RulesetSignatureContext context The parse tree. Returns Type Description Result VisitScalar(VtlParser.ScalarContext) Visit a parse tree produced by scalar() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitScalar(VtlParser.ScalarContext context) Parameters Type Name Description VtlParser.ScalarContext context The parse tree. Returns Type Description Result VisitSecondWindowLimit(VtlParser.SecondWindowLimitContext) Visit a parse tree produced by secondWindowLimit() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitSecondWindowLimit(VtlParser.SecondWindowLimitContext context) Parameters Type Name Description VtlParser.SecondWindowLimitContext context The parse tree. Returns Type Description Result VisitSetExpr(VtlParser.SetExprContext) Visit a parse tree produced by setExpr() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitSetExpr(VtlParser.SetExprContext context) Parameters Type Name Description VtlParser.SetExprContext context The parse tree. Returns Type Description Result VisitStart(VtlParser.StartContext) Visit a parse tree produced by start() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitStart(VtlParser.StartContext context) Parameters Type Name Description VtlParser.StartContext context The parse tree. Returns Type Description Result VisitStatement(VtlParser.StatementContext) Visit a parse tree produced by statement() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitStatement(VtlParser.StatementContext context) Parameters Type Name Description VtlParser.StatementContext context The parse tree. Returns Type Description Result VisitSubspaceClause(VtlParser.SubspaceClauseContext) Visit a parse tree produced by subspaceClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitSubspaceClause(VtlParser.SubspaceClauseContext context) Parameters Type Name Description VtlParser.SubspaceClauseContext context The parse tree. Returns Type Description Result VisitSubspaceExpr(VtlParser.SubspaceExprContext) Visit a parse tree produced by subspaceExpr() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitSubspaceExpr(VtlParser.SubspaceExprContext context) Parameters Type Name Description VtlParser.SubspaceExprContext context The parse tree. Returns Type Description Result VisitUnopenedDataset(VtlParser.UnopenedDatasetContext) Visit a parse tree produced by unopenedDataset() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitUnopenedDataset(VtlParser.UnopenedDatasetContext context) Parameters Type Name Description VtlParser.UnopenedDatasetContext context The parse tree. Returns Type Description Result VisitUnpivotClause(VtlParser.UnpivotClauseContext) Visit a parse tree produced by unpivotClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitUnpivotClause(VtlParser.UnpivotClauseContext context) Parameters Type Name Description VtlParser.UnpivotClauseContext context The parse tree. Returns Type Description Result VisitValueDomainName(VtlParser.ValueDomainNameContext) Visit a parse tree produced by valueDomainName() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitValueDomainName(VtlParser.ValueDomainNameContext context) Parameters Type Name Description VtlParser.ValueDomainNameContext context The parse tree. Returns Type Description Result VisitVarID(VtlParser.VarIDContext) Visit a parse tree produced by varID() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitVarID(VtlParser.VarIDContext context) Parameters Type Name Description VtlParser.VarIDContext context The parse tree. Returns Type Description Result VisitVarSignature(VtlParser.VarSignatureContext) Visit a parse tree produced by varSignature() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitVarSignature(VtlParser.VarSignatureContext context) Parameters Type Name Description VtlParser.VarSignatureContext context The parse tree. Returns Type Description Result VisitWindowingClause(VtlParser.WindowingClauseContext) Visit a parse tree produced by windowingClause() . The default implementation returns the result of calling on context . Declaration public virtual Result VisitWindowingClause(VtlParser.WindowingClauseContext context) Parameters Type Name Description VtlParser.WindowingClauseContext context The parse tree. Returns Type Description Result Implements IVtlVisitor<Result> IParseTreeVisitor<> Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlLexer.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlLexer.html",
    "title": "Class VtlLexer | VTL Processing API documentation",
    "keywords": "Class VtlLexer Inheritance System.Object VtlLexer Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class VtlLexer : Lexer Constructors VtlLexer(ICharStream) Declaration public VtlLexer(ICharStream input) Parameters Type Name Description ICharStream input VtlLexer(ICharStream, TextWriter, TextWriter) Declaration public VtlLexer(ICharStream input, TextWriter output, TextWriter errorOutput) Parameters Type Name Description ICharStream input TextWriter output TextWriter errorOutput Fields _ATN Declaration public static readonly ATN _ATN Field Value Type Description ATN ABS Declaration public const int ABS = null Field Value Type Description System.Int32 AGGREGATE Declaration public const int AGGREGATE = null Field Value Type Description System.Int32 AGGREGATES Declaration public const int AGGREGATES = null Field Value Type Description System.Int32 ALL Declaration public const int ALL = null Field Value Type Description System.Int32 ALL_MEASURES Declaration public const int ALL_MEASURES = null Field Value Type Description System.Int32 ALTER_DATASET Declaration public const int ALTER_DATASET = null Field Value Type Description System.Int32 ALWAYS Declaration public const int ALWAYS = null Field Value Type Description System.Int32 ALWAYS_NULL Declaration public const int ALWAYS_NULL = null Field Value Type Description System.Int32 ALWAYS_ZERO Declaration public const int ALWAYS_ZERO = null Field Value Type Description System.Int32 AND Declaration public const int AND = null Field Value Type Description System.Int32 ANY Declaration public const int ANY = null Field Value Type Description System.Int32 APPLY Declaration public const int APPLY = null Field Value Type Description System.Int32 AS Declaration public const int AS = null Field Value Type Description System.Int32 ASC Declaration public const int ASC = null Field Value Type Description System.Int32 ASSIGN Declaration public const int ASSIGN = null Field Value Type Description System.Int32 ATTRCALC Declaration public const int ATTRCALC = null Field Value Type Description System.Int32 ATTRIBUTE Declaration public const int ATTRIBUTE = null Field Value Type Description System.Int32 AVG Declaration public const int AVG = null Field Value Type Description System.Int32 BETWEEN Declaration public const int BETWEEN = null Field Value Type Description System.Int32 BOOLEAN Declaration public const int BOOLEAN = null Field Value Type Description System.Int32 BOOLEAN_CONSTANT Declaration public const int BOOLEAN_CONSTANT = null Field Value Type Description System.Int32 BY Declaration public const int BY = null Field Value Type Description System.Int32 CALC Declaration public const int CALC = null Field Value Type Description System.Int32 CARTESIAN_PER Declaration public const int CARTESIAN_PER = null Field Value Type Description System.Int32 CAST Declaration public const int CAST = null Field Value Type Description System.Int32 CEIL Declaration public const int CEIL = null Field Value Type Description System.Int32 channelNames Declaration public static string[] channelNames Field Value Type Description System.String [] CHARSET_MATCH Declaration public const int CHARSET_MATCH = null Field Value Type Description System.Int32 CHECK Declaration public const int CHECK = null Field Value Type Description System.Int32 CHECK_DATAPOINT Declaration public const int CHECK_DATAPOINT = null Field Value Type Description System.Int32 CHECK_HIERARCHY Declaration public const int CHECK_HIERARCHY = null Field Value Type Description System.Int32 COMPARISON_OP Declaration public const int COMPARISON_OP = null Field Value Type Description System.Int32 COMPONENT Declaration public const int COMPONENT = null Field Value Type Description System.Int32 COMPONENTS Declaration public const int COMPONENTS = null Field Value Type Description System.Int32 COMPUTED Declaration public const int COMPUTED = null Field Value Type Description System.Int32 CONCAT Declaration public const int CONCAT = null Field Value Type Description System.Int32 CONDITION Declaration public const int CONDITION = null Field Value Type Description System.Int32 CONDITIONED Declaration public const int CONDITIONED = null Field Value Type Description System.Int32 COUNT Declaration public const int COUNT = null Field Value Type Description System.Int32 CROSS_JOIN Declaration public const int CROSS_JOIN = null Field Value Type Description System.Int32 CURRENT Declaration public const int CURRENT = null Field Value Type Description System.Int32 CURRENT_DATE Declaration public const int CURRENT_DATE = null Field Value Type Description System.Int32 DATA Declaration public const int DATA = null Field Value Type Description System.Int32 DATAPOINT Declaration public const int DATAPOINT = null Field Value Type Description System.Int32 DATAPOINT_ON_VAR Declaration public const int DATAPOINT_ON_VAR = null Field Value Type Description System.Int32 DATAPOINT_ON_VD Declaration public const int DATAPOINT_ON_VD = null Field Value Type Description System.Int32 DATASET Declaration public const int DATASET = null Field Value Type Description System.Int32 DATASET_PRIORITY Declaration public const int DATASET_PRIORITY = null Field Value Type Description System.Int32 DATE Declaration public const int DATE = null Field Value Type Description System.Int32 DATE_FORMAT Declaration public const int DATE_FORMAT = null Field Value Type Description System.Int32 DAY Declaration public const int DAY = null Field Value Type Description System.Int32 DD Declaration public const int DD = null Field Value Type Description System.Int32 decisionToDFA Declaration protected static Antlr4.Runtime.Dfa.DFA[] decisionToDFA Field Value Type Description Antlr4.Runtime.Dfa.DFA [] DEFAULT Declaration public const int DEFAULT = null Field Value Type Description System.Int32 DefaultVocabulary Declaration public static readonly IVocabulary DefaultVocabulary Field Value Type Description IVocabulary DEFINE Declaration public const int DEFINE = null Field Value Type Description System.Int32 DESC Declaration public const int DESC = null Field Value Type Description System.Int32 DIFF Declaration public const int DIFF = null Field Value Type Description System.Int32 DIGITS0_9 Declaration public const int DIGITS0_9 = null Field Value Type Description System.Int32 DIMENSION Declaration public const int DIMENSION = null Field Value Type Description System.Int32 DROP Declaration public const int DROP = null Field Value Type Description System.Int32 DURATION Declaration public const int DURATION = null Field Value Type Description System.Int32 ELSE Declaration public const int ELSE = null Field Value Type Description System.Int32 END Declaration public const int END = null Field Value Type Description System.Int32 EOL Declaration public const int EOL = null Field Value Type Description System.Int32 ERRORCODE Declaration public const int ERRORCODE = null Field Value Type Description System.Int32 ERRORLEVEL Declaration public const int ERRORLEVEL = null Field Value Type Description System.Int32 EVAL Declaration public const int EVAL = null Field Value Type Description System.Int32 EX Declaration public const int EX = null Field Value Type Description System.Int32 EXCEPT Declaration public const int EXCEPT = null Field Value Type Description System.Int32 EXISTS_IN Declaration public const int EXISTS_IN = null Field Value Type Description System.Int32 EXP Declaration public const int EXP = null Field Value Type Description System.Int32 FILL_TIME_SERIES Declaration public const int FILL_TIME_SERIES = null Field Value Type Description System.Int32 FILTER Declaration public const int FILTER = null Field Value Type Description System.Int32 FIRST Declaration public const int FIRST = null Field Value Type Description System.Int32 FIRST_VALUE Declaration public const int FIRST_VALUE = null Field Value Type Description System.Int32 FLOAT Declaration public const int FLOAT = null Field Value Type Description System.Int32 FLOAT_CONSTANT Declaration public const int FLOAT_CONSTANT = null Field Value Type Description System.Int32 FLOATEXP Declaration public const int FLOATEXP = null Field Value Type Description System.Int32 FLOOR Declaration public const int FLOOR = null Field Value Type Description System.Int32 FLOW_TO_STOCK Declaration public const int FLOW_TO_STOCK = null Field Value Type Description System.Int32 FOLLOWING Declaration public const int FOLLOWING = null Field Value Type Description System.Int32 FREQUENCY Declaration public const int FREQUENCY = null Field Value Type Description System.Int32 FROM Declaration public const int FROM = null Field Value Type Description System.Int32 FULL_JOIN Declaration public const int FULL_JOIN = null Field Value Type Description System.Int32 GROUP Declaration public const int GROUP = null Field Value Type Description System.Int32 HAVING Declaration public const int HAVING = null Field Value Type Description System.Int32 HIERARCHICAL Declaration public const int HIERARCHICAL = null Field Value Type Description System.Int32 HIERARCHICAL_ON_VAR Declaration public const int HIERARCHICAL_ON_VAR = null Field Value Type Description System.Int32 HIERARCHICAL_ON_VD Declaration public const int HIERARCHICAL_ON_VD = null Field Value Type Description System.Int32 HIERARCHY Declaration public const int HIERARCHY = null Field Value Type Description System.Int32 HOURS Declaration public const int HOURS = null Field Value Type Description System.Int32 IDENTIFIER Declaration public const int IDENTIFIER = null Field Value Type Description System.Int32 IF Declaration public const int IF = null Field Value Type Description System.Int32 IMBALANCE Declaration public const int IMBALANCE = null Field Value Type Description System.Int32 IN Declaration public const int IN = null Field Value Type Description System.Int32 INDEXOF Declaration public const int INDEXOF = null Field Value Type Description System.Int32 INNER_JOIN Declaration public const int INNER_JOIN = null Field Value Type Description System.Int32 INPUT Declaration public const int INPUT = null Field Value Type Description System.Int32 INSTR Declaration public const int INSTR = null Field Value Type Description System.Int32 INTDAY Declaration public const int INTDAY = null Field Value Type Description System.Int32 INTEGER Declaration public const int INTEGER = null Field Value Type Description System.Int32 INTEGER_CONSTANT Declaration public const int INTEGER_CONSTANT = null Field Value Type Description System.Int32 INTERSECT Declaration public const int INTERSECT = null Field Value Type Description System.Int32 INTMONTH Declaration public const int INTMONTH = null Field Value Type Description System.Int32 INTYEAR Declaration public const int INTYEAR = null Field Value Type Description System.Int32 INVALID Declaration public const int INVALID = null Field Value Type Description System.Int32 IS Declaration public const int IS = null Field Value Type Description System.Int32 ISNULL Declaration public const int ISNULL = null Field Value Type Description System.Int32 KEEP Declaration public const int KEEP = null Field Value Type Description System.Int32 KEY Declaration public const int KEY = null Field Value Type Description System.Int32 KEYS Declaration public const int KEYS = null Field Value Type Description System.Int32 LAG Declaration public const int LAG = null Field Value Type Description System.Int32 LANGUAGE Declaration public const int LANGUAGE = null Field Value Type Description System.Int32 LAST Declaration public const int LAST = null Field Value Type Description System.Int32 LAST_VALUE Declaration public const int LAST_VALUE = null Field Value Type Description System.Int32 LCASE Declaration public const int LCASE = null Field Value Type Description System.Int32 LEAD Declaration public const int LEAD = null Field Value Type Description System.Int32 LEFT_JOIN Declaration public const int LEFT_JOIN = null Field Value Type Description System.Int32 LEN Declaration public const int LEN = null Field Value Type Description System.Int32 LIST Declaration public const int LIST = null Field Value Type Description System.Int32 LN Declaration public const int LN = null Field Value Type Description System.Int32 LOG Declaration public const int LOG = null Field Value Type Description System.Int32 LTRIM Declaration public const int LTRIM = null Field Value Type Description System.Int32 MAP_FROM Declaration public const int MAP_FROM = null Field Value Type Description System.Int32 MAP_TO Declaration public const int MAP_TO = null Field Value Type Description System.Int32 MAPS_FROM Declaration public const int MAPS_FROM = null Field Value Type Description System.Int32 MAPS_TO Declaration public const int MAPS_TO = null Field Value Type Description System.Int32 MAX Declaration public const int MAX = null Field Value Type Description System.Int32 MAX_LENGTH Declaration public const int MAX_LENGTH = null Field Value Type Description System.Int32 MEASURE Declaration public const int MEASURE = null Field Value Type Description System.Int32 MEASURES Declaration public const int MEASURES = null Field Value Type Description System.Int32 MEDIAN Declaration public const int MEDIAN = null Field Value Type Description System.Int32 MEMBERSHIP Declaration public const int MEMBERSHIP = null Field Value Type Description System.Int32 MERGE Declaration public const int MERGE = null Field Value Type Description System.Int32 MIN Declaration public const int MIN = null Field Value Type Description System.Int32 MINUTES Declaration public const int MINUTES = null Field Value Type Description System.Int32 ML_COMMENT Declaration public const int ML_COMMENT = null Field Value Type Description System.Int32 MM Declaration public const int MM = null Field Value Type Description System.Int32 MOD Declaration public const int MOD = null Field Value Type Description System.Int32 modeNames Declaration public static string[] modeNames Field Value Type Description System.String [] MONTH Declaration public const int MONTH = null Field Value Type Description System.Int32 NO_MEASURES Declaration public const int NO_MEASURES = null Field Value Type Description System.Int32 NON_NULL Declaration public const int NON_NULL = null Field Value Type Description System.Int32 NON_ZERO Declaration public const int NON_ZERO = null Field Value Type Description System.Int32 NOT Declaration public const int NOT = null Field Value Type Description System.Int32 NOT_IN Declaration public const int NOT_IN = null Field Value Type Description System.Int32 NULL_CONSTANT Declaration public const int NULL_CONSTANT = null Field Value Type Description System.Int32 NUMBER Declaration public const int NUMBER = null Field Value Type Description System.Int32 NVL Declaration public const int NVL = null Field Value Type Description System.Int32 ON Declaration public const int ON = null Field Value Type Description System.Int32 OPERATOR Declaration public const int OPERATOR = null Field Value Type Description System.Int32 OPTIONAL Declaration public const int OPTIONAL = null Field Value Type Description System.Int32 OR Declaration public const int OR = null Field Value Type Description System.Int32 ORDER Declaration public const int ORDER = null Field Value Type Description System.Int32 OUTPUT Declaration public const int OUTPUT = null Field Value Type Description System.Int32 OVER Declaration public const int OVER = null Field Value Type Description System.Int32 PARTIAL Declaration public const int PARTIAL = null Field Value Type Description System.Int32 PARTIAL_NULL Declaration public const int PARTIAL_NULL = null Field Value Type Description System.Int32 PARTIAL_ZERO Declaration public const int PARTIAL_ZERO = null Field Value Type Description System.Int32 PARTITION Declaration public const int PARTITION = null Field Value Type Description System.Int32 PERIOD_INDICATOR Declaration public const int PERIOD_INDICATOR = null Field Value Type Description System.Int32 PIVOT Declaration public const int PIVOT = null Field Value Type Description System.Int32 POINT Declaration public const int POINT = null Field Value Type Description System.Int32 POINTS Declaration public const int POINTS = null Field Value Type Description System.Int32 POWER Declaration public const int POWER = null Field Value Type Description System.Int32 PRECEDING Declaration public const int PRECEDING = null Field Value Type Description System.Int32 PUT_SYMBOL Declaration public const int PUT_SYMBOL = null Field Value Type Description System.Int32 RANGE Declaration public const int RANGE = null Field Value Type Description System.Int32 RANK Declaration public const int RANK = null Field Value Type Description System.Int32 RATIO_TO_REPORT Declaration public const int RATIO_TO_REPORT = null Field Value Type Description System.Int32 RECORD Declaration public const int RECORD = null Field Value Type Description System.Int32 REGEXP Declaration public const int REGEXP = null Field Value Type Description System.Int32 RENAME Declaration public const int RENAME = null Field Value Type Description System.Int32 REPLACE Declaration public const int REPLACE = null Field Value Type Description System.Int32 RESTRICT Declaration public const int RESTRICT = null Field Value Type Description System.Int32 RETURN Declaration public const int RETURN = null Field Value Type Description System.Int32 RETURNS Declaration public const int RETURNS = null Field Value Type Description System.Int32 ROLE Declaration public const int ROLE = null Field Value Type Description System.Int32 ROUND Declaration public const int ROUND = null Field Value Type Description System.Int32 ROWS Declaration public const int ROWS = null Field Value Type Description System.Int32 RTRIM Declaration public const int RTRIM = null Field Value Type Description System.Int32 RULE Declaration public const int RULE = null Field Value Type Description System.Int32 RULE_PRIORITY Declaration public const int RULE_PRIORITY = null Field Value Type Description System.Int32 ruleNames Declaration public static readonly string[] ruleNames Field Value Type Description System.String [] RULESET Declaration public const int RULESET = null Field Value Type Description System.Int32 SCALAR Declaration public const int SCALAR = null Field Value Type Description System.Int32 SECONDS Declaration public const int SECONDS = null Field Value Type Description System.Int32 SET Declaration public const int SET = null Field Value Type Description System.Int32 SETDIFF Declaration public const int SETDIFF = null Field Value Type Description System.Int32 sharedContextCache Declaration protected static PredictionContextCache sharedContextCache Field Value Type Description PredictionContextCache SINGLE Declaration public const int SINGLE = null Field Value Type Description System.Int32 SL_COMMENT Declaration public const int SL_COMMENT = null Field Value Type Description System.Int32 SQRT Declaration public const int SQRT = null Field Value Type Description System.Int32 STDDEV_POP Declaration public const int STDDEV_POP = null Field Value Type Description System.Int32 STDDEV_SAMP Declaration public const int STDDEV_SAMP = null Field Value Type Description System.Int32 STOCK_TO_FLOW Declaration public const int STOCK_TO_FLOW = null Field Value Type Description System.Int32 STRING Declaration public const int STRING = null Field Value Type Description System.Int32 STRING_CONSTANT Declaration public const int STRING_CONSTANT = null Field Value Type Description System.Int32 STRUCTURE Declaration public const int STRUCTURE = null Field Value Type Description System.Int32 SUBSPACE Declaration public const int SUBSPACE = null Field Value Type Description System.Int32 SUBSTR Declaration public const int SUBSTR = null Field Value Type Description System.Int32 SUM Declaration public const int SUM = null Field Value Type Description System.Int32 SYMDIFF Declaration public const int SYMDIFF = null Field Value Type Description System.Int32 T__0 Declaration public const int T__0 = null Field Value Type Description System.Int32 T__1 Declaration public const int T__1 = null Field Value Type Description System.Int32 T__10 Declaration public const int T__10 = null Field Value Type Description System.Int32 T__11 Declaration public const int T__11 = null Field Value Type Description System.Int32 T__12 Declaration public const int T__12 = null Field Value Type Description System.Int32 T__13 Declaration public const int T__13 = null Field Value Type Description System.Int32 T__14 Declaration public const int T__14 = null Field Value Type Description System.Int32 T__15 Declaration public const int T__15 = null Field Value Type Description System.Int32 T__16 Declaration public const int T__16 = null Field Value Type Description System.Int32 T__17 Declaration public const int T__17 = null Field Value Type Description System.Int32 T__2 Declaration public const int T__2 = null Field Value Type Description System.Int32 T__3 Declaration public const int T__3 = null Field Value Type Description System.Int32 T__4 Declaration public const int T__4 = null Field Value Type Description System.Int32 T__5 Declaration public const int T__5 = null Field Value Type Description System.Int32 T__6 Declaration public const int T__6 = null Field Value Type Description System.Int32 T__7 Declaration public const int T__7 = null Field Value Type Description System.Int32 T__8 Declaration public const int T__8 = null Field Value Type Description System.Int32 T__9 Declaration public const int T__9 = null Field Value Type Description System.Int32 THEN Declaration public const int THEN = null Field Value Type Description System.Int32 TIME Declaration public const int TIME = null Field Value Type Description System.Int32 TIME_AGG Declaration public const int TIME_AGG = null Field Value Type Description System.Int32 TIME_CONSTANT Declaration public const int TIME_CONSTANT = null Field Value Type Description System.Int32 TIME_FORMAT Declaration public const int TIME_FORMAT = null Field Value Type Description System.Int32 TIME_PERIOD Declaration public const int TIME_PERIOD = null Field Value Type Description System.Int32 TIME_UNIT Declaration public const int TIME_UNIT = null Field Value Type Description System.Int32 TIMESHIFT Declaration public const int TIMESHIFT = null Field Value Type Description System.Int32 TO Declaration public const int TO = null Field Value Type Description System.Int32 TOTAL Declaration public const int TOTAL = null Field Value Type Description System.Int32 TRIM Declaration public const int TRIM = null Field Value Type Description System.Int32 TRUNC Declaration public const int TRUNC = null Field Value Type Description System.Int32 TYPE Declaration public const int TYPE = null Field Value Type Description System.Int32 UCASE Declaration public const int UCASE = null Field Value Type Description System.Int32 UNBOUNDED Declaration public const int UNBOUNDED = null Field Value Type Description System.Int32 UNION Declaration public const int UNION = null Field Value Type Description System.Int32 UNIT Declaration public const int UNIT = null Field Value Type Description System.Int32 UNPIVOT Declaration public const int UNPIVOT = null Field Value Type Description System.Int32 USING Declaration public const int USING = null Field Value Type Description System.Int32 VALID Declaration public const int VALID = null Field Value Type Description System.Int32 VALUE Declaration public const int VALUE = null Field Value Type Description System.Int32 VALUE_DOMAIN Declaration public const int VALUE_DOMAIN = null Field Value Type Description System.Int32 VALUEDOMAINS Declaration public const int VALUEDOMAINS = null Field Value Type Description System.Int32 VAR_POP Declaration public const int VAR_POP = null Field Value Type Description System.Int32 VAR_SAMP Declaration public const int VAR_SAMP = null Field Value Type Description System.Int32 VARIABLE Declaration public const int VARIABLE = null Field Value Type Description System.Int32 VARIABLES Declaration public const int VARIABLES = null Field Value Type Description System.Int32 VIRAL Declaration public const int VIRAL = null Field Value Type Description System.Int32 WEEK Declaration public const int WEEK = null Field Value Type Description System.Int32 WHEN Declaration public const int WHEN = null Field Value Type Description System.Int32 WITH Declaration public const int WITH = null Field Value Type Description System.Int32 WS Declaration public const int WS = null Field Value Type Description System.Int32 XOR Declaration public const int XOR = null Field Value Type Description System.Int32 YEAR Declaration public const int YEAR = null Field Value Type Description System.Int32 YYYY Declaration public const int YYYY = null Field Value Type Description System.Int32 Properties ChannelNames Declaration public override string[] ChannelNames { get; } Property Value Type Description System.String [] GrammarFileName Declaration public override string GrammarFileName { get; } Property Value Type Description System.String ModeNames Declaration public override string[] ModeNames { get; } Property Value Type Description System.String [] RuleNames Declaration public override string[] RuleNames { get; } Property Value Type Description System.String [] SerializedAtn Declaration public override string SerializedAtn { get; } Property Value Type Description System.String Vocabulary Declaration public override IVocabulary Vocabulary { get; } Property Value Type Description IVocabulary Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrClauseContext.html",
    "title": "Class VtlParser.AggrClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.AggrClauseContext Inheritance System.Object VtlParser.AggrClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class AggrClauseContext : ParserRuleContext Constructors AggrClauseContext(ParserRuleContext, Int32) Declaration public AggrClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult AGGREGATE() Declaration public ITerminalNode AGGREGATE() Returns Type Description ITerminalNode aggrExpr() Declaration public VtlParser.AggrExprContext[] aggrExpr() Returns Type Description VtlParser.AggrExprContext [] aggrExpr(Int32) Declaration public VtlParser.AggrExprContext aggrExpr(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.AggrExprContext CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener groupingClause() Declaration public VtlParser.GroupingClauseContext groupingClause() Returns Type Description VtlParser.GroupingClauseContext havingClause() Declaration public VtlParser.HavingClauseContext havingClause() Returns Type Description VtlParser.HavingClauseContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrExprContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrExprContext.html",
    "title": "Class VtlParser.AggrExprContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.AggrExprContext Inheritance System.Object VtlParser.AggrExprContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class AggrExprContext : ParserRuleContext Constructors AggrExprContext(ParserRuleContext, Int32) Declaration public AggrExprContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult aggrFunction() Declaration public VtlParser.AggrFunctionContext aggrFunction() Returns Type Description VtlParser.AggrFunctionContext ASSIGN() Declaration public ITerminalNode ASSIGN() Returns Type Description ITerminalNode componentID() Declaration public VtlParser.ComponentIDContext componentID() Returns Type Description VtlParser.ComponentIDContext componentRole() Declaration public VtlParser.ComponentRoleContext componentRole() Returns Type Description VtlParser.ComponentRoleContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrFunctionContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrFunctionContext.html",
    "title": "Class VtlParser.AggrFunctionContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.AggrFunctionContext Inheritance System.Object VtlParser.AggrFunctionContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class AggrFunctionContext : ParserRuleContext Constructors AggrFunctionContext(ParserRuleContext, Int32) Declaration public AggrFunctionContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Fields opSymbol Declaration public IToken opSymbol Field Value Type Description IToken Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult AVG() Declaration public ITerminalNode AVG() Returns Type Description ITerminalNode component() Declaration public VtlParser.ComponentContext component() Returns Type Description VtlParser.ComponentContext COUNT() Declaration public ITerminalNode COUNT() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener MAX() Declaration public ITerminalNode MAX() Returns Type Description ITerminalNode MEDIAN() Declaration public ITerminalNode MEDIAN() Returns Type Description ITerminalNode MIN() Declaration public ITerminalNode MIN() Returns Type Description ITerminalNode RANK() Declaration public ITerminalNode RANK() Returns Type Description ITerminalNode STDDEV_POP() Declaration public ITerminalNode STDDEV_POP() Returns Type Description ITerminalNode STDDEV_SAMP() Declaration public ITerminalNode STDDEV_SAMP() Returns Type Description ITerminalNode SUM() Declaration public ITerminalNode SUM() Returns Type Description ITerminalNode VAR_POP() Declaration public ITerminalNode VAR_POP() Returns Type Description ITerminalNode VAR_SAMP() Declaration public ITerminalNode VAR_SAMP() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrFunctionNameContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrFunctionNameContext.html",
    "title": "Class VtlParser.AggrFunctionNameContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.AggrFunctionNameContext Inheritance System.Object VtlParser.AggrFunctionNameContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class AggrFunctionNameContext : ParserRuleContext Constructors AggrFunctionNameContext(ParserRuleContext, Int32) Declaration public AggrFunctionNameContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult AVG() Declaration public ITerminalNode AVG() Returns Type Description ITerminalNode COUNT() Declaration public ITerminalNode COUNT() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener MAX() Declaration public ITerminalNode MAX() Returns Type Description ITerminalNode MEDIAN() Declaration public ITerminalNode MEDIAN() Returns Type Description ITerminalNode MIN() Declaration public ITerminalNode MIN() Returns Type Description ITerminalNode STDDEV_POP() Declaration public ITerminalNode STDDEV_POP() Returns Type Description ITerminalNode STDDEV_SAMP() Declaration public ITerminalNode STDDEV_SAMP() Returns Type Description ITerminalNode SUM() Declaration public ITerminalNode SUM() Returns Type Description ITerminalNode VAR_POP() Declaration public ITerminalNode VAR_POP() Returns Type Description ITerminalNode VAR_SAMP() Declaration public ITerminalNode VAR_SAMP() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrInvocationContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrInvocationContext.html",
    "title": "Class VtlParser.AggrInvocationContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.AggrInvocationContext Inheritance System.Object VtlParser.AggrInvocationContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class AggrInvocationContext : ParserRuleContext Constructors AggrInvocationContext(ParserRuleContext, Int32) Declaration public AggrInvocationContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Fields opSymbol Declaration public VtlParser.AggrFunctionNameContext opSymbol Field Value Type Description VtlParser.AggrFunctionNameContext Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult aggrFunctionName() Declaration public VtlParser.AggrFunctionNameContext aggrFunctionName() Returns Type Description VtlParser.AggrFunctionNameContext dataset() Declaration public VtlParser.DatasetContext dataset() Returns Type Description VtlParser.DatasetContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener groupingClause() Declaration public VtlParser.GroupingClauseContext groupingClause() Returns Type Description VtlParser.GroupingClauseContext havingClause() Declaration public VtlParser.HavingClauseContext havingClause() Returns Type Description VtlParser.HavingClauseContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AnalyticClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AnalyticClauseContext.html",
    "title": "Class VtlParser.AnalyticClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.AnalyticClauseContext Inheritance System.Object VtlParser.AnalyticClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class AnalyticClauseContext : ParserRuleContext Constructors AnalyticClauseContext(ParserRuleContext, Int32) Declaration public AnalyticClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener orderClause() Declaration public VtlParser.OrderClauseContext orderClause() Returns Type Description VtlParser.OrderClauseContext partitionClause() Declaration public VtlParser.PartitionClauseContext partitionClause() Returns Type Description VtlParser.PartitionClauseContext windowingClause() Declaration public VtlParser.WindowingClauseContext windowingClause() Returns Type Description VtlParser.WindowingClauseContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AnalyticFunctionContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AnalyticFunctionContext.html",
    "title": "Class VtlParser.AnalyticFunctionContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.AnalyticFunctionContext Inheritance System.Object VtlParser.AnalyticFunctionContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class AnalyticFunctionContext : ParserRuleContext Constructors AnalyticFunctionContext(ParserRuleContext, Int32) Declaration public AnalyticFunctionContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Fields opSymbol Declaration public IToken opSymbol Field Value Type Description IToken Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult aggrFunctionName() Declaration public VtlParser.AggrFunctionNameContext aggrFunctionName() Returns Type Description VtlParser.AggrFunctionNameContext analyticClause() Declaration public VtlParser.AnalyticClauseContext analyticClause() Returns Type Description VtlParser.AnalyticClauseContext CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode component() Declaration public VtlParser.ComponentContext component() Returns Type Description VtlParser.ComponentContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener FIRST_VALUE() Declaration public ITerminalNode FIRST_VALUE() Returns Type Description ITerminalNode LAG() Declaration public ITerminalNode LAG() Returns Type Description ITerminalNode LAST_VALUE() Declaration public ITerminalNode LAST_VALUE() Returns Type Description ITerminalNode LEAD() Declaration public ITerminalNode LEAD() Returns Type Description ITerminalNode orderClause() Declaration public VtlParser.OrderClauseContext orderClause() Returns Type Description VtlParser.OrderClauseContext OVER() Declaration public ITerminalNode OVER() Returns Type Description ITerminalNode partitionClause() Declaration public VtlParser.PartitionClauseContext partitionClause() Returns Type Description VtlParser.PartitionClauseContext RANK() Declaration public ITerminalNode RANK() Returns Type Description ITerminalNode RATIO_TO_REPORT() Declaration public ITerminalNode RATIO_TO_REPORT() Returns Type Description ITerminalNode scalar() Declaration public VtlParser.ScalarContext[] scalar() Returns Type Description VtlParser.ScalarContext [] scalar(Int32) Declaration public VtlParser.ScalarContext scalar(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ScalarContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AnalyticFunctionNameContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AnalyticFunctionNameContext.html",
    "title": "Class VtlParser.AnalyticFunctionNameContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.AnalyticFunctionNameContext Inheritance System.Object VtlParser.AnalyticFunctionNameContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class AnalyticFunctionNameContext : ParserRuleContext Constructors AnalyticFunctionNameContext(ParserRuleContext, Int32) Declaration public AnalyticFunctionNameContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener FIRST_VALUE() Declaration public ITerminalNode FIRST_VALUE() Returns Type Description ITerminalNode LAG() Declaration public ITerminalNode LAG() Returns Type Description ITerminalNode LAST_VALUE() Declaration public ITerminalNode LAST_VALUE() Returns Type Description ITerminalNode LEAD() Declaration public ITerminalNode LEAD() Returns Type Description ITerminalNode RANK() Declaration public ITerminalNode RANK() Returns Type Description ITerminalNode RATIO_TO_REPORT() Declaration public ITerminalNode RATIO_TO_REPORT() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AnalyticInvocationContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AnalyticInvocationContext.html",
    "title": "Class VtlParser.AnalyticInvocationContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.AnalyticInvocationContext Inheritance System.Object VtlParser.AnalyticInvocationContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class AnalyticInvocationContext : ParserRuleContext Constructors AnalyticInvocationContext(ParserRuleContext, Int32) Declaration public AnalyticInvocationContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Fields aggrOpSymbol Declaration public VtlParser.AggrFunctionNameContext aggrOpSymbol Field Value Type Description VtlParser.AggrFunctionNameContext opSymbol Declaration public IToken opSymbol Field Value Type Description IToken Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult aggrFunctionName() Declaration public VtlParser.AggrFunctionNameContext aggrFunctionName() Returns Type Description VtlParser.AggrFunctionNameContext analyticClause() Declaration public VtlParser.AnalyticClauseContext analyticClause() Returns Type Description VtlParser.AnalyticClauseContext CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode dataset() Declaration public VtlParser.DatasetContext dataset() Returns Type Description VtlParser.DatasetContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener FIRST_VALUE() Declaration public ITerminalNode FIRST_VALUE() Returns Type Description ITerminalNode LAG() Declaration public ITerminalNode LAG() Returns Type Description ITerminalNode LAST_VALUE() Declaration public ITerminalNode LAST_VALUE() Returns Type Description ITerminalNode LEAD() Declaration public ITerminalNode LEAD() Returns Type Description ITerminalNode orderClause() Declaration public VtlParser.OrderClauseContext orderClause() Returns Type Description VtlParser.OrderClauseContext OVER() Declaration public ITerminalNode OVER() Returns Type Description ITerminalNode partitionClause() Declaration public VtlParser.PartitionClauseContext partitionClause() Returns Type Description VtlParser.PartitionClauseContext RATIO_TO_REPORT() Declaration public ITerminalNode RATIO_TO_REPORT() Returns Type Description ITerminalNode scalar() Declaration public VtlParser.ScalarContext[] scalar() Returns Type Description VtlParser.ScalarContext [] scalar(Int32) Declaration public VtlParser.ScalarContext scalar(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ScalarContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.CalcClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.CalcClauseContext.html",
    "title": "Class VtlParser.CalcClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.CalcClauseContext Inheritance System.Object VtlParser.CalcClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class CalcClauseContext : ParserRuleContext Constructors CalcClauseContext(ParserRuleContext, Int32) Declaration public CalcClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CALC() Declaration public ITerminalNode CALC() Returns Type Description ITerminalNode calcExpr() Declaration public VtlParser.CalcExprContext[] calcExpr() Returns Type Description VtlParser.CalcExprContext [] calcExpr(Int32) Declaration public VtlParser.CalcExprContext calcExpr(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.CalcExprContext CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.CalcExprContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.CalcExprContext.html",
    "title": "Class VtlParser.CalcExprContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.CalcExprContext Inheritance System.Object VtlParser.CalcExprContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class CalcExprContext : ParserRuleContext Constructors CalcExprContext(ParserRuleContext, Int32) Declaration public CalcExprContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult analyticFunction() Declaration public VtlParser.AnalyticFunctionContext analyticFunction() Returns Type Description VtlParser.AnalyticFunctionContext ASSIGN() Declaration public ITerminalNode ASSIGN() Returns Type Description ITerminalNode componentID() Declaration public VtlParser.ComponentIDContext componentID() Returns Type Description VtlParser.ComponentIDContext componentRole() Declaration public VtlParser.ComponentRoleContext componentRole() Returns Type Description VtlParser.ComponentRoleContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener scalar() Declaration public VtlParser.ScalarContext scalar() Returns Type Description VtlParser.ScalarContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.CheckDatapointContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.CheckDatapointContext.html",
    "title": "Class VtlParser.CheckDatapointContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.CheckDatapointContext Inheritance System.Object VtlParser.CheckDatapointContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class CheckDatapointContext : ParserRuleContext Constructors CheckDatapointContext(ParserRuleContext, Int32) Declaration public CheckDatapointContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Fields output Declaration public IToken output Field Value Type Description IToken Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult ALL() Declaration public ITerminalNode ALL() Returns Type Description ITerminalNode ALL_MEASURES() Declaration public ITerminalNode ALL_MEASURES() Returns Type Description ITerminalNode CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode CHECK_DATAPOINT() Declaration public ITerminalNode CHECK_DATAPOINT() Returns Type Description ITerminalNode componentID() Declaration public VtlParser.ComponentIDContext[] componentID() Returns Type Description VtlParser.ComponentIDContext [] componentID(Int32) Declaration public VtlParser.ComponentIDContext componentID(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ComponentIDContext COMPONENTS() Declaration public ITerminalNode COMPONENTS() Returns Type Description ITerminalNode dataset() Declaration public VtlParser.DatasetContext dataset() Returns Type Description VtlParser.DatasetContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener INVALID() Declaration public ITerminalNode INVALID() Returns Type Description ITerminalNode rulesetID() Declaration public VtlParser.RulesetIDContext rulesetID() Returns Type Description VtlParser.RulesetIDContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ClosedDatasetContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ClosedDatasetContext.html",
    "title": "Class VtlParser.ClosedDatasetContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.ClosedDatasetContext Inheritance System.Object VtlParser.ClosedDatasetContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ClosedDatasetContext : ParserRuleContext Constructors ClosedDatasetContext(ParserRuleContext, Int32) Declaration public ClosedDatasetContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Fields opSymbol Declaration public IToken opSymbol Field Value Type Description IToken Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods ABS() Declaration public ITerminalNode ABS() Returns Type Description ITerminalNode Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult BETWEEN() Declaration public ITerminalNode BETWEEN() Returns Type Description ITerminalNode CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode CEIL() Declaration public ITerminalNode CEIL() Returns Type Description ITerminalNode CHARSET_MATCH() Declaration public ITerminalNode CHARSET_MATCH() Returns Type Description ITerminalNode closedDataset() Declaration public VtlParser.ClosedDatasetContext closedDataset() Returns Type Description VtlParser.ClosedDatasetContext dataset() Declaration public VtlParser.DatasetContext[] dataset() Returns Type Description VtlParser.DatasetContext [] dataset(Int32) Declaration public VtlParser.DatasetContext dataset(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.DatasetContext datasetClause() Declaration public VtlParser.DatasetClauseContext datasetClause() Returns Type Description VtlParser.DatasetClauseContext datasetComplex() Declaration public VtlParser.DatasetComplexContext datasetComplex() Returns Type Description VtlParser.DatasetComplexContext datasetID() Declaration public VtlParser.DatasetIDContext datasetID() Returns Type Description VtlParser.DatasetIDContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener EXISTS_IN() Declaration public ITerminalNode EXISTS_IN() Returns Type Description ITerminalNode ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener EXP() Declaration public ITerminalNode EXP() Returns Type Description ITerminalNode FILL_TIME_SERIES() Declaration public ITerminalNode FILL_TIME_SERIES() Returns Type Description ITerminalNode FLOOR() Declaration public ITerminalNode FLOOR() Returns Type Description ITerminalNode FLOW_TO_STOCK() Declaration public ITerminalNode FLOW_TO_STOCK() Returns Type Description ITerminalNode INSTR() Declaration public ITerminalNode INSTR() Returns Type Description ITerminalNode ISNULL() Declaration public ITerminalNode ISNULL() Returns Type Description ITerminalNode LCASE() Declaration public ITerminalNode LCASE() Returns Type Description ITerminalNode LEN() Declaration public ITerminalNode LEN() Returns Type Description ITerminalNode limitsMethod() Declaration public VtlParser.LimitsMethodContext limitsMethod() Returns Type Description VtlParser.LimitsMethodContext LN() Declaration public ITerminalNode LN() Returns Type Description ITerminalNode LOG() Declaration public ITerminalNode LOG() Returns Type Description ITerminalNode LTRIM() Declaration public ITerminalNode LTRIM() Returns Type Description ITerminalNode membershipDataset() Declaration public VtlParser.MembershipDatasetContext membershipDataset() Returns Type Description VtlParser.MembershipDatasetContext MOD() Declaration public ITerminalNode MOD() Returns Type Description ITerminalNode NVL() Declaration public ITerminalNode NVL() Returns Type Description ITerminalNode openedDataset() Declaration public VtlParser.OpenedDatasetContext openedDataset() Returns Type Description VtlParser.OpenedDatasetContext optionalExpr() Declaration public VtlParser.OptionalExprContext[] optionalExpr() Returns Type Description VtlParser.OptionalExprContext [] optionalExpr(Int32) Declaration public VtlParser.OptionalExprContext optionalExpr(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.OptionalExprContext PERIOD_INDICATOR() Declaration public ITerminalNode PERIOD_INDICATOR() Returns Type Description ITerminalNode POWER() Declaration public ITerminalNode POWER() Returns Type Description ITerminalNode REPLACE() Declaration public ITerminalNode REPLACE() Returns Type Description ITerminalNode retainType() Declaration public VtlParser.RetainTypeContext retainType() Returns Type Description VtlParser.RetainTypeContext ROUND() Declaration public ITerminalNode ROUND() Returns Type Description ITerminalNode RTRIM() Declaration public ITerminalNode RTRIM() Returns Type Description ITerminalNode scalar() Declaration public VtlParser.ScalarContext[] scalar() Returns Type Description VtlParser.ScalarContext [] scalar(Int32) Declaration public VtlParser.ScalarContext scalar(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ScalarContext SQRT() Declaration public ITerminalNode SQRT() Returns Type Description ITerminalNode STOCK_TO_FLOW() Declaration public ITerminalNode STOCK_TO_FLOW() Returns Type Description ITerminalNode SUBSTR() Declaration public ITerminalNode SUBSTR() Returns Type Description ITerminalNode TIME_AGG() Declaration public ITerminalNode TIME_AGG() Returns Type Description ITerminalNode TIMESHIFT() Declaration public ITerminalNode TIMESHIFT() Returns Type Description ITerminalNode TRIM() Declaration public ITerminalNode TRIM() Returns Type Description ITerminalNode TRUNC() Declaration public ITerminalNode TRUNC() Returns Type Description ITerminalNode UCASE() Declaration public ITerminalNode UCASE() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ComponentContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ComponentContext.html",
    "title": "Class VtlParser.ComponentContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.ComponentContext Inheritance System.Object VtlParser.ComponentContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ComponentContext : ParserRuleContext Constructors ComponentContext(ParserRuleContext, Int32) Declaration public ComponentContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult closedDataset() Declaration public VtlParser.ClosedDatasetContext closedDataset() Returns Type Description VtlParser.ClosedDatasetContext componentID() Declaration public VtlParser.ComponentIDContext componentID() Returns Type Description VtlParser.ComponentIDContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener MEMBERSHIP() Declaration public ITerminalNode MEMBERSHIP() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ComponentIDContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ComponentIDContext.html",
    "title": "Class VtlParser.ComponentIDContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.ComponentIDContext Inheritance System.Object VtlParser.ComponentIDContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ComponentIDContext : ParserRuleContext Constructors ComponentIDContext(ParserRuleContext, Int32) Declaration public ComponentIDContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener IDENTIFIER() Declaration public ITerminalNode IDENTIFIER() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ComponentRoleContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ComponentRoleContext.html",
    "title": "Class VtlParser.ComponentRoleContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.ComponentRoleContext Inheritance System.Object VtlParser.ComponentRoleContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ComponentRoleContext : ParserRuleContext Constructors ComponentRoleContext(ParserRuleContext, Int32) Declaration public ComponentRoleContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult ATTRIBUTE() Declaration public ITerminalNode ATTRIBUTE() Returns Type Description ITerminalNode DIMENSION() Declaration public ITerminalNode DIMENSION() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener MEASURE() Declaration public ITerminalNode MEASURE() Returns Type Description ITerminalNode VIRAL() Declaration public ITerminalNode VIRAL() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ConstantContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ConstantContext.html",
    "title": "Class VtlParser.ConstantContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.ConstantContext Inheritance System.Object VtlParser.ConstantContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ConstantContext : ParserRuleContext Constructors ConstantContext(ParserRuleContext, Int32) Declaration public ConstantContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult BOOLEAN_CONSTANT() Declaration public ITerminalNode BOOLEAN_CONSTANT() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener FLOAT_CONSTANT() Declaration public ITerminalNode FLOAT_CONSTANT() Returns Type Description ITerminalNode INTEGER_CONSTANT() Declaration public ITerminalNode INTEGER_CONSTANT() Returns Type Description ITerminalNode NULL_CONSTANT() Declaration public ITerminalNode NULL_CONSTANT() Returns Type Description ITerminalNode STRING_CONSTANT() Declaration public ITerminalNode STRING_CONSTANT() Returns Type Description ITerminalNode TIME_CONSTANT() Declaration public ITerminalNode TIME_CONSTANT() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DatasetClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DatasetClauseContext.html",
    "title": "Class VtlParser.DatasetClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.DatasetClauseContext Inheritance System.Object VtlParser.DatasetClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DatasetClauseContext : ParserRuleContext Constructors DatasetClauseContext(ParserRuleContext, Int32) Declaration public DatasetClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult aggrClause() Declaration public VtlParser.AggrClauseContext aggrClause() Returns Type Description VtlParser.AggrClauseContext analyticClause() Declaration public VtlParser.AnalyticClauseContext analyticClause() Returns Type Description VtlParser.AnalyticClauseContext calcClause() Declaration public VtlParser.CalcClauseContext calcClause() Returns Type Description VtlParser.CalcClauseContext dropClause() Declaration public VtlParser.DropClauseContext dropClause() Returns Type Description VtlParser.DropClauseContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener filterClause() Declaration public VtlParser.FilterClauseContext filterClause() Returns Type Description VtlParser.FilterClauseContext keepClause() Declaration public VtlParser.KeepClauseContext keepClause() Returns Type Description VtlParser.KeepClauseContext pivotClause() Declaration public VtlParser.PivotClauseContext pivotClause() Returns Type Description VtlParser.PivotClauseContext renameClause() Declaration public VtlParser.RenameClauseContext renameClause() Returns Type Description VtlParser.RenameClauseContext subspaceClause() Declaration public VtlParser.SubspaceClauseContext subspaceClause() Returns Type Description VtlParser.SubspaceClauseContext unpivotClause() Declaration public VtlParser.UnpivotClauseContext unpivotClause() Returns Type Description VtlParser.UnpivotClauseContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DatasetComplexContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DatasetComplexContext.html",
    "title": "Class VtlParser.DatasetComplexContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.DatasetComplexContext Inheritance System.Object VtlParser.DatasetComplexContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DatasetComplexContext : ParserRuleContext Constructors DatasetComplexContext(ParserRuleContext, Int32) Declaration public DatasetComplexContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult aggrInvocation() Declaration public VtlParser.AggrInvocationContext aggrInvocation() Returns Type Description VtlParser.AggrInvocationContext analyticInvocation() Declaration public VtlParser.AnalyticInvocationContext analyticInvocation() Returns Type Description VtlParser.AnalyticInvocationContext checkDatapoint() Declaration public VtlParser.CheckDatapointContext checkDatapoint() Returns Type Description VtlParser.CheckDatapointContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener joinExpr() Declaration public VtlParser.JoinExprContext joinExpr() Returns Type Description VtlParser.JoinExprContext setExpr() Declaration public VtlParser.SetExprContext setExpr() Returns Type Description VtlParser.SetExprContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DatasetContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DatasetContext.html",
    "title": "Class VtlParser.DatasetContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.DatasetContext Inheritance System.Object VtlParser.DatasetContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DatasetContext : ParserRuleContext Constructors DatasetContext(ParserRuleContext, Int32) Declaration public DatasetContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult closedDataset() Declaration public VtlParser.ClosedDatasetContext closedDataset() Returns Type Description VtlParser.ClosedDatasetContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener membershipDataset() Declaration public VtlParser.MembershipDatasetContext membershipDataset() Returns Type Description VtlParser.MembershipDatasetContext openedDataset() Declaration public VtlParser.OpenedDatasetContext openedDataset() Returns Type Description VtlParser.OpenedDatasetContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DatasetIDContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DatasetIDContext.html",
    "title": "Class VtlParser.DatasetIDContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.DatasetIDContext Inheritance System.Object VtlParser.DatasetIDContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DatasetIDContext : ParserRuleContext Constructors DatasetIDContext(ParserRuleContext, Int32) Declaration public DatasetIDContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener IDENTIFIER() Declaration public ITerminalNode[] IDENTIFIER() Returns Type Description ITerminalNode [] IDENTIFIER(Int32) Declaration public ITerminalNode IDENTIFIER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DefDatapointContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DefDatapointContext.html",
    "title": "Class VtlParser.DefDatapointContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.DefDatapointContext Inheritance System.Object VtlParser.DefDatapointContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DefDatapointContext : ParserRuleContext Constructors DefDatapointContext(ParserRuleContext, Int32) Declaration public DefDatapointContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult DATAPOINT() Declaration public ITerminalNode[] DATAPOINT() Returns Type Description ITerminalNode [] DATAPOINT(Int32) Declaration public ITerminalNode DATAPOINT(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode DEFINE() Declaration public ITerminalNode DEFINE() Returns Type Description ITerminalNode END() Declaration public ITerminalNode END() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener IS() Declaration public ITerminalNode IS() Returns Type Description ITerminalNode ruleClauseDatapoint() Declaration public VtlParser.RuleClauseDatapointContext ruleClauseDatapoint() Returns Type Description VtlParser.RuleClauseDatapointContext RULESET() Declaration public ITerminalNode[] RULESET() Returns Type Description ITerminalNode [] RULESET(Int32) Declaration public ITerminalNode RULESET(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode rulesetID() Declaration public VtlParser.RulesetIDContext rulesetID() Returns Type Description VtlParser.RulesetIDContext rulesetSignature() Declaration public VtlParser.RulesetSignatureContext rulesetSignature() Returns Type Description VtlParser.RulesetSignatureContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DefExprContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DefExprContext.html",
    "title": "Class VtlParser.DefExprContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.DefExprContext Inheritance System.Object VtlParser.DefExprContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DefExprContext : ParserRuleContext Constructors DefExprContext(ParserRuleContext, Int32) Declaration public DefExprContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult defDatapoint() Declaration public VtlParser.DefDatapointContext defDatapoint() Returns Type Description VtlParser.DefDatapointContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DropClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DropClauseContext.html",
    "title": "Class VtlParser.DropClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.DropClauseContext Inheritance System.Object VtlParser.DropClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DropClauseContext : ParserRuleContext Constructors DropClauseContext(ParserRuleContext, Int32) Declaration public DropClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode component() Declaration public VtlParser.ComponentContext[] component() Returns Type Description VtlParser.ComponentContext [] component(Int32) Declaration public VtlParser.ComponentContext component(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ComponentContext DROP() Declaration public ITerminalNode DROP() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ErrorCodeContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ErrorCodeContext.html",
    "title": "Class VtlParser.ErrorCodeContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.ErrorCodeContext Inheritance System.Object VtlParser.ErrorCodeContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ErrorCodeContext : ParserRuleContext Constructors ErrorCodeContext(ParserRuleContext, Int32) Declaration public ErrorCodeContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult constant() Declaration public VtlParser.ConstantContext constant() Returns Type Description VtlParser.ConstantContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ERRORCODE() Declaration public ITerminalNode ERRORCODE() Returns Type Description ITerminalNode ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ErrorLevelContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ErrorLevelContext.html",
    "title": "Class VtlParser.ErrorLevelContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.ErrorLevelContext Inheritance System.Object VtlParser.ErrorLevelContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ErrorLevelContext : ParserRuleContext Constructors ErrorLevelContext(ParserRuleContext, Int32) Declaration public ErrorLevelContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult constant() Declaration public VtlParser.ConstantContext constant() Returns Type Description VtlParser.ConstantContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ERRORLEVEL() Declaration public ITerminalNode ERRORLEVEL() Returns Type Description ITerminalNode ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.FilterClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.FilterClauseContext.html",
    "title": "Class VtlParser.FilterClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.FilterClauseContext Inheritance System.Object VtlParser.FilterClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class FilterClauseContext : ParserRuleContext Constructors FilterClauseContext(ParserRuleContext, Int32) Declaration public FilterClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener FILTER() Declaration public ITerminalNode FILTER() Returns Type Description ITerminalNode scalar() Declaration public VtlParser.ScalarContext scalar() Returns Type Description VtlParser.ScalarContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.FirstWindowLimitContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.FirstWindowLimitContext.html",
    "title": "Class VtlParser.FirstWindowLimitContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.FirstWindowLimitContext Inheritance System.Object VtlParser.FirstWindowLimitContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class FirstWindowLimitContext : ParserRuleContext Constructors FirstWindowLimitContext(ParserRuleContext, Int32) Declaration public FirstWindowLimitContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CURRENT() Declaration public ITerminalNode CURRENT() Returns Type Description ITerminalNode DATA() Declaration public ITerminalNode DATA() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener INTEGER_CONSTANT() Declaration public ITerminalNode INTEGER_CONSTANT() Returns Type Description ITerminalNode POINT() Declaration public ITerminalNode POINT() Returns Type Description ITerminalNode PRECEDING() Declaration public ITerminalNode PRECEDING() Returns Type Description ITerminalNode UNBOUNDED() Declaration public ITerminalNode UNBOUNDED() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.GroupingClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.GroupingClauseContext.html",
    "title": "Class VtlParser.GroupingClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.GroupingClauseContext Inheritance System.Object VtlParser.GroupingClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class GroupingClauseContext : ParserRuleContext Constructors GroupingClauseContext(ParserRuleContext, Int32) Declaration public GroupingClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode component() Declaration public VtlParser.ComponentContext[] component() Returns Type Description VtlParser.ComponentContext [] component(Int32) Declaration public VtlParser.ComponentContext component(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ComponentContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener groupKeyword() Declaration public VtlParser.GroupKeywordContext groupKeyword() Returns Type Description VtlParser.GroupKeywordContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.GroupKeywordContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.GroupKeywordContext.html",
    "title": "Class VtlParser.GroupKeywordContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.GroupKeywordContext Inheritance System.Object VtlParser.GroupKeywordContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class GroupKeywordContext : ParserRuleContext Constructors GroupKeywordContext(ParserRuleContext, Int32) Declaration public GroupKeywordContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult ALL() Declaration public ITerminalNode ALL() Returns Type Description ITerminalNode BY() Declaration public ITerminalNode BY() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener EXCEPT() Declaration public ITerminalNode EXCEPT() Returns Type Description ITerminalNode ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener GROUP() Declaration public ITerminalNode GROUP() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.HavingClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.HavingClauseContext.html",
    "title": "Class VtlParser.HavingClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.HavingClauseContext Inheritance System.Object VtlParser.HavingClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class HavingClauseContext : ParserRuleContext Constructors HavingClauseContext(ParserRuleContext, Int32) Declaration public HavingClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener HAVING() Declaration public ITerminalNode HAVING() Returns Type Description ITerminalNode havingExpr() Declaration public VtlParser.HavingExprContext havingExpr() Returns Type Description VtlParser.HavingExprContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.HavingExprContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.HavingExprContext.html",
    "title": "Class VtlParser.HavingExprContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.HavingExprContext Inheritance System.Object VtlParser.HavingExprContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class HavingExprContext : ParserRuleContext Constructors HavingExprContext(ParserRuleContext, Int32) Declaration public HavingExprContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Fields leftAggrFunction Declaration public VtlParser.AggrFunctionContext leftAggrFunction Field Value Type Description VtlParser.AggrFunctionContext leftScalar Declaration public VtlParser.ScalarContext leftScalar Field Value Type Description VtlParser.ScalarContext opSymbol Declaration public IToken opSymbol Field Value Type Description IToken Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult aggrFunction() Declaration public VtlParser.AggrFunctionContext aggrFunction() Returns Type Description VtlParser.AggrFunctionContext AND() Declaration public ITerminalNode AND() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener havingExpr() Declaration public VtlParser.HavingExprContext[] havingExpr() Returns Type Description VtlParser.HavingExprContext [] havingExpr(Int32) Declaration public VtlParser.HavingExprContext havingExpr(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.HavingExprContext OR() Declaration public ITerminalNode OR() Returns Type Description ITerminalNode scalar() Declaration public VtlParser.ScalarContext scalar() Returns Type Description VtlParser.ScalarContext XOR() Declaration public ITerminalNode XOR() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.html",
    "title": "Class VtlParser | VTL Processing API documentation",
    "keywords": "Class VtlParser Inheritance System.Object VtlParser Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class VtlParser : Parser Constructors VtlParser(ITokenStream) Declaration public VtlParser(ITokenStream input) Parameters Type Name Description ITokenStream input VtlParser(ITokenStream, TextWriter, TextWriter) Declaration public VtlParser(ITokenStream input, TextWriter output, TextWriter errorOutput) Parameters Type Name Description ITokenStream input TextWriter output TextWriter errorOutput Fields _ATN Declaration public static readonly ATN _ATN Field Value Type Description ATN ABS Declaration public const int ABS = null Field Value Type Description System.Int32 AGGREGATE Declaration public const int AGGREGATE = null Field Value Type Description System.Int32 AGGREGATES Declaration public const int AGGREGATES = null Field Value Type Description System.Int32 ALL Declaration public const int ALL = null Field Value Type Description System.Int32 ALL_MEASURES Declaration public const int ALL_MEASURES = null Field Value Type Description System.Int32 ALTER_DATASET Declaration public const int ALTER_DATASET = null Field Value Type Description System.Int32 ALWAYS Declaration public const int ALWAYS = null Field Value Type Description System.Int32 ALWAYS_NULL Declaration public const int ALWAYS_NULL = null Field Value Type Description System.Int32 ALWAYS_ZERO Declaration public const int ALWAYS_ZERO = null Field Value Type Description System.Int32 AND Declaration public const int AND = null Field Value Type Description System.Int32 ANY Declaration public const int ANY = null Field Value Type Description System.Int32 APPLY Declaration public const int APPLY = null Field Value Type Description System.Int32 AS Declaration public const int AS = null Field Value Type Description System.Int32 ASC Declaration public const int ASC = null Field Value Type Description System.Int32 ASSIGN Declaration public const int ASSIGN = null Field Value Type Description System.Int32 ATTRCALC Declaration public const int ATTRCALC = null Field Value Type Description System.Int32 ATTRIBUTE Declaration public const int ATTRIBUTE = null Field Value Type Description System.Int32 AVG Declaration public const int AVG = null Field Value Type Description System.Int32 BETWEEN Declaration public const int BETWEEN = null Field Value Type Description System.Int32 BOOLEAN Declaration public const int BOOLEAN = null Field Value Type Description System.Int32 BOOLEAN_CONSTANT Declaration public const int BOOLEAN_CONSTANT = null Field Value Type Description System.Int32 BY Declaration public const int BY = null Field Value Type Description System.Int32 CALC Declaration public const int CALC = null Field Value Type Description System.Int32 CARTESIAN_PER Declaration public const int CARTESIAN_PER = null Field Value Type Description System.Int32 CAST Declaration public const int CAST = null Field Value Type Description System.Int32 CEIL Declaration public const int CEIL = null Field Value Type Description System.Int32 CHARSET_MATCH Declaration public const int CHARSET_MATCH = null Field Value Type Description System.Int32 CHECK Declaration public const int CHECK = null Field Value Type Description System.Int32 CHECK_DATAPOINT Declaration public const int CHECK_DATAPOINT = null Field Value Type Description System.Int32 CHECK_HIERARCHY Declaration public const int CHECK_HIERARCHY = null Field Value Type Description System.Int32 COMPARISON_OP Declaration public const int COMPARISON_OP = null Field Value Type Description System.Int32 COMPONENT Declaration public const int COMPONENT = null Field Value Type Description System.Int32 COMPONENTS Declaration public const int COMPONENTS = null Field Value Type Description System.Int32 COMPUTED Declaration public const int COMPUTED = null Field Value Type Description System.Int32 CONCAT Declaration public const int CONCAT = null Field Value Type Description System.Int32 CONDITION Declaration public const int CONDITION = null Field Value Type Description System.Int32 CONDITIONED Declaration public const int CONDITIONED = null Field Value Type Description System.Int32 COUNT Declaration public const int COUNT = null Field Value Type Description System.Int32 CROSS_JOIN Declaration public const int CROSS_JOIN = null Field Value Type Description System.Int32 CURRENT Declaration public const int CURRENT = null Field Value Type Description System.Int32 CURRENT_DATE Declaration public const int CURRENT_DATE = null Field Value Type Description System.Int32 DATA Declaration public const int DATA = null Field Value Type Description System.Int32 DATAPOINT Declaration public const int DATAPOINT = null Field Value Type Description System.Int32 DATAPOINT_ON_VAR Declaration public const int DATAPOINT_ON_VAR = null Field Value Type Description System.Int32 DATAPOINT_ON_VD Declaration public const int DATAPOINT_ON_VD = null Field Value Type Description System.Int32 DATASET Declaration public const int DATASET = null Field Value Type Description System.Int32 DATASET_PRIORITY Declaration public const int DATASET_PRIORITY = null Field Value Type Description System.Int32 DATE Declaration public const int DATE = null Field Value Type Description System.Int32 DATE_FORMAT Declaration public const int DATE_FORMAT = null Field Value Type Description System.Int32 DAY Declaration public const int DAY = null Field Value Type Description System.Int32 DD Declaration public const int DD = null Field Value Type Description System.Int32 decisionToDFA Declaration protected static Antlr4.Runtime.Dfa.DFA[] decisionToDFA Field Value Type Description Antlr4.Runtime.Dfa.DFA [] DEFAULT Declaration public const int DEFAULT = null Field Value Type Description System.Int32 DefaultVocabulary Declaration public static readonly IVocabulary DefaultVocabulary Field Value Type Description IVocabulary DEFINE Declaration public const int DEFINE = null Field Value Type Description System.Int32 DESC Declaration public const int DESC = null Field Value Type Description System.Int32 DIFF Declaration public const int DIFF = null Field Value Type Description System.Int32 DIGITS0_9 Declaration public const int DIGITS0_9 = null Field Value Type Description System.Int32 DIMENSION Declaration public const int DIMENSION = null Field Value Type Description System.Int32 DROP Declaration public const int DROP = null Field Value Type Description System.Int32 DURATION Declaration public const int DURATION = null Field Value Type Description System.Int32 ELSE Declaration public const int ELSE = null Field Value Type Description System.Int32 END Declaration public const int END = null Field Value Type Description System.Int32 EOL Declaration public const int EOL = null Field Value Type Description System.Int32 ERRORCODE Declaration public const int ERRORCODE = null Field Value Type Description System.Int32 ERRORLEVEL Declaration public const int ERRORLEVEL = null Field Value Type Description System.Int32 EVAL Declaration public const int EVAL = null Field Value Type Description System.Int32 EX Declaration public const int EX = null Field Value Type Description System.Int32 EXCEPT Declaration public const int EXCEPT = null Field Value Type Description System.Int32 EXISTS_IN Declaration public const int EXISTS_IN = null Field Value Type Description System.Int32 EXP Declaration public const int EXP = null Field Value Type Description System.Int32 FILL_TIME_SERIES Declaration public const int FILL_TIME_SERIES = null Field Value Type Description System.Int32 FILTER Declaration public const int FILTER = null Field Value Type Description System.Int32 FIRST Declaration public const int FIRST = null Field Value Type Description System.Int32 FIRST_VALUE Declaration public const int FIRST_VALUE = null Field Value Type Description System.Int32 FLOAT Declaration public const int FLOAT = null Field Value Type Description System.Int32 FLOAT_CONSTANT Declaration public const int FLOAT_CONSTANT = null Field Value Type Description System.Int32 FLOATEXP Declaration public const int FLOATEXP = null Field Value Type Description System.Int32 FLOOR Declaration public const int FLOOR = null Field Value Type Description System.Int32 FLOW_TO_STOCK Declaration public const int FLOW_TO_STOCK = null Field Value Type Description System.Int32 FOLLOWING Declaration public const int FOLLOWING = null Field Value Type Description System.Int32 FREQUENCY Declaration public const int FREQUENCY = null Field Value Type Description System.Int32 FROM Declaration public const int FROM = null Field Value Type Description System.Int32 FULL_JOIN Declaration public const int FULL_JOIN = null Field Value Type Description System.Int32 GROUP Declaration public const int GROUP = null Field Value Type Description System.Int32 HAVING Declaration public const int HAVING = null Field Value Type Description System.Int32 HIERARCHICAL Declaration public const int HIERARCHICAL = null Field Value Type Description System.Int32 HIERARCHICAL_ON_VAR Declaration public const int HIERARCHICAL_ON_VAR = null Field Value Type Description System.Int32 HIERARCHICAL_ON_VD Declaration public const int HIERARCHICAL_ON_VD = null Field Value Type Description System.Int32 HIERARCHY Declaration public const int HIERARCHY = null Field Value Type Description System.Int32 HOURS Declaration public const int HOURS = null Field Value Type Description System.Int32 IDENTIFIER Declaration public const int IDENTIFIER = null Field Value Type Description System.Int32 IF Declaration public const int IF = null Field Value Type Description System.Int32 IMBALANCE Declaration public const int IMBALANCE = null Field Value Type Description System.Int32 IN Declaration public const int IN = null Field Value Type Description System.Int32 INDEXOF Declaration public const int INDEXOF = null Field Value Type Description System.Int32 INNER_JOIN Declaration public const int INNER_JOIN = null Field Value Type Description System.Int32 INPUT Declaration public const int INPUT = null Field Value Type Description System.Int32 INSTR Declaration public const int INSTR = null Field Value Type Description System.Int32 INTDAY Declaration public const int INTDAY = null Field Value Type Description System.Int32 INTEGER Declaration public const int INTEGER = null Field Value Type Description System.Int32 INTEGER_CONSTANT Declaration public const int INTEGER_CONSTANT = null Field Value Type Description System.Int32 INTERSECT Declaration public const int INTERSECT = null Field Value Type Description System.Int32 INTMONTH Declaration public const int INTMONTH = null Field Value Type Description System.Int32 INTYEAR Declaration public const int INTYEAR = null Field Value Type Description System.Int32 INVALID Declaration public const int INVALID = null Field Value Type Description System.Int32 IS Declaration public const int IS = null Field Value Type Description System.Int32 ISNULL Declaration public const int ISNULL = null Field Value Type Description System.Int32 KEEP Declaration public const int KEEP = null Field Value Type Description System.Int32 KEY Declaration public const int KEY = null Field Value Type Description System.Int32 KEYS Declaration public const int KEYS = null Field Value Type Description System.Int32 LAG Declaration public const int LAG = null Field Value Type Description System.Int32 LANGUAGE Declaration public const int LANGUAGE = null Field Value Type Description System.Int32 LAST Declaration public const int LAST = null Field Value Type Description System.Int32 LAST_VALUE Declaration public const int LAST_VALUE = null Field Value Type Description System.Int32 LCASE Declaration public const int LCASE = null Field Value Type Description System.Int32 LEAD Declaration public const int LEAD = null Field Value Type Description System.Int32 LEFT_JOIN Declaration public const int LEFT_JOIN = null Field Value Type Description System.Int32 LEN Declaration public const int LEN = null Field Value Type Description System.Int32 LIST Declaration public const int LIST = null Field Value Type Description System.Int32 LN Declaration public const int LN = null Field Value Type Description System.Int32 LOG Declaration public const int LOG = null Field Value Type Description System.Int32 LTRIM Declaration public const int LTRIM = null Field Value Type Description System.Int32 MAP_FROM Declaration public const int MAP_FROM = null Field Value Type Description System.Int32 MAP_TO Declaration public const int MAP_TO = null Field Value Type Description System.Int32 MAPS_FROM Declaration public const int MAPS_FROM = null Field Value Type Description System.Int32 MAPS_TO Declaration public const int MAPS_TO = null Field Value Type Description System.Int32 MAX Declaration public const int MAX = null Field Value Type Description System.Int32 MAX_LENGTH Declaration public const int MAX_LENGTH = null Field Value Type Description System.Int32 MEASURE Declaration public const int MEASURE = null Field Value Type Description System.Int32 MEASURES Declaration public const int MEASURES = null Field Value Type Description System.Int32 MEDIAN Declaration public const int MEDIAN = null Field Value Type Description System.Int32 MEMBERSHIP Declaration public const int MEMBERSHIP = null Field Value Type Description System.Int32 MERGE Declaration public const int MERGE = null Field Value Type Description System.Int32 MIN Declaration public const int MIN = null Field Value Type Description System.Int32 MINUTES Declaration public const int MINUTES = null Field Value Type Description System.Int32 ML_COMMENT Declaration public const int ML_COMMENT = null Field Value Type Description System.Int32 MM Declaration public const int MM = null Field Value Type Description System.Int32 MOD Declaration public const int MOD = null Field Value Type Description System.Int32 MONTH Declaration public const int MONTH = null Field Value Type Description System.Int32 NO_MEASURES Declaration public const int NO_MEASURES = null Field Value Type Description System.Int32 NON_NULL Declaration public const int NON_NULL = null Field Value Type Description System.Int32 NON_ZERO Declaration public const int NON_ZERO = null Field Value Type Description System.Int32 NOT Declaration public const int NOT = null Field Value Type Description System.Int32 NOT_IN Declaration public const int NOT_IN = null Field Value Type Description System.Int32 NULL_CONSTANT Declaration public const int NULL_CONSTANT = null Field Value Type Description System.Int32 NUMBER Declaration public const int NUMBER = null Field Value Type Description System.Int32 NVL Declaration public const int NVL = null Field Value Type Description System.Int32 ON Declaration public const int ON = null Field Value Type Description System.Int32 OPERATOR Declaration public const int OPERATOR = null Field Value Type Description System.Int32 OPTIONAL Declaration public const int OPTIONAL = null Field Value Type Description System.Int32 OR Declaration public const int OR = null Field Value Type Description System.Int32 ORDER Declaration public const int ORDER = null Field Value Type Description System.Int32 OUTPUT Declaration public const int OUTPUT = null Field Value Type Description System.Int32 OVER Declaration public const int OVER = null Field Value Type Description System.Int32 PARTIAL Declaration public const int PARTIAL = null Field Value Type Description System.Int32 PARTIAL_NULL Declaration public const int PARTIAL_NULL = null Field Value Type Description System.Int32 PARTIAL_ZERO Declaration public const int PARTIAL_ZERO = null Field Value Type Description System.Int32 PARTITION Declaration public const int PARTITION = null Field Value Type Description System.Int32 PERIOD_INDICATOR Declaration public const int PERIOD_INDICATOR = null Field Value Type Description System.Int32 PIVOT Declaration public const int PIVOT = null Field Value Type Description System.Int32 POINT Declaration public const int POINT = null Field Value Type Description System.Int32 POINTS Declaration public const int POINTS = null Field Value Type Description System.Int32 POWER Declaration public const int POWER = null Field Value Type Description System.Int32 PRECEDING Declaration public const int PRECEDING = null Field Value Type Description System.Int32 PUT_SYMBOL Declaration public const int PUT_SYMBOL = null Field Value Type Description System.Int32 RANGE Declaration public const int RANGE = null Field Value Type Description System.Int32 RANK Declaration public const int RANK = null Field Value Type Description System.Int32 RATIO_TO_REPORT Declaration public const int RATIO_TO_REPORT = null Field Value Type Description System.Int32 RECORD Declaration public const int RECORD = null Field Value Type Description System.Int32 REGEXP Declaration public const int REGEXP = null Field Value Type Description System.Int32 RENAME Declaration public const int RENAME = null Field Value Type Description System.Int32 REPLACE Declaration public const int REPLACE = null Field Value Type Description System.Int32 RESTRICT Declaration public const int RESTRICT = null Field Value Type Description System.Int32 RETURN Declaration public const int RETURN = null Field Value Type Description System.Int32 RETURNS Declaration public const int RETURNS = null Field Value Type Description System.Int32 ROLE Declaration public const int ROLE = null Field Value Type Description System.Int32 ROUND Declaration public const int ROUND = null Field Value Type Description System.Int32 ROWS Declaration public const int ROWS = null Field Value Type Description System.Int32 RTRIM Declaration public const int RTRIM = null Field Value Type Description System.Int32 RULE Declaration public const int RULE = null Field Value Type Description System.Int32 RULE_aggrClause Declaration public const int RULE_aggrClause = null Field Value Type Description System.Int32 RULE_aggrExpr Declaration public const int RULE_aggrExpr = null Field Value Type Description System.Int32 RULE_aggrFunction Declaration public const int RULE_aggrFunction = null Field Value Type Description System.Int32 RULE_aggrFunctionName Declaration public const int RULE_aggrFunctionName = null Field Value Type Description System.Int32 RULE_aggrInvocation Declaration public const int RULE_aggrInvocation = null Field Value Type Description System.Int32 RULE_analyticClause Declaration public const int RULE_analyticClause = null Field Value Type Description System.Int32 RULE_analyticFunction Declaration public const int RULE_analyticFunction = null Field Value Type Description System.Int32 RULE_analyticFunctionName Declaration public const int RULE_analyticFunctionName = null Field Value Type Description System.Int32 RULE_analyticInvocation Declaration public const int RULE_analyticInvocation = null Field Value Type Description System.Int32 RULE_calcClause Declaration public const int RULE_calcClause = null Field Value Type Description System.Int32 RULE_calcExpr Declaration public const int RULE_calcExpr = null Field Value Type Description System.Int32 RULE_checkDatapoint Declaration public const int RULE_checkDatapoint = null Field Value Type Description System.Int32 RULE_closedDataset Declaration public const int RULE_closedDataset = null Field Value Type Description System.Int32 RULE_component Declaration public const int RULE_component = null Field Value Type Description System.Int32 RULE_componentID Declaration public const int RULE_componentID = null Field Value Type Description System.Int32 RULE_componentRole Declaration public const int RULE_componentRole = null Field Value Type Description System.Int32 RULE_constant Declaration public const int RULE_constant = null Field Value Type Description System.Int32 RULE_dataset Declaration public const int RULE_dataset = null Field Value Type Description System.Int32 RULE_datasetClause Declaration public const int RULE_datasetClause = null Field Value Type Description System.Int32 RULE_datasetComplex Declaration public const int RULE_datasetComplex = null Field Value Type Description System.Int32 RULE_datasetID Declaration public const int RULE_datasetID = null Field Value Type Description System.Int32 RULE_defDatapoint Declaration public const int RULE_defDatapoint = null Field Value Type Description System.Int32 RULE_defExpr Declaration public const int RULE_defExpr = null Field Value Type Description System.Int32 RULE_dropClause Declaration public const int RULE_dropClause = null Field Value Type Description System.Int32 RULE_errorCode Declaration public const int RULE_errorCode = null Field Value Type Description System.Int32 RULE_errorLevel Declaration public const int RULE_errorLevel = null Field Value Type Description System.Int32 RULE_filterClause Declaration public const int RULE_filterClause = null Field Value Type Description System.Int32 RULE_firstWindowLimit Declaration public const int RULE_firstWindowLimit = null Field Value Type Description System.Int32 RULE_groupingClause Declaration public const int RULE_groupingClause = null Field Value Type Description System.Int32 RULE_groupKeyword Declaration public const int RULE_groupKeyword = null Field Value Type Description System.Int32 RULE_havingClause Declaration public const int RULE_havingClause = null Field Value Type Description System.Int32 RULE_havingExpr Declaration public const int RULE_havingExpr = null Field Value Type Description System.Int32 RULE_ifThenElseDataset Declaration public const int RULE_ifThenElseDataset = null Field Value Type Description System.Int32 RULE_ifThenElseScalar Declaration public const int RULE_ifThenElseScalar = null Field Value Type Description System.Int32 RULE_joinAggrClause Declaration public const int RULE_joinAggrClause = null Field Value Type Description System.Int32 RULE_joinAliasesClause Declaration public const int RULE_joinAliasesClause = null Field Value Type Description System.Int32 RULE_joinAliasExpr Declaration public const int RULE_joinAliasExpr = null Field Value Type Description System.Int32 RULE_joinApplyClause Declaration public const int RULE_joinApplyClause = null Field Value Type Description System.Int32 RULE_joinBody Declaration public const int RULE_joinBody = null Field Value Type Description System.Int32 RULE_joinCalcClause Declaration public const int RULE_joinCalcClause = null Field Value Type Description System.Int32 RULE_joinClause Declaration public const int RULE_joinClause = null Field Value Type Description System.Int32 RULE_joinDropClause Declaration public const int RULE_joinDropClause = null Field Value Type Description System.Int32 RULE_joinExpr Declaration public const int RULE_joinExpr = null Field Value Type Description System.Int32 RULE_joinFilterClause Declaration public const int RULE_joinFilterClause = null Field Value Type Description System.Int32 RULE_joinKeepClause Declaration public const int RULE_joinKeepClause = null Field Value Type Description System.Int32 RULE_joinKeyword Declaration public const int RULE_joinKeyword = null Field Value Type Description System.Int32 RULE_joinRenameClause Declaration public const int RULE_joinRenameClause = null Field Value Type Description System.Int32 RULE_joinUsingClause Declaration public const int RULE_joinUsingClause = null Field Value Type Description System.Int32 RULE_keepClause Declaration public const int RULE_keepClause = null Field Value Type Description System.Int32 RULE_limitsMethod Declaration public const int RULE_limitsMethod = null Field Value Type Description System.Int32 RULE_list Declaration public const int RULE_list = null Field Value Type Description System.Int32 RULE_membershipDataset Declaration public const int RULE_membershipDataset = null Field Value Type Description System.Int32 RULE_openedDataset Declaration public const int RULE_openedDataset = null Field Value Type Description System.Int32 RULE_optionalExpr Declaration public const int RULE_optionalExpr = null Field Value Type Description System.Int32 RULE_orderClause Declaration public const int RULE_orderClause = null Field Value Type Description System.Int32 RULE_orderExpr Declaration public const int RULE_orderExpr = null Field Value Type Description System.Int32 RULE_partitionClause Declaration public const int RULE_partitionClause = null Field Value Type Description System.Int32 RULE_pivotClause Declaration public const int RULE_pivotClause = null Field Value Type Description System.Int32 RULE_PRIORITY Declaration public const int RULE_PRIORITY = null Field Value Type Description System.Int32 RULE_renameClause Declaration public const int RULE_renameClause = null Field Value Type Description System.Int32 RULE_renameExpr Declaration public const int RULE_renameExpr = null Field Value Type Description System.Int32 RULE_retainType Declaration public const int RULE_retainType = null Field Value Type Description System.Int32 RULE_ruleClauseDatapoint Declaration public const int RULE_ruleClauseDatapoint = null Field Value Type Description System.Int32 RULE_ruleID Declaration public const int RULE_ruleID = null Field Value Type Description System.Int32 RULE_ruleItemDatapoint Declaration public const int RULE_ruleItemDatapoint = null Field Value Type Description System.Int32 RULE_rulesetID Declaration public const int RULE_rulesetID = null Field Value Type Description System.Int32 RULE_rulesetSignature Declaration public const int RULE_rulesetSignature = null Field Value Type Description System.Int32 RULE_scalar Declaration public const int RULE_scalar = null Field Value Type Description System.Int32 RULE_secondWindowLimit Declaration public const int RULE_secondWindowLimit = null Field Value Type Description System.Int32 RULE_setExpr Declaration public const int RULE_setExpr = null Field Value Type Description System.Int32 RULE_start Declaration public const int RULE_start = null Field Value Type Description System.Int32 RULE_statement Declaration public const int RULE_statement = null Field Value Type Description System.Int32 RULE_subspaceClause Declaration public const int RULE_subspaceClause = null Field Value Type Description System.Int32 RULE_subspaceExpr Declaration public const int RULE_subspaceExpr = null Field Value Type Description System.Int32 RULE_unopenedDataset Declaration public const int RULE_unopenedDataset = null Field Value Type Description System.Int32 RULE_unpivotClause Declaration public const int RULE_unpivotClause = null Field Value Type Description System.Int32 RULE_valueDomainName Declaration public const int RULE_valueDomainName = null Field Value Type Description System.Int32 RULE_varID Declaration public const int RULE_varID = null Field Value Type Description System.Int32 RULE_varSignature Declaration public const int RULE_varSignature = null Field Value Type Description System.Int32 RULE_windowingClause Declaration public const int RULE_windowingClause = null Field Value Type Description System.Int32 ruleNames Declaration public static readonly string[] ruleNames Field Value Type Description System.String [] RULESET Declaration public const int RULESET = null Field Value Type Description System.Int32 SCALAR Declaration public const int SCALAR = null Field Value Type Description System.Int32 SECONDS Declaration public const int SECONDS = null Field Value Type Description System.Int32 SET Declaration public const int SET = null Field Value Type Description System.Int32 SETDIFF Declaration public const int SETDIFF = null Field Value Type Description System.Int32 sharedContextCache Declaration protected static PredictionContextCache sharedContextCache Field Value Type Description PredictionContextCache SINGLE Declaration public const int SINGLE = null Field Value Type Description System.Int32 SL_COMMENT Declaration public const int SL_COMMENT = null Field Value Type Description System.Int32 SQRT Declaration public const int SQRT = null Field Value Type Description System.Int32 STDDEV_POP Declaration public const int STDDEV_POP = null Field Value Type Description System.Int32 STDDEV_SAMP Declaration public const int STDDEV_SAMP = null Field Value Type Description System.Int32 STOCK_TO_FLOW Declaration public const int STOCK_TO_FLOW = null Field Value Type Description System.Int32 STRING Declaration public const int STRING = null Field Value Type Description System.Int32 STRING_CONSTANT Declaration public const int STRING_CONSTANT = null Field Value Type Description System.Int32 STRUCTURE Declaration public const int STRUCTURE = null Field Value Type Description System.Int32 SUBSPACE Declaration public const int SUBSPACE = null Field Value Type Description System.Int32 SUBSTR Declaration public const int SUBSTR = null Field Value Type Description System.Int32 SUM Declaration public const int SUM = null Field Value Type Description System.Int32 SYMDIFF Declaration public const int SYMDIFF = null Field Value Type Description System.Int32 T__0 Declaration public const int T__0 = null Field Value Type Description System.Int32 T__1 Declaration public const int T__1 = null Field Value Type Description System.Int32 T__10 Declaration public const int T__10 = null Field Value Type Description System.Int32 T__11 Declaration public const int T__11 = null Field Value Type Description System.Int32 T__12 Declaration public const int T__12 = null Field Value Type Description System.Int32 T__13 Declaration public const int T__13 = null Field Value Type Description System.Int32 T__14 Declaration public const int T__14 = null Field Value Type Description System.Int32 T__15 Declaration public const int T__15 = null Field Value Type Description System.Int32 T__16 Declaration public const int T__16 = null Field Value Type Description System.Int32 T__17 Declaration public const int T__17 = null Field Value Type Description System.Int32 T__2 Declaration public const int T__2 = null Field Value Type Description System.Int32 T__3 Declaration public const int T__3 = null Field Value Type Description System.Int32 T__4 Declaration public const int T__4 = null Field Value Type Description System.Int32 T__5 Declaration public const int T__5 = null Field Value Type Description System.Int32 T__6 Declaration public const int T__6 = null Field Value Type Description System.Int32 T__7 Declaration public const int T__7 = null Field Value Type Description System.Int32 T__8 Declaration public const int T__8 = null Field Value Type Description System.Int32 T__9 Declaration public const int T__9 = null Field Value Type Description System.Int32 THEN Declaration public const int THEN = null Field Value Type Description System.Int32 TIME Declaration public const int TIME = null Field Value Type Description System.Int32 TIME_AGG Declaration public const int TIME_AGG = null Field Value Type Description System.Int32 TIME_CONSTANT Declaration public const int TIME_CONSTANT = null Field Value Type Description System.Int32 TIME_FORMAT Declaration public const int TIME_FORMAT = null Field Value Type Description System.Int32 TIME_PERIOD Declaration public const int TIME_PERIOD = null Field Value Type Description System.Int32 TIME_UNIT Declaration public const int TIME_UNIT = null Field Value Type Description System.Int32 TIMESHIFT Declaration public const int TIMESHIFT = null Field Value Type Description System.Int32 TO Declaration public const int TO = null Field Value Type Description System.Int32 TOTAL Declaration public const int TOTAL = null Field Value Type Description System.Int32 TRIM Declaration public const int TRIM = null Field Value Type Description System.Int32 TRUNC Declaration public const int TRUNC = null Field Value Type Description System.Int32 TYPE Declaration public const int TYPE = null Field Value Type Description System.Int32 UCASE Declaration public const int UCASE = null Field Value Type Description System.Int32 UNBOUNDED Declaration public const int UNBOUNDED = null Field Value Type Description System.Int32 UNION Declaration public const int UNION = null Field Value Type Description System.Int32 UNIT Declaration public const int UNIT = null Field Value Type Description System.Int32 UNPIVOT Declaration public const int UNPIVOT = null Field Value Type Description System.Int32 USING Declaration public const int USING = null Field Value Type Description System.Int32 VALID Declaration public const int VALID = null Field Value Type Description System.Int32 VALUE Declaration public const int VALUE = null Field Value Type Description System.Int32 VALUE_DOMAIN Declaration public const int VALUE_DOMAIN = null Field Value Type Description System.Int32 VALUEDOMAINS Declaration public const int VALUEDOMAINS = null Field Value Type Description System.Int32 VAR_POP Declaration public const int VAR_POP = null Field Value Type Description System.Int32 VAR_SAMP Declaration public const int VAR_SAMP = null Field Value Type Description System.Int32 VARIABLE Declaration public const int VARIABLE = null Field Value Type Description System.Int32 VARIABLES Declaration public const int VARIABLES = null Field Value Type Description System.Int32 VIRAL Declaration public const int VIRAL = null Field Value Type Description System.Int32 WEEK Declaration public const int WEEK = null Field Value Type Description System.Int32 WHEN Declaration public const int WHEN = null Field Value Type Description System.Int32 WITH Declaration public const int WITH = null Field Value Type Description System.Int32 WS Declaration public const int WS = null Field Value Type Description System.Int32 XOR Declaration public const int XOR = null Field Value Type Description System.Int32 YEAR Declaration public const int YEAR = null Field Value Type Description System.Int32 YYYY Declaration public const int YYYY = null Field Value Type Description System.Int32 Properties GrammarFileName Declaration public override string GrammarFileName { get; } Property Value Type Description System.String RuleNames Declaration public override string[] RuleNames { get; } Property Value Type Description System.String [] SerializedAtn Declaration public override string SerializedAtn { get; } Property Value Type Description System.String Vocabulary Declaration public override IVocabulary Vocabulary { get; } Property Value Type Description IVocabulary Methods aggrClause() Declaration public VtlParser.AggrClauseContext aggrClause() Returns Type Description VtlParser.AggrClauseContext aggrExpr() Declaration public VtlParser.AggrExprContext aggrExpr() Returns Type Description VtlParser.AggrExprContext aggrFunction() Declaration public VtlParser.AggrFunctionContext aggrFunction() Returns Type Description VtlParser.AggrFunctionContext aggrFunctionName() Declaration public VtlParser.AggrFunctionNameContext aggrFunctionName() Returns Type Description VtlParser.AggrFunctionNameContext aggrInvocation() Declaration public VtlParser.AggrInvocationContext aggrInvocation() Returns Type Description VtlParser.AggrInvocationContext analyticClause() Declaration public VtlParser.AnalyticClauseContext analyticClause() Returns Type Description VtlParser.AnalyticClauseContext analyticFunction() Declaration public VtlParser.AnalyticFunctionContext analyticFunction() Returns Type Description VtlParser.AnalyticFunctionContext analyticFunctionName() Declaration public VtlParser.AnalyticFunctionNameContext analyticFunctionName() Returns Type Description VtlParser.AnalyticFunctionNameContext analyticInvocation() Declaration public VtlParser.AnalyticInvocationContext analyticInvocation() Returns Type Description VtlParser.AnalyticInvocationContext calcClause() Declaration public VtlParser.CalcClauseContext calcClause() Returns Type Description VtlParser.CalcClauseContext calcExpr() Declaration public VtlParser.CalcExprContext calcExpr() Returns Type Description VtlParser.CalcExprContext checkDatapoint() Declaration public VtlParser.CheckDatapointContext checkDatapoint() Returns Type Description VtlParser.CheckDatapointContext closedDataset() Declaration public VtlParser.ClosedDatasetContext closedDataset() Returns Type Description VtlParser.ClosedDatasetContext component() Declaration public VtlParser.ComponentContext component() Returns Type Description VtlParser.ComponentContext componentID() Declaration public VtlParser.ComponentIDContext componentID() Returns Type Description VtlParser.ComponentIDContext componentRole() Declaration public VtlParser.ComponentRoleContext componentRole() Returns Type Description VtlParser.ComponentRoleContext constant() Declaration public VtlParser.ConstantContext constant() Returns Type Description VtlParser.ConstantContext dataset() Declaration public VtlParser.DatasetContext dataset() Returns Type Description VtlParser.DatasetContext datasetClause() Declaration public VtlParser.DatasetClauseContext datasetClause() Returns Type Description VtlParser.DatasetClauseContext datasetComplex() Declaration public VtlParser.DatasetComplexContext datasetComplex() Returns Type Description VtlParser.DatasetComplexContext datasetID() Declaration public VtlParser.DatasetIDContext datasetID() Returns Type Description VtlParser.DatasetIDContext defDatapoint() Declaration public VtlParser.DefDatapointContext defDatapoint() Returns Type Description VtlParser.DefDatapointContext defExpr() Declaration public VtlParser.DefExprContext defExpr() Returns Type Description VtlParser.DefExprContext dropClause() Declaration public VtlParser.DropClauseContext dropClause() Returns Type Description VtlParser.DropClauseContext errorCode() Declaration public VtlParser.ErrorCodeContext errorCode() Returns Type Description VtlParser.ErrorCodeContext errorLevel() Declaration public VtlParser.ErrorLevelContext errorLevel() Returns Type Description VtlParser.ErrorLevelContext filterClause() Declaration public VtlParser.FilterClauseContext filterClause() Returns Type Description VtlParser.FilterClauseContext firstWindowLimit() Declaration public VtlParser.FirstWindowLimitContext firstWindowLimit() Returns Type Description VtlParser.FirstWindowLimitContext groupingClause() Declaration public VtlParser.GroupingClauseContext groupingClause() Returns Type Description VtlParser.GroupingClauseContext groupKeyword() Declaration public VtlParser.GroupKeywordContext groupKeyword() Returns Type Description VtlParser.GroupKeywordContext havingClause() Declaration public VtlParser.HavingClauseContext havingClause() Returns Type Description VtlParser.HavingClauseContext havingExpr() Declaration public VtlParser.HavingExprContext havingExpr() Returns Type Description VtlParser.HavingExprContext ifThenElseDataset() Declaration public VtlParser.IfThenElseDatasetContext ifThenElseDataset() Returns Type Description VtlParser.IfThenElseDatasetContext ifThenElseScalar() Declaration public VtlParser.IfThenElseScalarContext ifThenElseScalar() Returns Type Description VtlParser.IfThenElseScalarContext joinAggrClause() Declaration public VtlParser.JoinAggrClauseContext joinAggrClause() Returns Type Description VtlParser.JoinAggrClauseContext joinAliasesClause() Declaration public VtlParser.JoinAliasesClauseContext joinAliasesClause() Returns Type Description VtlParser.JoinAliasesClauseContext joinAliasExpr() Declaration public VtlParser.JoinAliasExprContext joinAliasExpr() Returns Type Description VtlParser.JoinAliasExprContext joinApplyClause() Declaration public VtlParser.JoinApplyClauseContext joinApplyClause() Returns Type Description VtlParser.JoinApplyClauseContext joinBody() Declaration public VtlParser.JoinBodyContext joinBody() Returns Type Description VtlParser.JoinBodyContext joinCalcClause() Declaration public VtlParser.JoinCalcClauseContext joinCalcClause() Returns Type Description VtlParser.JoinCalcClauseContext joinClause() Declaration public VtlParser.JoinClauseContext joinClause() Returns Type Description VtlParser.JoinClauseContext joinDropClause() Declaration public VtlParser.JoinDropClauseContext joinDropClause() Returns Type Description VtlParser.JoinDropClauseContext joinExpr() Declaration public VtlParser.JoinExprContext joinExpr() Returns Type Description VtlParser.JoinExprContext joinFilterClause() Declaration public VtlParser.JoinFilterClauseContext joinFilterClause() Returns Type Description VtlParser.JoinFilterClauseContext joinKeepClause() Declaration public VtlParser.JoinKeepClauseContext joinKeepClause() Returns Type Description VtlParser.JoinKeepClauseContext joinKeyword() Declaration public VtlParser.JoinKeywordContext joinKeyword() Returns Type Description VtlParser.JoinKeywordContext joinRenameClause() Declaration public VtlParser.JoinRenameClauseContext joinRenameClause() Returns Type Description VtlParser.JoinRenameClauseContext joinUsingClause() Declaration public VtlParser.JoinUsingClauseContext joinUsingClause() Returns Type Description VtlParser.JoinUsingClauseContext keepClause() Declaration public VtlParser.KeepClauseContext keepClause() Returns Type Description VtlParser.KeepClauseContext limitsMethod() Declaration public VtlParser.LimitsMethodContext limitsMethod() Returns Type Description VtlParser.LimitsMethodContext list() Declaration public VtlParser.ListContext list() Returns Type Description VtlParser.ListContext membershipDataset() Declaration public VtlParser.MembershipDatasetContext membershipDataset() Returns Type Description VtlParser.MembershipDatasetContext openedDataset() Declaration public VtlParser.OpenedDatasetContext openedDataset() Returns Type Description VtlParser.OpenedDatasetContext optionalExpr() Declaration public VtlParser.OptionalExprContext optionalExpr() Returns Type Description VtlParser.OptionalExprContext orderClause() Declaration public VtlParser.OrderClauseContext orderClause() Returns Type Description VtlParser.OrderClauseContext orderExpr() Declaration public VtlParser.OrderExprContext orderExpr() Returns Type Description VtlParser.OrderExprContext partitionClause() Declaration public VtlParser.PartitionClauseContext partitionClause() Returns Type Description VtlParser.PartitionClauseContext pivotClause() Declaration public VtlParser.PivotClauseContext pivotClause() Returns Type Description VtlParser.PivotClauseContext renameClause() Declaration public VtlParser.RenameClauseContext renameClause() Returns Type Description VtlParser.RenameClauseContext renameExpr() Declaration public VtlParser.RenameExprContext renameExpr() Returns Type Description VtlParser.RenameExprContext retainType() Declaration public VtlParser.RetainTypeContext retainType() Returns Type Description VtlParser.RetainTypeContext ruleClauseDatapoint() Declaration public VtlParser.RuleClauseDatapointContext ruleClauseDatapoint() Returns Type Description VtlParser.RuleClauseDatapointContext ruleID() Declaration public VtlParser.RuleIDContext ruleID() Returns Type Description VtlParser.RuleIDContext ruleItemDatapoint() Declaration public VtlParser.RuleItemDatapointContext ruleItemDatapoint() Returns Type Description VtlParser.RuleItemDatapointContext rulesetID() Declaration public VtlParser.RulesetIDContext rulesetID() Returns Type Description VtlParser.RulesetIDContext rulesetSignature() Declaration public VtlParser.RulesetSignatureContext rulesetSignature() Returns Type Description VtlParser.RulesetSignatureContext scalar() Declaration public VtlParser.ScalarContext scalar() Returns Type Description VtlParser.ScalarContext secondWindowLimit() Declaration public VtlParser.SecondWindowLimitContext secondWindowLimit() Returns Type Description VtlParser.SecondWindowLimitContext Sempred(RuleContext, Int32, Int32) Declaration public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) Parameters Type Name Description RuleContext _localctx System.Int32 ruleIndex System.Int32 predIndex Returns Type Description System.Boolean setExpr() Declaration public VtlParser.SetExprContext setExpr() Returns Type Description VtlParser.SetExprContext start() Declaration public VtlParser.StartContext start() Returns Type Description VtlParser.StartContext statement() Declaration public VtlParser.StatementContext statement() Returns Type Description VtlParser.StatementContext subspaceClause() Declaration public VtlParser.SubspaceClauseContext subspaceClause() Returns Type Description VtlParser.SubspaceClauseContext subspaceExpr() Declaration public VtlParser.SubspaceExprContext subspaceExpr() Returns Type Description VtlParser.SubspaceExprContext unopenedDataset() Declaration public VtlParser.UnopenedDatasetContext unopenedDataset() Returns Type Description VtlParser.UnopenedDatasetContext unpivotClause() Declaration public VtlParser.UnpivotClauseContext unpivotClause() Returns Type Description VtlParser.UnpivotClauseContext valueDomainName() Declaration public VtlParser.ValueDomainNameContext valueDomainName() Returns Type Description VtlParser.ValueDomainNameContext varID() Declaration public VtlParser.VarIDContext varID() Returns Type Description VtlParser.VarIDContext varSignature() Declaration public VtlParser.VarSignatureContext varSignature() Returns Type Description VtlParser.VarSignatureContext windowingClause() Declaration public VtlParser.WindowingClauseContext windowingClause() Returns Type Description VtlParser.WindowingClauseContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.IfThenElseDatasetContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.IfThenElseDatasetContext.html",
    "title": "Class VtlParser.IfThenElseDatasetContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.IfThenElseDatasetContext Inheritance System.Object VtlParser.IfThenElseDatasetContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class IfThenElseDatasetContext : ParserRuleContext Constructors IfThenElseDatasetContext(ParserRuleContext, Int32) Declaration public IfThenElseDatasetContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Fields elseDataset Declaration public VtlParser.DatasetContext elseDataset Field Value Type Description VtlParser.DatasetContext elseScalar Declaration public VtlParser.ScalarContext elseScalar Field Value Type Description VtlParser.ScalarContext ifDataset Declaration public VtlParser.DatasetContext ifDataset Field Value Type Description VtlParser.DatasetContext ifScalar Declaration public VtlParser.ScalarContext ifScalar Field Value Type Description VtlParser.ScalarContext thenDataset Declaration public VtlParser.DatasetContext thenDataset Field Value Type Description VtlParser.DatasetContext thenScalar Declaration public VtlParser.ScalarContext thenScalar Field Value Type Description VtlParser.ScalarContext Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult dataset() Declaration public VtlParser.DatasetContext[] dataset() Returns Type Description VtlParser.DatasetContext [] dataset(Int32) Declaration public VtlParser.DatasetContext dataset(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.DatasetContext ELSE() Declaration public ITerminalNode ELSE() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener IF() Declaration public ITerminalNode IF() Returns Type Description ITerminalNode scalar() Declaration public VtlParser.ScalarContext[] scalar() Returns Type Description VtlParser.ScalarContext [] scalar(Int32) Declaration public VtlParser.ScalarContext scalar(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ScalarContext THEN() Declaration public ITerminalNode THEN() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.IfThenElseScalarContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.IfThenElseScalarContext.html",
    "title": "Class VtlParser.IfThenElseScalarContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.IfThenElseScalarContext Inheritance System.Object VtlParser.IfThenElseScalarContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class IfThenElseScalarContext : ParserRuleContext Constructors IfThenElseScalarContext(ParserRuleContext, Int32) Declaration public IfThenElseScalarContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult ELSE() Declaration public ITerminalNode ELSE() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener IF() Declaration public ITerminalNode IF() Returns Type Description ITerminalNode scalar() Declaration public VtlParser.ScalarContext[] scalar() Returns Type Description VtlParser.ScalarContext [] scalar(Int32) Declaration public VtlParser.ScalarContext scalar(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ScalarContext THEN() Declaration public ITerminalNode THEN() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinAggrClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinAggrClauseContext.html",
    "title": "Class VtlParser.JoinAggrClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinAggrClauseContext Inheritance System.Object VtlParser.JoinAggrClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinAggrClauseContext : ParserRuleContext Constructors JoinAggrClauseContext(ParserRuleContext, Int32) Declaration public JoinAggrClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult aggrClause() Declaration public VtlParser.AggrClauseContext aggrClause() Returns Type Description VtlParser.AggrClauseContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinAliasesClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinAliasesClauseContext.html",
    "title": "Class VtlParser.JoinAliasesClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinAliasesClauseContext Inheritance System.Object VtlParser.JoinAliasesClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinAliasesClauseContext : ParserRuleContext Constructors JoinAliasesClauseContext(ParserRuleContext, Int32) Declaration public JoinAliasesClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener joinAliasExpr() Declaration public VtlParser.JoinAliasExprContext[] joinAliasExpr() Returns Type Description VtlParser.JoinAliasExprContext [] joinAliasExpr(Int32) Declaration public VtlParser.JoinAliasExprContext joinAliasExpr(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.JoinAliasExprContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinAliasExprContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinAliasExprContext.html",
    "title": "Class VtlParser.JoinAliasExprContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinAliasExprContext Inheritance System.Object VtlParser.JoinAliasExprContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinAliasExprContext : ParserRuleContext Constructors JoinAliasExprContext(ParserRuleContext, Int32) Declaration public JoinAliasExprContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult AS() Declaration public ITerminalNode AS() Returns Type Description ITerminalNode dataset() Declaration public VtlParser.DatasetContext dataset() Returns Type Description VtlParser.DatasetContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener varID() Declaration public VtlParser.VarIDContext varID() Returns Type Description VtlParser.VarIDContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinApplyClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinApplyClauseContext.html",
    "title": "Class VtlParser.JoinApplyClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinApplyClauseContext Inheritance System.Object VtlParser.JoinApplyClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinApplyClauseContext : ParserRuleContext Constructors JoinApplyClauseContext(ParserRuleContext, Int32) Declaration public JoinApplyClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult APPLY() Declaration public ITerminalNode APPLY() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener scalar() Declaration public VtlParser.ScalarContext scalar() Returns Type Description VtlParser.ScalarContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinBodyContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinBodyContext.html",
    "title": "Class VtlParser.JoinBodyContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinBodyContext Inheritance System.Object VtlParser.JoinBodyContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinBodyContext : ParserRuleContext Constructors JoinBodyContext(ParserRuleContext, Int32) Declaration public JoinBodyContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener groupingClause() Declaration public VtlParser.GroupingClauseContext groupingClause() Returns Type Description VtlParser.GroupingClauseContext havingClause() Declaration public VtlParser.HavingClauseContext havingClause() Returns Type Description VtlParser.HavingClauseContext joinAggrClause() Declaration public VtlParser.JoinAggrClauseContext joinAggrClause() Returns Type Description VtlParser.JoinAggrClauseContext joinApplyClause() Declaration public VtlParser.JoinApplyClauseContext joinApplyClause() Returns Type Description VtlParser.JoinApplyClauseContext joinCalcClause() Declaration public VtlParser.JoinCalcClauseContext joinCalcClause() Returns Type Description VtlParser.JoinCalcClauseContext joinDropClause() Declaration public VtlParser.JoinDropClauseContext joinDropClause() Returns Type Description VtlParser.JoinDropClauseContext joinFilterClause() Declaration public VtlParser.JoinFilterClauseContext joinFilterClause() Returns Type Description VtlParser.JoinFilterClauseContext joinKeepClause() Declaration public VtlParser.JoinKeepClauseContext joinKeepClause() Returns Type Description VtlParser.JoinKeepClauseContext joinRenameClause() Declaration public VtlParser.JoinRenameClauseContext joinRenameClause() Returns Type Description VtlParser.JoinRenameClauseContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinCalcClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinCalcClauseContext.html",
    "title": "Class VtlParser.JoinCalcClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinCalcClauseContext Inheritance System.Object VtlParser.JoinCalcClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinCalcClauseContext : ParserRuleContext Constructors JoinCalcClauseContext(ParserRuleContext, Int32) Declaration public JoinCalcClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult calcClause() Declaration public VtlParser.CalcClauseContext calcClause() Returns Type Description VtlParser.CalcClauseContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinClauseContext.html",
    "title": "Class VtlParser.JoinClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinClauseContext Inheritance System.Object VtlParser.JoinClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinClauseContext : ParserRuleContext Constructors JoinClauseContext(ParserRuleContext, Int32) Declaration public JoinClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener joinAliasesClause() Declaration public VtlParser.JoinAliasesClauseContext joinAliasesClause() Returns Type Description VtlParser.JoinAliasesClauseContext joinUsingClause() Declaration public VtlParser.JoinUsingClauseContext joinUsingClause() Returns Type Description VtlParser.JoinUsingClauseContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinDropClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinDropClauseContext.html",
    "title": "Class VtlParser.JoinDropClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinDropClauseContext Inheritance System.Object VtlParser.JoinDropClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinDropClauseContext : ParserRuleContext Constructors JoinDropClauseContext(ParserRuleContext, Int32) Declaration public JoinDropClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult dropClause() Declaration public VtlParser.DropClauseContext dropClause() Returns Type Description VtlParser.DropClauseContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinExprContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinExprContext.html",
    "title": "Class VtlParser.JoinExprContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinExprContext Inheritance System.Object VtlParser.JoinExprContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinExprContext : ParserRuleContext Constructors JoinExprContext(ParserRuleContext, Int32) Declaration public JoinExprContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener joinBody() Declaration public VtlParser.JoinBodyContext joinBody() Returns Type Description VtlParser.JoinBodyContext joinClause() Declaration public VtlParser.JoinClauseContext joinClause() Returns Type Description VtlParser.JoinClauseContext joinKeyword() Declaration public VtlParser.JoinKeywordContext joinKeyword() Returns Type Description VtlParser.JoinKeywordContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinFilterClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinFilterClauseContext.html",
    "title": "Class VtlParser.JoinFilterClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinFilterClauseContext Inheritance System.Object VtlParser.JoinFilterClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinFilterClauseContext : ParserRuleContext Constructors JoinFilterClauseContext(ParserRuleContext, Int32) Declaration public JoinFilterClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener filterClause() Declaration public VtlParser.FilterClauseContext filterClause() Returns Type Description VtlParser.FilterClauseContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinKeepClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinKeepClauseContext.html",
    "title": "Class VtlParser.JoinKeepClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinKeepClauseContext Inheritance System.Object VtlParser.JoinKeepClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinKeepClauseContext : ParserRuleContext Constructors JoinKeepClauseContext(ParserRuleContext, Int32) Declaration public JoinKeepClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener keepClause() Declaration public VtlParser.KeepClauseContext keepClause() Returns Type Description VtlParser.KeepClauseContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinKeywordContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinKeywordContext.html",
    "title": "Class VtlParser.JoinKeywordContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinKeywordContext Inheritance System.Object VtlParser.JoinKeywordContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinKeywordContext : ParserRuleContext Constructors JoinKeywordContext(ParserRuleContext, Int32) Declaration public JoinKeywordContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CROSS_JOIN() Declaration public ITerminalNode CROSS_JOIN() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener FULL_JOIN() Declaration public ITerminalNode FULL_JOIN() Returns Type Description ITerminalNode INNER_JOIN() Declaration public ITerminalNode INNER_JOIN() Returns Type Description ITerminalNode LEFT_JOIN() Declaration public ITerminalNode LEFT_JOIN() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinRenameClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinRenameClauseContext.html",
    "title": "Class VtlParser.JoinRenameClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinRenameClauseContext Inheritance System.Object VtlParser.JoinRenameClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinRenameClauseContext : ParserRuleContext Constructors JoinRenameClauseContext(ParserRuleContext, Int32) Declaration public JoinRenameClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener renameClause() Declaration public VtlParser.RenameClauseContext renameClause() Returns Type Description VtlParser.RenameClauseContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinUsingClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinUsingClauseContext.html",
    "title": "Class VtlParser.JoinUsingClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.JoinUsingClauseContext Inheritance System.Object VtlParser.JoinUsingClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinUsingClauseContext : ParserRuleContext Constructors JoinUsingClauseContext(ParserRuleContext, Int32) Declaration public JoinUsingClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode componentID() Declaration public VtlParser.ComponentIDContext[] componentID() Returns Type Description VtlParser.ComponentIDContext [] componentID(Int32) Declaration public VtlParser.ComponentIDContext componentID(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ComponentIDContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener USING() Declaration public ITerminalNode USING() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.KeepClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.KeepClauseContext.html",
    "title": "Class VtlParser.KeepClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.KeepClauseContext Inheritance System.Object VtlParser.KeepClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class KeepClauseContext : ParserRuleContext Constructors KeepClauseContext(ParserRuleContext, Int32) Declaration public KeepClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode component() Declaration public VtlParser.ComponentContext[] component() Returns Type Description VtlParser.ComponentContext [] component(Int32) Declaration public VtlParser.ComponentContext component(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ComponentContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener KEEP() Declaration public ITerminalNode KEEP() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.LimitsMethodContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.LimitsMethodContext.html",
    "title": "Class VtlParser.LimitsMethodContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.LimitsMethodContext Inheritance System.Object VtlParser.LimitsMethodContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class LimitsMethodContext : ParserRuleContext Constructors LimitsMethodContext(ParserRuleContext, Int32) Declaration public LimitsMethodContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult ALL() Declaration public ITerminalNode ALL() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener SINGLE() Declaration public ITerminalNode SINGLE() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ListContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ListContext.html",
    "title": "Class VtlParser.ListContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.ListContext Inheritance System.Object VtlParser.ListContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ListContext : ParserRuleContext Constructors ListContext(ParserRuleContext, Int32) Declaration public ListContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener scalar() Declaration public VtlParser.ScalarContext[] scalar() Returns Type Description VtlParser.ScalarContext [] scalar(Int32) Declaration public VtlParser.ScalarContext scalar(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ScalarContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.MembershipDatasetContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.MembershipDatasetContext.html",
    "title": "Class VtlParser.MembershipDatasetContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.MembershipDatasetContext Inheritance System.Object VtlParser.MembershipDatasetContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class MembershipDatasetContext : ParserRuleContext Constructors MembershipDatasetContext(ParserRuleContext, Int32) Declaration public MembershipDatasetContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult closedDataset() Declaration public VtlParser.ClosedDatasetContext closedDataset() Returns Type Description VtlParser.ClosedDatasetContext componentID() Declaration public VtlParser.ComponentIDContext componentID() Returns Type Description VtlParser.ComponentIDContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener MEMBERSHIP() Declaration public ITerminalNode MEMBERSHIP() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.OpenedDatasetContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.OpenedDatasetContext.html",
    "title": "Class VtlParser.OpenedDatasetContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.OpenedDatasetContext Inheritance System.Object VtlParser.OpenedDatasetContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class OpenedDatasetContext : ParserRuleContext Constructors OpenedDatasetContext(ParserRuleContext, Int32) Declaration public OpenedDatasetContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Fields openedDatasetLeft Declaration public VtlParser.OpenedDatasetContext openedDatasetLeft Field Value Type Description VtlParser.OpenedDatasetContext opSymbol Declaration public IToken opSymbol Field Value Type Description IToken Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult AND() Declaration public ITerminalNode AND() Returns Type Description ITerminalNode closedDataset() Declaration public VtlParser.ClosedDatasetContext closedDataset() Returns Type Description VtlParser.ClosedDatasetContext CONCAT() Declaration public ITerminalNode CONCAT() Returns Type Description ITerminalNode constant() Declaration public VtlParser.ConstantContext constant() Returns Type Description VtlParser.ConstantContext dataset() Declaration public VtlParser.DatasetContext dataset() Returns Type Description VtlParser.DatasetContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ifThenElseDataset() Declaration public VtlParser.IfThenElseDatasetContext ifThenElseDataset() Returns Type Description VtlParser.IfThenElseDatasetContext IN() Declaration public ITerminalNode IN() Returns Type Description ITerminalNode list() Declaration public VtlParser.ListContext list() Returns Type Description VtlParser.ListContext membershipDataset() Declaration public VtlParser.MembershipDatasetContext membershipDataset() Returns Type Description VtlParser.MembershipDatasetContext NOT() Declaration public ITerminalNode NOT() Returns Type Description ITerminalNode NOT_IN() Declaration public ITerminalNode NOT_IN() Returns Type Description ITerminalNode openedDataset() Declaration public VtlParser.OpenedDatasetContext[] openedDataset() Returns Type Description VtlParser.OpenedDatasetContext [] openedDataset(Int32) Declaration public VtlParser.OpenedDatasetContext openedDataset(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.OpenedDatasetContext OR() Declaration public ITerminalNode OR() Returns Type Description ITerminalNode scalar() Declaration public VtlParser.ScalarContext scalar() Returns Type Description VtlParser.ScalarContext unopenedDataset() Declaration public VtlParser.UnopenedDatasetContext unopenedDataset() Returns Type Description VtlParser.UnopenedDatasetContext valueDomainName() Declaration public VtlParser.ValueDomainNameContext valueDomainName() Returns Type Description VtlParser.ValueDomainNameContext XOR() Declaration public ITerminalNode XOR() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.OptionalExprContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.OptionalExprContext.html",
    "title": "Class VtlParser.OptionalExprContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.OptionalExprContext Inheritance System.Object VtlParser.OptionalExprContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class OptionalExprContext : ParserRuleContext Constructors OptionalExprContext(ParserRuleContext, Int32) Declaration public OptionalExprContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener OPTIONAL() Declaration public ITerminalNode OPTIONAL() Returns Type Description ITerminalNode scalar() Declaration public VtlParser.ScalarContext scalar() Returns Type Description VtlParser.ScalarContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.OrderClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.OrderClauseContext.html",
    "title": "Class VtlParser.OrderClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.OrderClauseContext Inheritance System.Object VtlParser.OrderClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class OrderClauseContext : ParserRuleContext Constructors OrderClauseContext(ParserRuleContext, Int32) Declaration public OrderClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult BY() Declaration public ITerminalNode BY() Returns Type Description ITerminalNode CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ORDER() Declaration public ITerminalNode ORDER() Returns Type Description ITerminalNode orderExpr() Declaration public VtlParser.OrderExprContext[] orderExpr() Returns Type Description VtlParser.OrderExprContext [] orderExpr(Int32) Declaration public VtlParser.OrderExprContext orderExpr(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.OrderExprContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.OrderExprContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.OrderExprContext.html",
    "title": "Class VtlParser.OrderExprContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.OrderExprContext Inheritance System.Object VtlParser.OrderExprContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class OrderExprContext : ParserRuleContext Constructors OrderExprContext(ParserRuleContext, Int32) Declaration public OrderExprContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult ASC() Declaration public ITerminalNode ASC() Returns Type Description ITerminalNode component() Declaration public VtlParser.ComponentContext component() Returns Type Description VtlParser.ComponentContext DESC() Declaration public ITerminalNode DESC() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.PartitionClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.PartitionClauseContext.html",
    "title": "Class VtlParser.PartitionClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.PartitionClauseContext Inheritance System.Object VtlParser.PartitionClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class PartitionClauseContext : ParserRuleContext Constructors PartitionClauseContext(ParserRuleContext, Int32) Declaration public PartitionClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult BY() Declaration public ITerminalNode BY() Returns Type Description ITerminalNode CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode component() Declaration public VtlParser.ComponentContext[] component() Returns Type Description VtlParser.ComponentContext [] component(Int32) Declaration public VtlParser.ComponentContext component(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ComponentContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener PARTITION() Declaration public ITerminalNode PARTITION() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.PivotClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.PivotClauseContext.html",
    "title": "Class VtlParser.PivotClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.PivotClauseContext Inheritance System.Object VtlParser.PivotClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class PivotClauseContext : ParserRuleContext Constructors PivotClauseContext(ParserRuleContext, Int32) Declaration public PivotClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CARTESIAN_PER() Declaration public ITerminalNode CARTESIAN_PER() Returns Type Description ITerminalNode componentID() Declaration public VtlParser.ComponentIDContext[] componentID() Returns Type Description VtlParser.ComponentIDContext [] componentID(Int32) Declaration public VtlParser.ComponentIDContext componentID(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ComponentIDContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener PIVOT() Declaration public ITerminalNode PIVOT() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RenameClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RenameClauseContext.html",
    "title": "Class VtlParser.RenameClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.RenameClauseContext Inheritance System.Object VtlParser.RenameClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class RenameClauseContext : ParserRuleContext Constructors RenameClauseContext(ParserRuleContext, Int32) Declaration public RenameClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener RENAME() Declaration public ITerminalNode RENAME() Returns Type Description ITerminalNode renameExpr() Declaration public VtlParser.RenameExprContext[] renameExpr() Returns Type Description VtlParser.RenameExprContext [] renameExpr(Int32) Declaration public VtlParser.RenameExprContext renameExpr(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.RenameExprContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RenameExprContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RenameExprContext.html",
    "title": "Class VtlParser.RenameExprContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.RenameExprContext Inheritance System.Object VtlParser.RenameExprContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class RenameExprContext : ParserRuleContext Constructors RenameExprContext(ParserRuleContext, Int32) Declaration public RenameExprContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult component() Declaration public VtlParser.ComponentContext component() Returns Type Description VtlParser.ComponentContext componentID() Declaration public VtlParser.ComponentIDContext componentID() Returns Type Description VtlParser.ComponentIDContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener TO() Declaration public ITerminalNode TO() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RetainTypeContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RetainTypeContext.html",
    "title": "Class VtlParser.RetainTypeContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.RetainTypeContext Inheritance System.Object VtlParser.RetainTypeContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class RetainTypeContext : ParserRuleContext Constructors RetainTypeContext(ParserRuleContext, Int32) Declaration public RetainTypeContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult ALL() Declaration public ITerminalNode ALL() Returns Type Description ITerminalNode BOOLEAN_CONSTANT() Declaration public ITerminalNode BOOLEAN_CONSTANT() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RuleClauseDatapointContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RuleClauseDatapointContext.html",
    "title": "Class VtlParser.RuleClauseDatapointContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.RuleClauseDatapointContext Inheritance System.Object VtlParser.RuleClauseDatapointContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class RuleClauseDatapointContext : ParserRuleContext Constructors RuleClauseDatapointContext(ParserRuleContext, Int32) Declaration public RuleClauseDatapointContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener EOL() Declaration public ITerminalNode[] EOL() Returns Type Description ITerminalNode [] EOL(Int32) Declaration public ITerminalNode EOL(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ruleItemDatapoint() Declaration public VtlParser.RuleItemDatapointContext[] ruleItemDatapoint() Returns Type Description VtlParser.RuleItemDatapointContext [] ruleItemDatapoint(Int32) Declaration public VtlParser.RuleItemDatapointContext ruleItemDatapoint(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.RuleItemDatapointContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RuleIDContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RuleIDContext.html",
    "title": "Class VtlParser.RuleIDContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.RuleIDContext Inheritance System.Object VtlParser.RuleIDContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class RuleIDContext : ParserRuleContext Constructors RuleIDContext(ParserRuleContext, Int32) Declaration public RuleIDContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener IDENTIFIER() Declaration public ITerminalNode IDENTIFIER() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RuleItemDatapointContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RuleItemDatapointContext.html",
    "title": "Class VtlParser.RuleItemDatapointContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.RuleItemDatapointContext Inheritance System.Object VtlParser.RuleItemDatapointContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class RuleItemDatapointContext : ParserRuleContext Constructors RuleItemDatapointContext(ParserRuleContext, Int32) Declaration public RuleItemDatapointContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener errorCode() Declaration public VtlParser.ErrorCodeContext errorCode() Returns Type Description VtlParser.ErrorCodeContext errorLevel() Declaration public VtlParser.ErrorLevelContext errorLevel() Returns Type Description VtlParser.ErrorLevelContext ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ruleID() Declaration public VtlParser.RuleIDContext ruleID() Returns Type Description VtlParser.RuleIDContext scalar() Declaration public VtlParser.ScalarContext[] scalar() Returns Type Description VtlParser.ScalarContext [] scalar(Int32) Declaration public VtlParser.ScalarContext scalar(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ScalarContext THEN() Declaration public ITerminalNode THEN() Returns Type Description ITerminalNode WHEN() Declaration public ITerminalNode WHEN() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RulesetIDContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RulesetIDContext.html",
    "title": "Class VtlParser.RulesetIDContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.RulesetIDContext Inheritance System.Object VtlParser.RulesetIDContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class RulesetIDContext : ParserRuleContext Constructors RulesetIDContext(ParserRuleContext, Int32) Declaration public RulesetIDContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener IDENTIFIER() Declaration public ITerminalNode IDENTIFIER() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RulesetSignatureContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RulesetSignatureContext.html",
    "title": "Class VtlParser.RulesetSignatureContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.RulesetSignatureContext Inheritance System.Object VtlParser.RulesetSignatureContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class RulesetSignatureContext : ParserRuleContext Constructors RulesetSignatureContext(ParserRuleContext, Int32) Declaration public RulesetSignatureContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Fields signatureType Declaration public IToken signatureType Field Value Type Description IToken Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener VALUE_DOMAIN() Declaration public ITerminalNode VALUE_DOMAIN() Returns Type Description ITerminalNode VARIABLE() Declaration public ITerminalNode VARIABLE() Returns Type Description ITerminalNode varSignature() Declaration public VtlParser.VarSignatureContext[] varSignature() Returns Type Description VtlParser.VarSignatureContext [] varSignature(Int32) Declaration public VtlParser.VarSignatureContext varSignature(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.VarSignatureContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ScalarContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ScalarContext.html",
    "title": "Class VtlParser.ScalarContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.ScalarContext Inheritance System.Object VtlParser.ScalarContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ScalarContext : ParserRuleContext Constructors ScalarContext(ParserRuleContext, Int32) Declaration public ScalarContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Fields opSymbol Declaration public IToken opSymbol Field Value Type Description IToken Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods ABS() Declaration public ITerminalNode ABS() Returns Type Description ITerminalNode Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult AND() Declaration public ITerminalNode AND() Returns Type Description ITerminalNode BETWEEN() Declaration public ITerminalNode BETWEEN() Returns Type Description ITerminalNode CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode CEIL() Declaration public ITerminalNode CEIL() Returns Type Description ITerminalNode CHARSET_MATCH() Declaration public ITerminalNode CHARSET_MATCH() Returns Type Description ITerminalNode component() Declaration public VtlParser.ComponentContext component() Returns Type Description VtlParser.ComponentContext CONCAT() Declaration public ITerminalNode CONCAT() Returns Type Description ITerminalNode constant() Declaration public VtlParser.ConstantContext constant() Returns Type Description VtlParser.ConstantContext CURRENT_DATE() Declaration public ITerminalNode CURRENT_DATE() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener EXP() Declaration public ITerminalNode EXP() Returns Type Description ITerminalNode FLOOR() Declaration public ITerminalNode FLOOR() Returns Type Description ITerminalNode ifThenElseScalar() Declaration public VtlParser.IfThenElseScalarContext ifThenElseScalar() Returns Type Description VtlParser.IfThenElseScalarContext IN() Declaration public ITerminalNode IN() Returns Type Description ITerminalNode INSTR() Declaration public ITerminalNode INSTR() Returns Type Description ITerminalNode ISNULL() Declaration public ITerminalNode ISNULL() Returns Type Description ITerminalNode LCASE() Declaration public ITerminalNode LCASE() Returns Type Description ITerminalNode LEN() Declaration public ITerminalNode LEN() Returns Type Description ITerminalNode list() Declaration public VtlParser.ListContext list() Returns Type Description VtlParser.ListContext LN() Declaration public ITerminalNode LN() Returns Type Description ITerminalNode LOG() Declaration public ITerminalNode LOG() Returns Type Description ITerminalNode LTRIM() Declaration public ITerminalNode LTRIM() Returns Type Description ITerminalNode MOD() Declaration public ITerminalNode MOD() Returns Type Description ITerminalNode NOT() Declaration public ITerminalNode NOT() Returns Type Description ITerminalNode NOT_IN() Declaration public ITerminalNode NOT_IN() Returns Type Description ITerminalNode NVL() Declaration public ITerminalNode NVL() Returns Type Description ITerminalNode optionalExpr() Declaration public VtlParser.OptionalExprContext[] optionalExpr() Returns Type Description VtlParser.OptionalExprContext [] optionalExpr(Int32) Declaration public VtlParser.OptionalExprContext optionalExpr(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.OptionalExprContext OR() Declaration public ITerminalNode OR() Returns Type Description ITerminalNode PERIOD_INDICATOR() Declaration public ITerminalNode PERIOD_INDICATOR() Returns Type Description ITerminalNode POWER() Declaration public ITerminalNode POWER() Returns Type Description ITerminalNode REPLACE() Declaration public ITerminalNode REPLACE() Returns Type Description ITerminalNode ROUND() Declaration public ITerminalNode ROUND() Returns Type Description ITerminalNode RTRIM() Declaration public ITerminalNode RTRIM() Returns Type Description ITerminalNode scalar() Declaration public VtlParser.ScalarContext[] scalar() Returns Type Description VtlParser.ScalarContext [] scalar(Int32) Declaration public VtlParser.ScalarContext scalar(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ScalarContext SQRT() Declaration public ITerminalNode SQRT() Returns Type Description ITerminalNode SUBSTR() Declaration public ITerminalNode SUBSTR() Returns Type Description ITerminalNode TIME_AGG() Declaration public ITerminalNode TIME_AGG() Returns Type Description ITerminalNode TRIM() Declaration public ITerminalNode TRIM() Returns Type Description ITerminalNode TRUNC() Declaration public ITerminalNode TRUNC() Returns Type Description ITerminalNode UCASE() Declaration public ITerminalNode UCASE() Returns Type Description ITerminalNode valueDomainName() Declaration public VtlParser.ValueDomainNameContext valueDomainName() Returns Type Description VtlParser.ValueDomainNameContext XOR() Declaration public ITerminalNode XOR() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.SecondWindowLimitContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.SecondWindowLimitContext.html",
    "title": "Class VtlParser.SecondWindowLimitContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.SecondWindowLimitContext Inheritance System.Object VtlParser.SecondWindowLimitContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class SecondWindowLimitContext : ParserRuleContext Constructors SecondWindowLimitContext(ParserRuleContext, Int32) Declaration public SecondWindowLimitContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CURRENT() Declaration public ITerminalNode CURRENT() Returns Type Description ITerminalNode DATA() Declaration public ITerminalNode DATA() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener FOLLOWING() Declaration public ITerminalNode FOLLOWING() Returns Type Description ITerminalNode INTEGER_CONSTANT() Declaration public ITerminalNode INTEGER_CONSTANT() Returns Type Description ITerminalNode POINT() Declaration public ITerminalNode POINT() Returns Type Description ITerminalNode UNBOUNDED() Declaration public ITerminalNode UNBOUNDED() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.SetExprContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.SetExprContext.html",
    "title": "Class VtlParser.SetExprContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.SetExprContext Inheritance System.Object VtlParser.SetExprContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class SetExprContext : ParserRuleContext Constructors SetExprContext(ParserRuleContext, Int32) Declaration public SetExprContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Fields opSymbol Declaration public IToken opSymbol Field Value Type Description IToken Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode dataset() Declaration public VtlParser.DatasetContext[] dataset() Returns Type Description VtlParser.DatasetContext [] dataset(Int32) Declaration public VtlParser.DatasetContext dataset(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.DatasetContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener INTERSECT() Declaration public ITerminalNode INTERSECT() Returns Type Description ITerminalNode SETDIFF() Declaration public ITerminalNode SETDIFF() Returns Type Description ITerminalNode SYMDIFF() Declaration public ITerminalNode SYMDIFF() Returns Type Description ITerminalNode UNION() Declaration public ITerminalNode UNION() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.StartContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.StartContext.html",
    "title": "Class VtlParser.StartContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.StartContext Inheritance System.Object VtlParser.StartContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class StartContext : ParserRuleContext Constructors StartContext(ParserRuleContext, Int32) Declaration public StartContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener Eof() Declaration public ITerminalNode Eof() Returns Type Description ITerminalNode EOL() Declaration public ITerminalNode[] EOL() Returns Type Description ITerminalNode [] EOL(Int32) Declaration public ITerminalNode EOL(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ML_COMMENT() Declaration public ITerminalNode[] ML_COMMENT() Returns Type Description ITerminalNode [] ML_COMMENT(Int32) Declaration public ITerminalNode ML_COMMENT(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode SL_COMMENT() Declaration public ITerminalNode[] SL_COMMENT() Returns Type Description ITerminalNode [] SL_COMMENT(Int32) Declaration public ITerminalNode SL_COMMENT(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode statement() Declaration public VtlParser.StatementContext[] statement() Returns Type Description VtlParser.StatementContext [] statement(Int32) Declaration public VtlParser.StatementContext statement(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.StatementContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.StatementContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.StatementContext.html",
    "title": "Class VtlParser.StatementContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.StatementContext Inheritance System.Object VtlParser.StatementContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class StatementContext : ParserRuleContext Constructors StatementContext(ParserRuleContext, Int32) Declaration public StatementContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult ASSIGN() Declaration public ITerminalNode ASSIGN() Returns Type Description ITerminalNode dataset() Declaration public VtlParser.DatasetContext dataset() Returns Type Description VtlParser.DatasetContext datasetID() Declaration public VtlParser.DatasetIDContext datasetID() Returns Type Description VtlParser.DatasetIDContext defExpr() Declaration public VtlParser.DefExprContext defExpr() Returns Type Description VtlParser.DefExprContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener PUT_SYMBOL() Declaration public ITerminalNode PUT_SYMBOL() Returns Type Description ITerminalNode scalar() Declaration public VtlParser.ScalarContext scalar() Returns Type Description VtlParser.ScalarContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.SubspaceClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.SubspaceClauseContext.html",
    "title": "Class VtlParser.SubspaceClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.SubspaceClauseContext Inheritance System.Object VtlParser.SubspaceClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class SubspaceClauseContext : ParserRuleContext Constructors SubspaceClauseContext(ParserRuleContext, Int32) Declaration public SubspaceClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CARTESIAN_PER() Declaration public ITerminalNode[] CARTESIAN_PER() Returns Type Description ITerminalNode [] CARTESIAN_PER(Int32) Declaration public ITerminalNode CARTESIAN_PER(int i) Parameters Type Name Description System.Int32 i Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener SUBSPACE() Declaration public ITerminalNode SUBSPACE() Returns Type Description ITerminalNode subspaceExpr() Declaration public VtlParser.SubspaceExprContext[] subspaceExpr() Returns Type Description VtlParser.SubspaceExprContext [] subspaceExpr(Int32) Declaration public VtlParser.SubspaceExprContext subspaceExpr(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.SubspaceExprContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.SubspaceExprContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.SubspaceExprContext.html",
    "title": "Class VtlParser.SubspaceExprContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.SubspaceExprContext Inheritance System.Object VtlParser.SubspaceExprContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class SubspaceExprContext : ParserRuleContext Constructors SubspaceExprContext(ParserRuleContext, Int32) Declaration public SubspaceExprContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult component() Declaration public VtlParser.ComponentContext component() Returns Type Description VtlParser.ComponentContext constant() Declaration public VtlParser.ConstantContext constant() Returns Type Description VtlParser.ConstantContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.UnopenedDatasetContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.UnopenedDatasetContext.html",
    "title": "Class VtlParser.UnopenedDatasetContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.UnopenedDatasetContext Inheritance System.Object VtlParser.UnopenedDatasetContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class UnopenedDatasetContext : ParserRuleContext Constructors UnopenedDatasetContext(ParserRuleContext, Int32) Declaration public UnopenedDatasetContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult closedDataset() Declaration public VtlParser.ClosedDatasetContext closedDataset() Returns Type Description VtlParser.ClosedDatasetContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener membershipDataset() Declaration public VtlParser.MembershipDatasetContext membershipDataset() Returns Type Description VtlParser.MembershipDatasetContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.UnpivotClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.UnpivotClauseContext.html",
    "title": "Class VtlParser.UnpivotClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.UnpivotClauseContext Inheritance System.Object VtlParser.UnpivotClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class UnpivotClauseContext : ParserRuleContext Constructors UnpivotClauseContext(ParserRuleContext, Int32) Declaration public UnpivotClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult CARTESIAN_PER() Declaration public ITerminalNode CARTESIAN_PER() Returns Type Description ITerminalNode componentID() Declaration public VtlParser.ComponentIDContext[] componentID() Returns Type Description VtlParser.ComponentIDContext [] componentID(Int32) Declaration public VtlParser.ComponentIDContext componentID(int i) Parameters Type Name Description System.Int32 i Returns Type Description VtlParser.ComponentIDContext EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener UNPIVOT() Declaration public ITerminalNode UNPIVOT() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ValueDomainNameContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ValueDomainNameContext.html",
    "title": "Class VtlParser.ValueDomainNameContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.ValueDomainNameContext Inheritance System.Object VtlParser.ValueDomainNameContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ValueDomainNameContext : ParserRuleContext Constructors ValueDomainNameContext(ParserRuleContext, Int32) Declaration public ValueDomainNameContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener IDENTIFIER() Declaration public ITerminalNode IDENTIFIER() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.VarIDContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.VarIDContext.html",
    "title": "Class VtlParser.VarIDContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.VarIDContext Inheritance System.Object VtlParser.VarIDContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class VarIDContext : ParserRuleContext Constructors VarIDContext(ParserRuleContext, Int32) Declaration public VarIDContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener IDENTIFIER() Declaration public ITerminalNode IDENTIFIER() Returns Type Description ITerminalNode Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.VarSignatureContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.VarSignatureContext.html",
    "title": "Class VtlParser.VarSignatureContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.VarSignatureContext Inheritance System.Object VtlParser.VarSignatureContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class VarSignatureContext : ParserRuleContext Constructors VarSignatureContext(ParserRuleContext, Int32) Declaration public VarSignatureContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult AS() Declaration public ITerminalNode AS() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener IDENTIFIER() Declaration public ITerminalNode IDENTIFIER() Returns Type Description ITerminalNode varID() Declaration public VtlParser.VarIDContext varID() Returns Type Description VtlParser.VarIDContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.WindowingClauseContext.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.WindowingClauseContext.html",
    "title": "Class VtlParser.WindowingClauseContext | VTL Processing API documentation",
    "keywords": "Class VtlParser.WindowingClauseContext Inheritance System.Object VtlParser.WindowingClauseContext Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class WindowingClauseContext : ParserRuleContext Constructors WindowingClauseContext(ParserRuleContext, Int32) Declaration public WindowingClauseContext(ParserRuleContext parent, int invokingState) Parameters Type Name Description ParserRuleContext parent System.Int32 invokingState Properties RuleIndex Declaration public override int RuleIndex { get; } Property Value Type Description System.Int32 Methods Accept<TResult>(IParseTreeVisitor<TResult>) Declaration public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) Parameters Type Name Description IParseTreeVisitor <TResult> visitor Returns Type Description TResult Type Parameters Name Description TResult AND() Declaration public ITerminalNode AND() Returns Type Description ITerminalNode BETWEEN() Declaration public ITerminalNode BETWEEN() Returns Type Description ITerminalNode DATA() Declaration public ITerminalNode DATA() Returns Type Description ITerminalNode EnterRule(IParseTreeListener) Declaration public override void EnterRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener ExitRule(IParseTreeListener) Declaration public override void ExitRule(IParseTreeListener listener) Parameters Type Name Description IParseTreeListener listener firstWindowLimit() Declaration public VtlParser.FirstWindowLimitContext firstWindowLimit() Returns Type Description VtlParser.FirstWindowLimitContext POINTS() Declaration public ITerminalNode POINTS() Returns Type Description ITerminalNode RANGE() Declaration public ITerminalNode RANGE() Returns Type Description ITerminalNode secondWindowLimit() Declaration public VtlParser.SecondWindowLimitContext secondWindowLimit() Returns Type Description VtlParser.SecondWindowLimitContext Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.FrontEnd | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.FrontEnd Classes TreeGenerator The VTL 2.0 syntax tree generator."
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.FrontEnd.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.FrontEnd.Interfaces Interfaces ITreeGenerator The VTL 2.0 syntax tree generator interface."
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Interfaces.ITreeGenerator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.Interfaces.ITreeGenerator.html",
    "title": "Interface ITreeGenerator | VTL Processing API documentation",
    "keywords": "Interface ITreeGenerator The VTL 2.0 syntax tree generator interface. Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface ITreeGenerator Methods BuildTransformationSchema(String) Builds a transformation schema based on VTL 2.0 source code. Declaration ITransformationSchema BuildTransformationSchema(string vtlSource) Parameters Type Name Description System.String vtlSource The VTL 2.0 source code. Returns Type Description ITransformationSchema The transformation schema. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.TreeGenerator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.FrontEnd.TreeGenerator.html",
    "title": "Class TreeGenerator | VTL Processing API documentation",
    "keywords": "Class TreeGenerator The VTL 2.0 syntax tree generator. Inheritance System.Object TreeGenerator Implements ITreeGenerator Namespace : StatisticsPoland.VtlProcessing.Core.FrontEnd Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public sealed class TreeGenerator : object, ITreeGenerator Constructors TreeGenerator(ITreeTransformer, ILogger<ITreeGenerator>) Initializes a new instance of the TreeGenerator class. Declaration public TreeGenerator(ITreeTransformer transformer, ILogger<ITreeGenerator> logger = null) Parameters Type Name Description ITreeTransformer transformer The transformer of a CST tree to a transformation schema. ILogger < ITreeGenerator > logger The syntax errors logger. Methods BuildTransformationSchema(String) Declaration public ITransformationSchema BuildTransformationSchema(string vtlSource) Parameters Type Name Description System.String vtlSource Returns Type Description ITransformationSchema Implements ITreeGenerator Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core Classes ErrorsCollection Collection of translation errors. TargetsCollection Collection of translation targets. Translator The VTL 2.0 translator representation."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Attributes.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Attributes.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.Attributes | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.Attributes Classes OperatorSymbolAttribute Attribute allowing to find a definition of an operator with the specified symbol."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Attributes.OperatorSymbolAttribute.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Attributes.OperatorSymbolAttribute.html",
    "title": "Class OperatorSymbolAttribute | VTL Processing API documentation",
    "keywords": "Class OperatorSymbolAttribute Attribute allowing to find a definition of an operator with the specified symbol. Inheritance System.Object OperatorSymbolAttribute Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.Attributes Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public sealed class OperatorSymbolAttribute : Attribute Constructors OperatorSymbolAttribute(String[]) Initialises a new instance of the OperatorSymbolAttribute class. Declaration public OperatorSymbolAttribute(params string[] symbols) Parameters Type Name Description System.String [] symbols The symbol of the operator. Properties Symbols Gets the symbol collection. Declaration public ICollection<string> Symbols { get; } Property Value Type Description ICollection < System.String > Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.ComponentTools.ComponentName.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.ComponentTools.ComponentName.html",
    "title": "Class ComponentName | VTL Processing API documentation",
    "keywords": "Class ComponentName Extension methods for component names. Inheritance System.Object ComponentName Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.ComponentTools Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public static class ComponentName : object Methods GetNameWithoutAlias(String) Gets the name without an alias. Declaration public static string GetNameWithoutAlias(this string name) Parameters Type Name Description System.String name The name of a component. Returns Type Description System.String The name withot an alias."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.ComponentTools.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.ComponentTools.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.ComponentTools | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.ComponentTools Classes ComponentName Extension methods for component names."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.DatapointRulesetResolver.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.DatapointRulesetResolver.html",
    "title": "Delegate DatapointRulesetResolver | VTL Processing API documentation",
    "keywords": "Delegate DatapointRulesetResolver Initialises a new instance of the IRuleset interface. Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public delegate IRuleset DatapointRulesetResolver(string name, string rulesetText); Parameters Type Name Description System.String name The name of the ruleset. System.String rulesetText The text of the ruleset. Returns Type Description IRuleset Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.DataStructureResolver.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.DataStructureResolver.html",
    "title": "Delegate DataStructureResolver | VTL Processing API documentation",
    "keywords": "Delegate DataStructureResolver Initializes a new instance of the IDataStructure interface for a single component structure . Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public delegate IDataStructure DataStructureResolver(string compName = null, ComponentType? compType = null, BasicDataType? dataType = null); Parameters Type Name Description System.String compName The name of component. System.Nullable < ComponentType > compType The component type. System.Nullable < BasicDataType > dataType The data type of component. Returns Type Description IDataStructure Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.ExpressionResolver.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.ExpressionResolver.html",
    "title": "Delegate ExpressionResolver | VTL Processing API documentation",
    "keywords": "Delegate ExpressionResolver Initialises a new instance of the IExpression interface. Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public delegate IExpression ExpressionResolver(IExpression parentExpr = null); Parameters Type Name Description IExpression parentExpr The parent expression. Returns Type Description IExpression Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection Classes Resolvers The dependency injection resolvers class. ServiceCollectionExtensions The extensions. ServiceProviderExtensions The extensions. Delegates DatapointRulesetResolver Initialises a new instance of the IRuleset interface. DataStructureResolver Initializes a new instance of the IDataStructure interface for a single component structure . ExpressionResolver Initialises a new instance of the IExpression interface. JoinExpressionResolver Initialises a new instance of the IJoinExpression interface. OperatorResolver Initializes a new instance of the IOperatorDefinition interface. RuleExpressionResolver Initialises a new instance of the IRuleExpression interface. TransformationSchemaResolver Initialises a new instance of the ITransformationSchema interface."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.JoinExpressionResolver.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.JoinExpressionResolver.html",
    "title": "Delegate JoinExpressionResolver | VTL Processing API documentation",
    "keywords": "Delegate JoinExpressionResolver Initialises a new instance of the IJoinExpression interface. Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public delegate IJoinExpression JoinExpressionResolver(IExpression expression); Parameters Type Name Description IExpression expression The base expression with a \"join\" operator. Returns Type Description IJoinExpression Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.OperatorResolver.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.OperatorResolver.html",
    "title": "Delegate OperatorResolver | VTL Processing API documentation",
    "keywords": "Delegate OperatorResolver Initializes a new instance of the IOperatorDefinition interface. Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public delegate IOperatorDefinition OperatorResolver(string key); Parameters Type Name Description System.String key The operator key. Returns Type Description IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.Resolvers.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.Resolvers.html",
    "title": "Class Resolvers | VTL Processing API documentation",
    "keywords": "Class Resolvers The dependency injection resolvers class. Inheritance System.Object Resolvers Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public static class Resolvers : object Methods AddResolvers(IServiceCollection) Adds resolvers to the specified . Declaration public static IServiceCollection AddResolvers(this IServiceCollection services) Parameters Type Name Description IServiceCollection services The services collection. Returns Type Description IServiceCollection The services collection."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.RuleExpressionResolver.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.RuleExpressionResolver.html",
    "title": "Delegate RuleExpressionResolver | VTL Processing API documentation",
    "keywords": "Delegate RuleExpressionResolver Initialises a new instance of the IRuleExpression interface. Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public delegate IRuleExpression RuleExpressionResolver(IExpression expression, IRuleset containingRuleset, string errorCode = null, int? errorLevel = null); Parameters Type Name Description IExpression expression The base expression. IRuleset containingRuleset The ruleset containing this rule expression. System.String errorCode The error code. System.Nullable < System.Int32 > errorLevel The error level. Returns Type Description IRuleExpression Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | VTL Processing API documentation",
    "keywords": "Class ServiceCollectionExtensions The extensions. Inheritance System.Object ServiceCollectionExtensions Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public static class ServiceCollectionExtensions : object Methods AddVtlProcessing(IServiceCollection, Action<IVtlProcessingConfig>) Adds the VtlProcessing services collection. Declaration public static IServiceCollection AddVtlProcessing(this IServiceCollection services, Action<IVtlProcessingConfig> config) Parameters Type Name Description IServiceCollection services The service collection to add the VtlProcessing services collection to. Action < IVtlProcessingConfig > config The configuration of a VtlProcessing VTL 2.0 translator. Returns Type Description IServiceCollection The service collection."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.ServiceProviderExtensions.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.ServiceProviderExtensions.html",
    "title": "Class ServiceProviderExtensions | VTL Processing API documentation",
    "keywords": "Class ServiceProviderExtensions The extensions. Inheritance System.Object ServiceProviderExtensions Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public static class ServiceProviderExtensions : object Methods GetDataModel(IServiceProvider) Gets the VTL 2.0 data model from service provider. Declaration public static IDataModelProvider GetDataModel(this IServiceProvider provider) Parameters Type Name Description IServiceProvider provider The service provider. Returns Type Description IDataModelProvider The VTL 2.0 data model. GetExpressionFactory(IServiceProvider) Gets the expression factory from the service provider. Declaration public static IExpressionFactory GetExpressionFactory(this IServiceProvider provider) Parameters Type Name Description IServiceProvider provider The service provider. Returns Type Description IExpressionFactory The expression factory. GetFrontEnd(IServiceProvider) Gets the font-end VTL 2.0 transformation schema generator from the service provider. Declaration public static ITreeGenerator GetFrontEnd(this IServiceProvider provider) Parameters Type Name Description IServiceProvider provider The service provider. Returns Type Description ITreeGenerator The front-end VTL 2.0 transformation schema generator. GetMiddleEnd(IServiceProvider) Gets the middle-end transformation schema modifier from the service provider. Declaration public static ISchemaModifiersApplier GetMiddleEnd(this IServiceProvider provider) Parameters Type Name Description IServiceProvider provider The service provider. Returns Type Description ISchemaModifiersApplier The middle-end VTL 2.0 transformation schema modifier. GetTargetRenderer(IServiceProvider, String) Gets the target renderer for the VTL 2.0 code from the service provider. Declaration public static ITargetRenderer GetTargetRenderer(this IServiceProvider provider, string name) Parameters Type Name Description IServiceProvider provider The service provider. System.String name The name of the target renderer. Returns Type Description ITargetRenderer The target renderer."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.TransformationSchemaResolver.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection.TransformationSchemaResolver.html",
    "title": "Delegate TransformationSchemaResolver | VTL Processing API documentation",
    "keywords": "Delegate TransformationSchemaResolver Initialises a new instance of the ITransformationSchema interface. Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.DependencyInjection Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public delegate ITransformationSchema TransformationSchemaResolver(); Returns Type Description ITransformationSchema Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.ExpressionFactory.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.ExpressionFactory.html",
    "title": "Class ExpressionFactory | VTL Processing API documentation",
    "keywords": "Class ExpressionFactory Factory of IExpression objects. Inheritance System.Object ExpressionFactory Implements IExpressionFactory Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public sealed class ExpressionFactory : object, IExpressionFactory Constructors ExpressionFactory(ExpressionResolver, RuleExpressionResolver, JoinExpressionResolver, OperatorResolver) Initializes a new instance of the ExpressionFactory class. Declaration public ExpressionFactory(ExpressionResolver exprResolver, RuleExpressionResolver ruleExprResolver, JoinExpressionResolver joinExprResolver, OperatorResolver opResolver) Parameters Type Name Description ExpressionResolver exprResolver The expression resolver. RuleExpressionResolver ruleExprResolver The rule expression resolver. JoinExpressionResolver joinExprResolver The join expression resolver. OperatorResolver opResolver The operator resolver. Properties ExprResolver Declaration public ExpressionResolver ExprResolver { get; } Property Value Type Description ExpressionResolver JoinExprResolver Declaration public JoinExpressionResolver JoinExprResolver { get; } Property Value Type Description JoinExpressionResolver OperatorResolver Declaration public OperatorResolver OperatorResolver { get; } Property Value Type Description OperatorResolver RuleExprResolver Declaration public RuleExpressionResolver RuleExprResolver { get; } Property Value Type Description RuleExpressionResolver Methods GetExpression(String, ExpressionFactoryNameTarget) Declaration public IExpression GetExpression(string name, ExpressionFactoryNameTarget field) Parameters Type Name Description System.String name ExpressionFactoryNameTarget field Returns Type Description IExpression Implements IExpressionFactory Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure Classes ExpressionFactory Factory of IExpression objects. ObjectsComparer Contains methods of comparing objects. Utilities Class with all-purpose methods and fields."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces Interfaces IDataModelAggregator Interface of an aggregator of data models. IEnvironmentMapper Interface of an environment names mapper. IExpressionFactory The expression factory interface. IVtlProcessingConfig The configuration of a VTL 2.0 translator interface."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces.IDataModelAggregator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces.IDataModelAggregator.html",
    "title": "Interface IDataModelAggregator | VTL Processing API documentation",
    "keywords": "Interface IDataModelAggregator Interface of an aggregator of data models. Inherited Members IDataModelProvider.GetDatasetStructure(String) Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IDataModelAggregator : IDataModelProvider Properties DataModelsCollection Gets or sets the data model collection. Declaration ICollection<IDataModelProvider> DataModelsCollection { get; set; } Property Value Type Description ICollection < IDataModelProvider > DefaultNamespace Gets or sets the default namespace name. Declaration string DefaultNamespace { get; set; } Property Value Type Description System.String EnvironmentMapper Gets the environment names mapper. Declaration IEnvironmentMapper EnvironmentMapper { get; } Property Value Type Description IEnvironmentMapper Extension Methods DataModelAggregatorExtensions.AddJsonModel(IDataModelAggregator, String) DataModelAggregatorExtensions.AddSqlServerModel(IDataModelAggregator, String) DataModelAggregatorExtensions.AddDictionaryModel(IDataModelAggregator, Action<IDictionaryModelConfiguration>, String) DataModelAggregatorExtensions.AddSdmxModel(IDataModelAggregator, String, String) Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces.IEnvironmentMapper.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces.IEnvironmentMapper.html",
    "title": "Interface IEnvironmentMapper | VTL Processing API documentation",
    "keywords": "Interface IEnvironmentMapper Interface of an environment names mapper. Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IEnvironmentMapper Properties DefaultNamespace Gets the default namespace of a data models aggregator being used. Declaration string DefaultNamespace { get; } Property Value Type Description System.String DefaultTargetPrefix Gets or sets the default target prefix used when mapping dataset name has not been found in mapping dictionary keys. Declaration string DefaultTargetPrefix { get; set; } Property Value Type Description System.String Mapping Gets or sets the mapping dictionary. Declaration Dictionary<string, string> Mapping { get; set; } Property Value Type Description Dictionary < System.String , System.String > Methods Map(String) Maps a dataset name between a data model and a physical environment. Declaration string Map(string datasetName) Parameters Type Name Description System.String datasetName The logical name of the dataset in a data model. Returns Type Description System.String The physical name of a database structure (i.e. table) in a target environment. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces.IExpressionFactory.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces.IExpressionFactory.html",
    "title": "Interface IExpressionFactory | VTL Processing API documentation",
    "keywords": "Interface IExpressionFactory The expression factory interface. Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IExpressionFactory Properties ExprResolver Gets the expression resolver. Declaration ExpressionResolver ExprResolver { get; } Property Value Type Description ExpressionResolver JoinExprResolver Gets the join expression resolver. Declaration JoinExpressionResolver JoinExprResolver { get; } Property Value Type Description JoinExpressionResolver OperatorResolver Gets the operator resolver. Declaration OperatorResolver OperatorResolver { get; } Property Value Type Description OperatorResolver RuleExprResolver Gets the rule expression resolver. Declaration RuleExpressionResolver RuleExprResolver { get; } Property Value Type Description RuleExpressionResolver Methods GetExpression(String, ExpressionFactoryNameTarget) Gets a new IExpression object with an assigned field. Declaration IExpression GetExpression(string name, ExpressionFactoryNameTarget field) Parameters Type Name Description System.String name The value to assign. ExpressionFactoryNameTarget field The field to assign the value to. Returns Type Description IExpression The new expression object. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces.IVtlProcessingConfig.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces.IVtlProcessingConfig.html",
    "title": "Interface IVtlProcessingConfig | VTL Processing API documentation",
    "keywords": "Interface IVtlProcessingConfig The configuration of a VTL 2.0 translator interface. Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IVtlProcessingConfig Properties DataModels Gets the data models aggregator. Declaration IDataModelAggregator DataModels { get; } Property Value Type Description IDataModelAggregator EnvironmentMapper Gets the environment names mapper. Declaration IEnvironmentMapper EnvironmentMapper { get; } Property Value Type Description IEnvironmentMapper RemoveDeadCode Gets or sets the value indicating whether a dead code has to be removed. Declaration bool RemoveDeadCode { get; set; } Property Value Type Description System.Boolean Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.ExpressionTextGenerator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.ExpressionTextGenerator.html",
    "title": "Class ExpressionTextGenerator | VTL Processing API documentation",
    "keywords": "Class ExpressionTextGenerator The expression text generator for expressions rebuilded in a join builder. Inheritance System.Object ExpressionTextGenerator Implements IExpressionTextGenerator Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ExpressionTextGenerator : object, IExpressionTextGenerator Methods Generate(IExpression) Declaration public void Generate(IExpression expr) Parameters Type Name Description IExpression expr GenerateRecursively(IExpression) Declaration public void GenerateRecursively(IExpression expr) Parameters Type Name Description IExpression expr Implements IExpressionTextGenerator Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder Classes ExpressionTextGenerator The expression text generator for expressions rebuilded in a join builder. JoinBuilder The \"join\" operator expressions builder."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.Interfaces Interfaces IExpressionTextGenerator Expression text generator interface for expressions rebuilded in a join builder. IJoinBuilder The \"join\" operator expressions builder interface."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.Interfaces.IExpressionTextGenerator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.Interfaces.IExpressionTextGenerator.html",
    "title": "Interface IExpressionTextGenerator | VTL Processing API documentation",
    "keywords": "Interface IExpressionTextGenerator Expression text generator interface for expressions rebuilded in a join builder. Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IExpressionTextGenerator Methods Generate(IExpression) Generates an expression text for a given expression. Declaration void Generate(IExpression expr) Parameters Type Name Description IExpression expr The expression to generate an expression text for. GenerateRecursively(IExpression) Generates an expression text for a given expression and its descendant expressions. Declaration void GenerateRecursively(IExpression expr) Parameters Type Name Description IExpression expr The expression to generate an expression text for. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.Interfaces.IJoinBuilder.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.Interfaces.IJoinBuilder.html",
    "title": "Interface IJoinBuilder | VTL Processing API documentation",
    "keywords": "Interface IJoinBuilder The \"join\" operator expressions builder interface. Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IJoinBuilder Properties Branches Gets the builder's branches dictionary. Declaration Dictionary<string, IExpression> Branches { get; } Property Value Type Description Dictionary < System.String , IExpression > IsCleared Gets a value specifying if the builder is cleared. Declaration bool IsCleared { get; } Property Value Type Description System.Boolean Item[String] Gets an expression from the builder's expressions dictionary. Declaration IExpression this[string key] { get; } Parameters Type Name Description System.String key The key of expression. Property Value Type Description IExpression The chosen expression. Methods AddBranch(String, IExpression) Adds a branch to the builder. Declaration IJoinBuilder AddBranch(string key, IExpression branch) Parameters Type Name Description System.String key The branch name. IExpression branch The expression to add. Returns Type Description IJoinBuilder Instance of the builder. AddMainExpr(IExpression) Adds a main expression to the builder. Declaration IJoinBuilder AddMainExpr(IExpression mainExpr) Parameters Type Name Description IExpression mainExpr The expression to add. Returns Type Description IJoinBuilder Instance of the builder. Build() Builds an join expression from the builder expressions. Declaration IJoinExpression Build() Returns Type Description IJoinExpression The join expression. BuildBranch(String, IExpression) Builds a branch by a given dataset expression and a branch signature. Declaration IExpression BuildBranch(string key, IExpression datasetExpr) Parameters Type Name Description System.String key The branch signature key. IExpression datasetExpr The dataset expression. Returns Type Description IExpression The \"ds\" branch expression. Clear() Clears a data of the builder. Declaration IJoinBuilder Clear() Returns Type Description IJoinBuilder Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.ApplyBranch.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.ApplyBranch.html",
    "title": "Class ApplyBranch | VTL Processing API documentation",
    "keywords": "Class ApplyBranch The \"apply\" branch of the \"join\" operator expression builded from a dataset expression. Inheritance System.Object ApplyBranch Implements IJoinBranch Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public sealed class ApplyBranch : object, IJoinBranch Constructors ApplyBranch(ExpressionResolver, IExpressionTextGenerator) Inittializes a new instance of the ApplyBranch class. Declaration public ApplyBranch(ExpressionResolver exprResolver, IExpressionTextGenerator exprTextGen) Parameters Type Name Description ExpressionResolver exprResolver The expression resolver. IExpressionTextGenerator exprTextGen The epression text generator. Properties Signature Declaration public string Signature { get; } Property Value Type Description System.String Methods Build(IExpression) Declaration public IExpression Build(IExpression datasetExpr) Parameters Type Name Description IExpression datasetExpr Returns Type Description IExpression Implements IJoinBranch Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.CalcBranch.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.CalcBranch.html",
    "title": "Class CalcBranch | VTL Processing API documentation",
    "keywords": "Class CalcBranch The \"calc\" branch of the \"join\" operator expression builded from a dataset expression. Inheritance System.Object CalcBranch Implements IJoinBranch Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public sealed class CalcBranch : object, IJoinBranch Constructors CalcBranch(IExpressionFactory, IExpressionTextGenerator) Inittializes a new instance of the CalcBranch class. Declaration public CalcBranch(IExpressionFactory exprFactory, IExpressionTextGenerator exprTextGen) Parameters Type Name Description IExpressionFactory exprFactory The expression factory. IExpressionTextGenerator exprTextGen The epression text generator. Properties Signature Declaration public string Signature { get; } Property Value Type Description System.String Methods Build(IExpression) Declaration public IExpression Build(IExpression datasetExpr) Parameters Type Name Description IExpression datasetExpr Returns Type Description IExpression Implements IJoinBranch Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.DsBranch.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.DsBranch.html",
    "title": "Class DsBranch | VTL Processing API documentation",
    "keywords": "Class DsBranch The \"ds\" branch of the \"join\" operator expression builded from a dataset expression. Inheritance System.Object DsBranch Implements IJoinBranch Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public sealed class DsBranch : object, IJoinBranch Constructors DsBranch(IExpressionFactory, IExpressionTextGenerator) Inittializes a new instance of the DsBranch class. Declaration public DsBranch(IExpressionFactory exprFactory, IExpressionTextGenerator exprTextGen) Parameters Type Name Description IExpressionFactory exprFactory The expression factory. IExpressionTextGenerator exprTextGen The epression text generator. Properties Signature Declaration public string Signature { get; } Property Value Type Description System.String Methods Build(IExpression) Declaration public IExpression Build(IExpression datasetExpr) Parameters Type Name Description IExpression datasetExpr Returns Type Description IExpression Implements IJoinBranch Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches Classes ApplyBranch The \"apply\" branch of the \"join\" operator expression builded from a dataset expression. CalcBranch The \"calc\" branch of the \"join\" operator expression builded from a dataset expression. DsBranch The \"ds\" branch of the \"join\" operator expression builded from a dataset expression. RenameBranch The \"rename\" branch of the \"join\" operator expression builded from a dataset expression. UsingBranch The \"using\" branch of the \"join\" operator expression builded from a dataset expression."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.Interfaces Interfaces IJoinBranch Interface of a branch of the \"join\" operator expression builded from a dataset expression."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.Interfaces.IJoinBranch.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.Interfaces.IJoinBranch.html",
    "title": "Interface IJoinBranch | VTL Processing API documentation",
    "keywords": "Interface IJoinBranch Interface of a branch of the \"join\" operator expression builded from a dataset expression. Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IJoinBranch Properties Signature Gets the signature of the branch. Declaration string Signature { get; } Property Value Type Description System.String Methods Build(IExpression) Builds the branch. Declaration IExpression Build(IExpression datasetExpr) Parameters Type Name Description IExpression datasetExpr The dataset expression the \"join\" operator expression has to be built from. Returns Type Description IExpression The built branch expression. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.RenameBranch.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.RenameBranch.html",
    "title": "Class RenameBranch | VTL Processing API documentation",
    "keywords": "Class RenameBranch The \"rename\" branch of the \"join\" operator expression builded from a dataset expression. Inheritance System.Object RenameBranch Implements IJoinBranch Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public sealed class RenameBranch : object, IJoinBranch Constructors RenameBranch(IExpressionFactory, IExpressionTextGenerator) Inittializes a new instance of the RenameBranch class. Declaration public RenameBranch(IExpressionFactory exprFactory, IExpressionTextGenerator exprTextGen) Parameters Type Name Description IExpressionFactory exprFactory The expression factory. IExpressionTextGenerator exprTextGen The epression text generator. Properties Signature Declaration public string Signature { get; } Property Value Type Description System.String Methods Build(IExpression) Declaration public IExpression Build(IExpression datasetExpr) Parameters Type Name Description IExpression datasetExpr Returns Type Description IExpression Implements IJoinBranch Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.UsingBranch.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches.UsingBranch.html",
    "title": "Class UsingBranch | VTL Processing API documentation",
    "keywords": "Class UsingBranch The \"using\" branch of the \"join\" operator expression builded from a dataset expression. Inheritance System.Object UsingBranch Implements IJoinBranch Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBranches Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public sealed class UsingBranch : object, IJoinBranch Constructors UsingBranch(IExpressionFactory) Inittializes a new instance of the UsingBranch class. Declaration public UsingBranch(IExpressionFactory exprFactory) Parameters Type Name Description IExpressionFactory exprFactory The expression factory. Properties Signature Declaration public string Signature { get; } Property Value Type Description System.String Methods Build(IExpression) Declaration public IExpression Build(IExpression datasetExpr) Parameters Type Name Description IExpression datasetExpr Returns Type Description IExpression Implements IJoinBranch Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBuilder.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder.JoinBuilder.html",
    "title": "Class JoinBuilder | VTL Processing API documentation",
    "keywords": "Class JoinBuilder The \"join\" operator expressions builder. Inheritance System.Object JoinBuilder Implements IJoinBuilder Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure.JoinBuilder Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public sealed class JoinBuilder : object, IJoinBuilder Constructors JoinBuilder(JoinExpressionResolver, IEnumerable<IJoinBranch>) Initializes a new instance of the JoinBuilder class. Declaration public JoinBuilder(JoinExpressionResolver joinExprResolver, IEnumerable<IJoinBranch> joinBranches) Parameters Type Name Description JoinExpressionResolver joinExprResolver The join expression resolver. IEnumerable < IJoinBranch > joinBranches The join branches collection. Properties Branches Declaration public Dictionary<string, IExpression> Branches { get; } Property Value Type Description Dictionary < System.String , IExpression > IsCleared Declaration public bool IsCleared { get; } Property Value Type Description System.Boolean Item[String] Declaration public IExpression this[string key] { get; } Parameters Type Name Description System.String key Property Value Type Description IExpression Methods AddBranch(String, IExpression) Declaration public IJoinBuilder AddBranch(string key, IExpression branch) Parameters Type Name Description System.String key IExpression branch Returns Type Description IJoinBuilder AddMainExpr(IExpression) Declaration public IJoinBuilder AddMainExpr(IExpression mainExpr) Parameters Type Name Description IExpression mainExpr Returns Type Description IJoinBuilder Build() Declaration public IJoinExpression Build() Returns Type Description IJoinExpression BuildBranch(String, IExpression) Declaration public IExpression BuildBranch(string key, IExpression datasetExpr) Parameters Type Name Description System.String key IExpression datasetExpr Returns Type Description IExpression Clear() Declaration public IJoinBuilder Clear() Returns Type Description IJoinBuilder Implements IJoinBuilder Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.ObjectsComparer.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.ObjectsComparer.html",
    "title": "Class ObjectsComparer | VTL Processing API documentation",
    "keywords": "Class ObjectsComparer Contains methods of comparing objects. Inheritance System.Object ObjectsComparer Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public static class ObjectsComparer : object Methods EqualsObj(ICollection<StructureComponent>, ICollection<StructureComponent>) Checks if the component collection is equal to another. Method skips a names comparison. Declaration public static bool EqualsObj(this ICollection<StructureComponent> instance, ICollection<StructureComponent> collection) Parameters Type Name Description ICollection < StructureComponent > instance The compared collection. ICollection < StructureComponent > collection The collection to compare. Returns Type Description System.Boolean Value specyfing an equality. EqualsObj(IDataStructure, IDataStructure) Checks if the dataset is equal to another. Method skips a names comparison. Declaration public static bool EqualsObj(this IDataStructure instance, IDataStructure structure) Parameters Type Name Description IDataStructure instance The compared dataset. IDataStructure structure The dataset to compare. Returns Type Description System.Boolean Value specyfing an equality. EqualsObj(StructureComponent, StructureComponent) Checks if the component is equal to another. Method skips a names comparison. Declaration public static bool EqualsObj(this StructureComponent instance, StructureComponent component) Parameters Type Name Description StructureComponent instance The compared component. StructureComponent component The component to compare. Returns Type Description System.Boolean Value specyfing an equality. EqualsObj(BasicDataType, BasicDataType, Boolean, Boolean) Checks if the data type is equal to another. Declaration public static bool EqualsObj(this BasicDataType instance, BasicDataType dataType, bool allNumsEqual = true, bool allEqualsToNull = true) Parameters Type Name Description BasicDataType instance The compared data type. BasicDataType dataType The data type to compare. System.Boolean allNumsEqual Specifies if an integer data type is equal to a number data type. System.Boolean allEqualsToNull Specifies if a none data type is equal to other. Returns Type Description System.Boolean Value specyfing equality. EqualsObj(ValueDomain, ValueDomain, Boolean, Boolean) Checks if the value domain is equal to another. Method skips a names comparison. Declaration public static bool EqualsObj(this ValueDomain instance, ValueDomain valueDomain, bool allNumsEqual = false, bool allEqualsToNull = false) Parameters Type Name Description ValueDomain instance The compared value domain. ValueDomain valueDomain The value domain to compare. System.Boolean allNumsEqual Specifies if an integer data type is equal to a number data type. System.Boolean allEqualsToNull Specifies if a none data type is equal to other. Returns Type Description System.Boolean Value specyfing equality."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Utilities.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Infrastructure.Utilities.html",
    "title": "Class Utilities | VTL Processing API documentation",
    "keywords": "Class Utilities Class with all-purpose methods and fields. Inheritance System.Object Utilities Namespace : StatisticsPoland.VtlProcessing.Core.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public static class Utilities : object Methods GetName(Enum) Gets the name of an field. Declaration public static string GetName(this Enum instance) Parameters Type Name Description Enum instance The enum field to get the name from. Returns Type Description System.String The name of an enum field. GetVariableName(BasicDataType) Gets the variable name of a basic data type. Declaration public static string GetVariableName(this BasicDataType instance) Parameters Type Name Description BasicDataType instance The basic data type to get a variable name from. Returns Type Description System.String The variable name of a basic data type. In<T>(T, T[]) Checks if an instance is equal to any of params objects. Declaration public static bool In<T>(this T instance, params T[] args) Parameters Type Name Description T instance The checking instance. T[] args Objects to compare with the instance. Returns Type Description System.Boolean Result of comparing. Type Parameters Name Description T Space(Int32) Returns a string of whitespaces in a given amount. Declaration public static string Space(int space) Parameters Type Name Description System.Int32 space The amount of whitespaces. Returns Type Description System.String String of whitespaces."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Interfaces Interfaces ITranslatorConfig Interface of a VTL 2.0 translator representation configuration."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Interfaces.ITranslatorConfig.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Interfaces.ITranslatorConfig.html",
    "title": "Interface ITranslatorConfig | VTL Processing API documentation",
    "keywords": "Interface ITranslatorConfig Interface of a VTL 2.0 translator representation configuration. Namespace : StatisticsPoland.VtlProcessing.Core.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface ITranslatorConfig Properties RemoveDeadCode Gets or sets the value indicating whether a dead code has to be removed. Declaration bool RemoveDeadCode { get; set; } Property Value Type Description System.Boolean Targets Gets the targets collection. Declaration TargetsCollection Targets { get; } Property Value Type Description TargetsCollection Methods AddLogging(Action<ILoggingBuilder>) Adds logging services. Declaration void AddLogging(Action<ILoggingBuilder> config) Parameters Type Name Description Action < ILoggingBuilder > config The configuration delegate. AddTarget(Type, IServiceCollection) Adds a target to the target collection and injects its depentent services. Declaration void AddTarget(Type targetType, IServiceCollection services = null) Parameters Type Name Description Type targetType The target type. IServiceCollection services The services to inject. ClearTargets() Clears the target collection but not removes dependent sevices of these targets. Declaration void ClearTargets() RemoveTarget(ITargetRenderer) Removes a target from the collection but not removes its dependent sevices. Declaration void RemoveTarget(ITargetRenderer target) Parameters Type Name Description ITargetRenderer target The target to remove. Extension Methods TranslatorConfigExtensions.AddTsqlTarget(ITranslatorConfig, Action<ITargetBuilder>) TranslatorConfigExtensions.AddPlantUmlTarget(ITranslatorConfig, Action<ITargetBuilder>) Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.DeadCodeModifier.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.DeadCodeModifier.html",
    "title": "Class DeadCodeModifier | VTL Processing API documentation",
    "keywords": "Class DeadCodeModifier Modifier removing a dead code. Inheritance System.Object DeadCodeModifier Implements ISchemaModifier Namespace : StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DeadCodeModifier : object, ISchemaModifier Methods Modify(ITransformationSchema) Performs removing a dead code for a transformation schema. Declaration public void Modify(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema The transformation schema to modify. Implements ISchemaModifier Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.DsOperatorsToJoinsModifier.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.DsOperatorsToJoinsModifier.html",
    "title": "Class DsOperatorsToJoinsModifier | VTL Processing API documentation",
    "keywords": "Class DsOperatorsToJoinsModifier Modifier replacing dataset operator expressions to \"join\" operators. Inheritance System.Object DsOperatorsToJoinsModifier Implements ISchemaModifier Namespace : StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DsOperatorsToJoinsModifier : object, ISchemaModifier Constructors DsOperatorsToJoinsModifier(IExpressionFactory, JoinExpressionResolver, IJoinBuilder) Initializes a new instance of the DsOperatorsToJoinsModifier class. Declaration public DsOperatorsToJoinsModifier(IExpressionFactory exprFactory, JoinExpressionResolver joinExprResolver, IJoinBuilder builder) Parameters Type Name Description IExpressionFactory exprFactory The expression factory. JoinExpressionResolver joinExprResolver The \"join\" expression resolver. IJoinBuilder builder The join builder. Methods Modify(ITransformationSchema) Performs replacing dataset operators to \"join\" operators. Declaration public void Modify(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema The schema to modify. Implements ISchemaModifier Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers Classes DeadCodeModifier Modifier removing a dead code. DsOperatorsToJoinsModifier Modifier replacing dataset operator expressions to \"join\" operators. JoinUsingFillingModifier Modifier putting \"using\" branches to \"inner\" and \"left\" \"join\" operator expressions that do not contain them. SchemaModifiersApplier Applier of a complex transformation of a VTL 2.0 transformation schema. TypeInferenceModifier Modifier performing a type inference."
  },
  "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.Interfaces Interfaces ISchemaModifier The VTL 2.0 transformation schema modifier interfafce. ISchemaModifiersApplier Interface of an apllier of a complex transformation of a VTL 2.0 transformation schema."
  },
  "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.Interfaces.ISchemaModifier.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.Interfaces.ISchemaModifier.html",
    "title": "Interface ISchemaModifier | VTL Processing API documentation",
    "keywords": "Interface ISchemaModifier The VTL 2.0 transformation schema modifier interfafce. Namespace : StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface ISchemaModifier Methods Modify(ITransformationSchema) Performs a modification for a schema. Declaration void Modify(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema The schema to modify. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.Interfaces.ISchemaModifiersApplier.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.Interfaces.ISchemaModifiersApplier.html",
    "title": "Interface ISchemaModifiersApplier | VTL Processing API documentation",
    "keywords": "Interface ISchemaModifiersApplier Interface of an apllier of a complex transformation of a VTL 2.0 transformation schema. Namespace : StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface ISchemaModifiersApplier Methods Process(ITransformationSchema) Performs processing of a schema. Declaration void Process(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema The schema object to be processed. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.JoinUsingFillingModifier.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.JoinUsingFillingModifier.html",
    "title": "Class JoinUsingFillingModifier | VTL Processing API documentation",
    "keywords": "Class JoinUsingFillingModifier Modifier putting \"using\" branches to \"inner\" and \"left\" \"join\" operator expressions that do not contain them. Inheritance System.Object JoinUsingFillingModifier Implements ISchemaModifier Namespace : StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinUsingFillingModifier : object, ISchemaModifier Constructors JoinUsingFillingModifier(IJoinBuilder) Initializes a new instance of the JoinUsingFillingModifier class. Declaration public JoinUsingFillingModifier(IJoinBuilder builder) Parameters Type Name Description IJoinBuilder builder The builder for modifier. Methods Modify(ITransformationSchema) Performs putting \"using\" branches to \"inner\" and \"left\" \"join\" operator expressions that do not contain them. Declaration public void Modify(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema The schema to modify. Implements ISchemaModifier Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.SchemaModifiersApplier.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.SchemaModifiersApplier.html",
    "title": "Class SchemaModifiersApplier | VTL Processing API documentation",
    "keywords": "Class SchemaModifiersApplier Applier of a complex transformation of a VTL 2.0 transformation schema. Inheritance System.Object SchemaModifiersApplier Implements ISchemaModifiersApplier Namespace : StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class SchemaModifiersApplier : object, ISchemaModifiersApplier Constructors SchemaModifiersApplier(IEnumerable<ISchemaModifier>, ILogger<ISchemaModifiersApplier>) Initializes a new instance of the SchemaModifiersApplier class. Declaration public SchemaModifiersApplier(IEnumerable<ISchemaModifier> mods, ILogger<ISchemaModifiersApplier> logger = null) Parameters Type Name Description IEnumerable < ISchemaModifier > mods The collection of modifiers to apply. ILogger < ISchemaModifiersApplier > logger The errors logger. Methods Process(ITransformationSchema) Performs processing of the schema. Declaration public void Process(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema The schema object to be processed. Implements ISchemaModifiersApplier Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.TypeInferenceModifier.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers.TypeInferenceModifier.html",
    "title": "Class TypeInferenceModifier | VTL Processing API documentation",
    "keywords": "Class TypeInferenceModifier Modifier performing a type inference. Inheritance System.Object TypeInferenceModifier Implements ISchemaModifier Namespace : StatisticsPoland.VtlProcessing.Core.MiddleEnd.Modifiers Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class TypeInferenceModifier : object, ISchemaModifier Constructors TypeInferenceModifier(OperatorResolver, IDataModelProvider) Initializes a new instance of the TypeInferenceModifier class. Declaration public TypeInferenceModifier(OperatorResolver opResolver, IDataModelProvider dataModel) Parameters Type Name Description OperatorResolver opResolver The operator resolver. IDataModelProvider dataModel The data model. Methods Modify(ITransformationSchema) Performs a type inference for the schema. Declaration public void Modify(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema The schema to modify. Implements ISchemaModifier Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Utilities.ComponentTypeInference.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Utilities.ComponentTypeInference.html",
    "title": "Class ComponentTypeInference | VTL Processing API documentation",
    "keywords": "Class ComponentTypeInference Infers basic data types of components. Inheritance System.Object ComponentTypeInference Implements IComponentTypeInference Namespace : StatisticsPoland.VtlProcessing.Core.MiddleEnd.Utilities Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ComponentTypeInference : object, IComponentTypeInference Constructors ComponentTypeInference(DataStructureResolver) Initialises a new instance of the ComponentTypeInference class. Declaration public ComponentTypeInference(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Methods InferTypeOfComponent(IExpression, Nullable<ComponentType>) Declaration public BasicDataType InferTypeOfComponent(IExpression expr, ComponentType? componentType = null) Parameters Type Name Description IExpression expr System.Nullable < ComponentType > componentType Returns Type Description BasicDataType Implements IComponentTypeInference Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Utilities.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Utilities.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.MiddleEnd.Utilities | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.MiddleEnd.Utilities Classes ComponentTypeInference Infers basic data types of components. JoinOperators The class containing operator collections that dataset expressions of one of them operator are convertible to \"join\" operator expressions. NumericStructure The extension methods for numeric structures."
  },
  "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Utilities.JoinOperators.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Utilities.JoinOperators.html",
    "title": "Class JoinOperators | VTL Processing API documentation",
    "keywords": "Class JoinOperators The class containing operator collections that dataset expressions of one of them operator are convertible to \"join\" operator expressions. Inheritance System.Object JoinOperators Namespace : StatisticsPoland.VtlProcessing.Core.MiddleEnd.Utilities Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public static class JoinOperators : object Properties ComparisonOperators Gets comparison operators array that expressions of one of them operator are convertible to \"join\" operator expressions. Declaration public static string[] ComparisonOperators { get; } Property Value Type Description System.String [] Operators Gets operator array that expressions of one of them operator are convertible to \"join\" operator expressions. Declaration public static string[] Operators { get; } Property Value Type Description System.String []"
  },
  "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Utilities.NumericStructure.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.MiddleEnd.Utilities.NumericStructure.html",
    "title": "Class NumericStructure | VTL Processing API documentation",
    "keywords": "Class NumericStructure The extension methods for numeric structures. Inheritance System.Object NumericStructure Namespace : StatisticsPoland.VtlProcessing.Core.MiddleEnd.Utilities Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public static class NumericStructure : object Methods GetDatasetScalarMixedStructure(IDataStructure, IDataStructure) Gets a fused structure from a given dataset and a scalar. Declaration public static IDataStructure GetDatasetScalarMixedStructure(IDataStructure dataset, IDataStructure scalar) Parameters Type Name Description IDataStructure dataset The dataset. IDataStructure scalar The scalar. Returns Type Description IDataStructure The data structure. GetDatasetsMixedStructure(IDataStructure, IDataStructure) Gets a fused structure from a given super dataset and a sub dataset. Declaration public static IDataStructure GetDatasetsMixedStructure(IDataStructure superset, IDataStructure subset) Parameters Type Name Description IDataStructure superset The super dataset. IDataStructure subset The subset. Returns Type Description IDataStructure The data structure. IsNumericStructure(IDataStructure, Boolean) Check if a given structure is a numeric structure. Declaration public static bool IsNumericStructure(this IDataStructure structure, bool allowNulls = false) Parameters Type Name Description IDataStructure structure The structure to check. System.Boolean allowNulls Specifies if nulls are equal to numerics. Returns Type Description System.Boolean Value indicating if a given structure is a numeric structure."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.AssignmentObject.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.AssignmentObject.html",
    "title": "Class AssignmentObject | VTL Processing API documentation",
    "keywords": "Class AssignmentObject Contains informations of a VTL 2.0 expression assignment object. Inheritance System.Object AssignmentObject Namespace : StatisticsPoland.VtlProcessing.Core.Models Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class AssignmentObject : object Constructors AssignmentObject(ITransformationSchema, IExpression, Boolean, ICollection<String>) Initialises a new instance of the AssignmentObject class. Declaration public AssignmentObject(ITransformationSchema schema, IExpression expression, bool isPersistentAssignment, ICollection<string> refsNames) Parameters Type Name Description ITransformationSchema schema The transformation schema the assignment object is assigned to. IExpression expression The expression to assign to assignment object. System.Boolean isPersistentAssignment The value indicating whether the assignment is persistent. ICollection < System.String > refsNames The collection of assignment objects names that this instance's expression contains. Properties ContainingSchema Gets or sets the transformation schema containing this assignment object. Declaration public ITransformationSchema ContainingSchema { get; set; } Property Value Type Description ITransformationSchema Expression Gets or sets the expression assigned to the instance. Declaration public IExpression Expression { get; set; } Property Value Type Description IExpression IsPersistentAssignment Gets the value indicating whether the assignment is persistent. Declaration public bool IsPersistentAssignment { get; } Property Value Type Description System.Boolean Name Gets the name of the assignment object. Declaration public string Name { get; } Property Value Type Description System.String Users Gets the collection of assignment objects that uses this instance. Declaration public ICollection<AssignmentObject> Users { get; } Property Value Type Description ICollection < AssignmentObject > Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.AssignmentObjectCollection.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.AssignmentObjectCollection.html",
    "title": "Class AssignmentObjectCollection | VTL Processing API documentation",
    "keywords": "Class AssignmentObjectCollection The collection of AssignmentObject . Inheritance System.Object AssignmentObjectCollection Namespace : StatisticsPoland.VtlProcessing.Core.Models Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public sealed class AssignmentObjectCollection : ICollection<AssignmentObject> Constructors AssignmentObjectCollection() Initialises a new instance of the AssignmentObjectCollection class. Declaration public AssignmentObjectCollection() Properties Count Declaration public int Count { get; } Property Value Type Description System.Int32 IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean Item[Int32] Declaration public AssignmentObject this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description AssignmentObject Item[String] Declaration public AssignmentObject this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description AssignmentObject Methods Add(AssignmentObject) Declaration public void Add(AssignmentObject item) Parameters Type Name Description AssignmentObject item Clear() Declaration public void Clear() Contains(AssignmentObject) Declaration public bool Contains(AssignmentObject item) Parameters Type Name Description AssignmentObject item Returns Type Description System.Boolean CopyTo(AssignmentObject[], Int32) Declaration public void CopyTo(AssignmentObject[] array, int arrayIndex) Parameters Type Name Description AssignmentObject [] array System.Int32 arrayIndex GetEnumerator() Declaration public IEnumerator<AssignmentObject> GetEnumerator() Returns Type Description IEnumerator < AssignmentObject > Remove(AssignmentObject) Declaration public bool Remove(AssignmentObject item) Parameters Type Name Description AssignmentObject item Returns Type Description System.Boolean RemoveAll(Predicate<AssignmentObject>) Removes all the elements that match the conditions defined by the specified predicate. Declaration public void RemoveAll(Predicate<AssignmentObject> match) Parameters Type Name Description Predicate < AssignmentObject > match ToArray() Creates an array from a < AssignmentObject >. Declaration public AssignmentObject[] ToArray() Returns Type Description AssignmentObject [] The array of assignment objects. ToList() Creates a < AssignmentObject > from a < AssignmentObject >. Declaration public List<AssignmentObject> ToList() Returns Type Description List < AssignmentObject > The list of assignment objects. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Models | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Models Classes AssignmentObject Contains informations of a VTL 2.0 expression assignment object. AssignmentObjectCollection The collection of AssignmentObject . StructureComponent The VTL 2.0 structure component representation. ValueDomain The VTL 2.0 value domain representation."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Models.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Models.Interfaces Interfaces IDataModelProvider The VTL 2.0 data model interface. IDataStructure The VTL 2.0 expression data structure representation interface. IExpression The single VTL 2.0 expression representation interface. IJoinExpression The single VTL 2.0 \"join\" operator expression representation interface. IRuleExpression The single VTL 2.0 ruie expression representation interface. IRuleset The VTL 2.0 ruleset representation interface. ITransformationSchema The VTL 2.0 transformation schema representation interface."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IDataModelProvider.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IDataModelProvider.html",
    "title": "Interface IDataModelProvider | VTL Processing API documentation",
    "keywords": "Interface IDataModelProvider The VTL 2.0 data model interface. Namespace : StatisticsPoland.VtlProcessing.Core.Models.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IDataModelProvider Properties DefaultNamespace Gets the default namespace name. Declaration string DefaultNamespace { get; } Property Value Type Description System.String Methods GetDatasetStructure(String) Gets the dataset structure. Declaration IDataStructure GetDatasetStructure(string datasetName) Parameters Type Name Description System.String datasetName The name of the dataset. Returns Type Description IDataStructure The dataset structure. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IDataStructure.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IDataStructure.html",
    "title": "Interface IDataStructure | VTL Processing API documentation",
    "keywords": "Interface IDataStructure The VTL 2.0 expression data structure representation interface. Namespace : StatisticsPoland.VtlProcessing.Core.Models.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IDataStructure Properties Components Gets all components. Declaration IList<StructureComponent> Components { get; } Property Value Type Description IList < StructureComponent > DatasetName Gets or sets the dataset name. Declaration string DatasetName { get; set; } Property Value Type Description System.String DatasetType Gets or sets the dataset type. Declaration DatasetType DatasetType { get; set; } Property Value Type Description DatasetType Identifiers Gets or sets identifier components. Declaration IList<StructureComponent> Identifiers { get; set; } Property Value Type Description IList < StructureComponent > IsSingleComponent Gets the value indicating if the data structure is a single component. Declaration bool IsSingleComponent { get; } Property Value Type Description System.Boolean Measures Gets or sets measure components. Declaration IList<StructureComponent> Measures { get; set; } Property Value Type Description IList < StructureComponent > NonViralAttributes Gets or sets non viral attribute components. Declaration IList<StructureComponent> NonViralAttributes { get; set; } Property Value Type Description IList < StructureComponent > ViralAttributes Gets or sets viral attribute components. Declaration IList<StructureComponent> ViralAttributes { get; set; } Property Value Type Description IList < StructureComponent > Methods AddStructure(IDataStructure) Adds a structure to this data structure. Resets the name of the structure. Declaration void AddStructure(IDataStructure structure) Parameters Type Name Description IDataStructure structure The structure to add. GetCopy(Boolean) Gets the copy of this data structure. Declaration IDataStructure GetCopy(bool copyName = false) Parameters Type Name Description System.Boolean copyName Specifies if copy the name of the data structure. Returns Type Description IDataStructure The copy of this data structure. IsSupersetOf(IDataStructure, Boolean, Boolean, Boolean) Checks if this dataset is a superset of a given dataset. Declaration bool IsSupersetOf(IDataStructure structure, bool checkMeasures = false, bool checkAttributes = false, bool allowNulls = false) Parameters Type Name Description IDataStructure structure The dataset to compare. System.Boolean checkMeasures Specifies if measures should be checked. System.Boolean checkAttributes Specifies if viral attributes should be checked. System.Boolean allowNulls Specifies if null values are equal to every type. It doesn't apply to identifiers. Returns Type Description System.Boolean The value indicating if it's a superset. RemoveComponentDuplicates() Removes component duplicates of the same component types, data types and names. Declaration void RemoveComponentDuplicates() RemoveComponentDuplicates(IDataStructure) Removes component duplicates of the same names and different component types. Declaration void RemoveComponentDuplicates(IDataStructure duplicatesDataStructure) Parameters Type Name Description IDataStructure duplicatesDataStructure The source of component duplicates WithAttributesOf(IDataStructure) Adds attributes of a given data structure and returns a new instance. Declaration IDataStructure WithAttributesOf(IDataStructure dataStructure) Parameters Type Name Description IDataStructure dataStructure The structure with attributes to add. Returns Type Description IDataStructure The datastructure. Extension Methods ObjectsComparer.EqualsObj(IDataStructure, IDataStructure) Utilities.In<T>(T, T[]) NumericStructure.IsNumericStructure(IDataStructure, Boolean)"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression.html",
    "title": "Interface IExpression | VTL Processing API documentation",
    "keywords": "Interface IExpression The single VTL 2.0 expression representation interface. Namespace : StatisticsPoland.VtlProcessing.Core.Models.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IExpression Properties ContainingSchema Gets or sets the transformation schema containing this expression. Declaration ITransformationSchema ContainingSchema { get; set; } Property Value Type Description ITransformationSchema CurrentJoinExpr Gets the \"join\" expression that this expression is inside it. Declaration IJoinExpression CurrentJoinExpr { get; } Property Value Type Description IJoinExpression ExpressionText Gets or sets the expression defining text. Declaration string ExpressionText { get; set; } Property Value Type Description System.String IsApplyComponent Gets the value indicating whether this instance is a component of the \"apply\" branch of a \"join\" operator. Declaration bool IsApplyComponent { get; } Property Value Type Description System.Boolean IsScalar Gets the value indicating whether this instance is scalar. Declaration bool IsScalar { get; } Property Value Type Description System.Boolean LineNumber Gets or sets the expression line number. Declaration int LineNumber { get; set; } Property Value Type Description System.Int32 Operands Gets the operands dictionary. Declaration IDictionary<string, IExpression> Operands { get; } Property Value Type Description IDictionary < System.String , IExpression > OperandsCollection Gets or sets the operands collection. The field is assignable, but methods changing the collection instance shall not work. Declaration ICollection<IExpression> OperandsCollection { get; set; } Property Value Type Description ICollection < IExpression > OperatorDefinition Gets the operator definition. Declaration IOperatorDefinition OperatorDefinition { get; set; } Property Value Type Description IOperatorDefinition OperatorSymbol Gets or sets the operator symbol. Declaration string OperatorSymbol { get; } Property Value Type Description System.String ParamSignature Gets or sets the parameter signature. Declaration string ParamSignature { get; set; } Property Value Type Description System.String ParentExpression Gets the parent expression of this expression. Declaration IExpression ParentExpression { get; set; } Property Value Type Description IExpression ReferenceExpression Gets the expression that this expression is reference to. Declaration IExpression ReferenceExpression { get; set; } Property Value Type Description IExpression ResultMappedName Gets or sets the name on a storage of the result mapped to. Declaration string ResultMappedName { get; set; } Property Value Type Description System.String ResultName Gets or sets the name of the intermediate result of operand. Declaration string ResultName { get; set; } Property Value Type Description System.String Structure Gets or sets the structure. Declaration IDataStructure Structure { get; set; } Property Value Type Description IDataStructure Methods AddOperand(String, IExpression) Adds a new expression to this instance's operands dictionary. Declaration void AddOperand(string signature, IExpression expression) Parameters Type Name Description System.String signature The signature of an expression in the dictionary. IExpression expression The expression. GetDescendantExprs(String) Gets the collection of descendant expressions with a given result name. Declaration ICollection<IExpression> GetDescendantExprs(string resultName) Parameters Type Name Description System.String resultName The result name of descendant expressions to get. Returns Type Description ICollection < IExpression > The collection of descendant expressions with a given result name. GetFirstAncestorExpr() Gets the first ancestor expression. Declaration IExpression GetFirstAncestorExpr() Returns Type Description IExpression The first ancestor expression. GetFirstAncestorExpr(String) Gets the first ancestor expression with a given result name. Declaration IExpression GetFirstAncestorExpr(string resultName) Parameters Type Name Description System.String resultName The result name of the ancestor expression to get. Returns Type Description IExpression The first ancestor expression with a given result name. SetContainingSchema(ITransformationSchema) Sets the containing schema of this expression and its operands. Declaration void SetContainingSchema(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema The schema instance. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IJoinExpression.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IJoinExpression.html",
    "title": "Interface IJoinExpression | VTL Processing API documentation",
    "keywords": "Interface IJoinExpression The single VTL 2.0 \"join\" operator expression representation interface. Inherited Members IExpression.ExpressionText IExpression.ResultName IExpression.ResultMappedName IExpression.OperatorSymbol IExpression.ParamSignature IExpression.IsScalar IExpression.IsApplyComponent IExpression.LineNumber IExpression.ContainingSchema IExpression.ParentExpression IExpression.CurrentJoinExpr IExpression.ReferenceExpression IExpression.Structure IExpression.OperatorDefinition IExpression.OperandsCollection IExpression.Operands IExpression.AddOperand(String, IExpression) IExpression.SetContainingSchema(ITransformationSchema) IExpression.GetFirstAncestorExpr() IExpression.GetFirstAncestorExpr(String) IExpression.GetDescendantExprs(String) Namespace : StatisticsPoland.VtlProcessing.Core.Models.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IJoinExpression : IExpression Properties BasicStructure Gets or sets the basic structure. Declaration IDataStructure BasicStructure { get; set; } Property Value Type Description IDataStructure Methods GetAliasesSignatures(String) Gets aliases signatures whose structures contains a component with a given name. The signature expression must be a \"get\", \"ref\", or \"join\" operator expression. Declaration string[] GetAliasesSignatures(string compName = null) Parameters Type Name Description System.String compName The name of the component. Returns Type Description System.String [] Names of signatures. GetAliasExpression(String) Gets the alias expression with a given name. Declaration IExpression GetAliasExpression(string name) Parameters Type Name Description System.String name The name of the alias. Returns Type Description IExpression The alias expression. GetSubsetAliasStructure() Gets the structure of the alias, whose structure is a subset of others. Declaration IDataStructure GetSubsetAliasStructure() Returns Type Description IDataStructure The structure of the alias, whose structure is a subset of others. GetSupersetAliasStructure() Gets the structure of the alias, whose structure is a superset of others. Declaration IDataStructure GetSupersetAliasStructure() Returns Type Description IDataStructure The structure of the alias, whose structure is a superset of others. IsPartOfBranch(String, IExpression) Checks if the expression is part of a branch with a given name. Declaration bool IsPartOfBranch(string branchName, IExpression expr) Parameters Type Name Description System.String branchName The name of the branch. IExpression expr The expression. Returns Type Description System.Boolean Value specifying if the expression is part of a branch with a given name. Extension Methods JoinExpressionExtensions.GetAliasExprWithId(IJoinExpression, String) JoinExpressionExtensions.GetAliasExprWithMeasure(IJoinExpression, String) JoinExpressionExtensions.GettAliasExprWithViralAttribute(IJoinExpression, String) Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IRuleExpression.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IRuleExpression.html",
    "title": "Interface IRuleExpression | VTL Processing API documentation",
    "keywords": "Interface IRuleExpression The single VTL 2.0 ruie expression representation interface. Inherited Members IExpression.ExpressionText IExpression.ResultName IExpression.ResultMappedName IExpression.OperatorSymbol IExpression.ParamSignature IExpression.IsScalar IExpression.IsApplyComponent IExpression.LineNumber IExpression.ContainingSchema IExpression.ParentExpression IExpression.CurrentJoinExpr IExpression.ReferenceExpression IExpression.Structure IExpression.OperatorDefinition IExpression.OperandsCollection IExpression.Operands IExpression.AddOperand(String, IExpression) IExpression.SetContainingSchema(ITransformationSchema) IExpression.GetFirstAncestorExpr() IExpression.GetFirstAncestorExpr(String) IExpression.GetDescendantExprs(String) Namespace : StatisticsPoland.VtlProcessing.Core.Models.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IRuleExpression : IExpression Properties ContainingRuleset Gets or sets the ruleset containing this rule expression. Declaration IRuleset ContainingRuleset { get; set; } Property Value Type Description IRuleset ErrorCode Gets or sets the error code. Declaration string ErrorCode { get; set; } Property Value Type Description System.String ErrorLevel Gets or sets the error level. Declaration int? ErrorLevel { get; set; } Property Value Type Description System.Nullable < System.Int32 > Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IRuleset.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IRuleset.html",
    "title": "Interface IRuleset | VTL Processing API documentation",
    "keywords": "Interface IRuleset The VTL 2.0 ruleset representation interface. Namespace : StatisticsPoland.VtlProcessing.Core.Models.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IRuleset Properties Name Gets or sets the name of the ruleset. Declaration string Name { get; set; } Property Value Type Description System.String Rules Gets or sets the rules dictionary. Declaration Dictionary<string, IRuleExpression> Rules { get; set; } Property Value Type Description Dictionary < System.String , IRuleExpression > RulesCollection Gets or sets the rules collection. The field is assignable, but methods changing the collection instance shall not work. Declaration ICollection<IRuleExpression> RulesCollection { get; set; } Property Value Type Description ICollection < IRuleExpression > RulesetText Gets or sets the ruleset defining text. Declaration string RulesetText { get; set; } Property Value Type Description System.String Structure Gets or sets the structure. Declaration IDataStructure Structure { get; set; } Property Value Type Description IDataStructure ValueDomains Gets or sets the mapped value domains collection. Declaration Dictionary<string, ValueDomain> ValueDomains { get; set; } Property Value Type Description Dictionary < System.String , ValueDomain > Variables Gets or sets the mapped variables collection. Declaration Dictionary<string, string> Variables { get; set; } Property Value Type Description Dictionary < System.String , System.String > Methods InferStructure() Infers types of the ruleset structure. Declaration void InferStructure() Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.ITransformationSchema.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Interfaces.ITransformationSchema.html",
    "title": "Interface ITransformationSchema | VTL Processing API documentation",
    "keywords": "Interface ITransformationSchema The VTL 2.0 transformation schema representation interface. Namespace : StatisticsPoland.VtlProcessing.Core.Models.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface ITransformationSchema Properties AssignmentObjects Gets the assignment objects collection. Declaration AssignmentObjectCollection AssignmentObjects { get; } Property Value Type Description AssignmentObjectCollection Rulesets Gets the rulesets collection. Declaration ICollection<IRuleset> Rulesets { get; } Property Value Type Description ICollection < IRuleset > Methods GetExpressions() Gets the VTL expressions collection. Declaration ICollection<IExpression> GetExpressions() Returns Type Description ICollection < IExpression > The VTL expressions collection. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.DatapointRuleset.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.DatapointRuleset.html",
    "title": "Class DatapointRuleset | VTL Processing API documentation",
    "keywords": "Class DatapointRuleset The VTL 2.0 datapoint ruleset representation. Inheritance System.Object DatapointRuleset Implements IRuleset Namespace : StatisticsPoland.VtlProcessing.Core.Models.Logical Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DatapointRuleset : object, IRuleset Constructors DatapointRuleset(String, String, DataStructureResolver) Initialises a new instance of the DatapointRuleset class. Declaration public DatapointRuleset(string name, string rulesetText, DataStructureResolver dsResolver) Parameters Type Name Description System.String name The name of the ruleset. System.String rulesetText The text of the ruleset. DataStructureResolver dsResolver The data structure resolver. Properties Name Declaration public string Name { get; set; } Property Value Type Description System.String Rules Declaration public Dictionary<string, IRuleExpression> Rules { get; set; } Property Value Type Description Dictionary < System.String , IRuleExpression > RulesCollection Declaration public ICollection<IRuleExpression> RulesCollection { get; set; } Property Value Type Description ICollection < IRuleExpression > RulesetText Declaration public string RulesetText { get; set; } Property Value Type Description System.String Structure Declaration public IDataStructure Structure { get; set; } Property Value Type Description IDataStructure ValueDomains Declaration public Dictionary<string, ValueDomain> ValueDomains { get; set; } Property Value Type Description Dictionary < System.String , ValueDomain > Variables Declaration public Dictionary<string, string> Variables { get; set; } Property Value Type Description Dictionary < System.String , System.String > Methods InferStructure() Declaration public void InferStructure() Implements IRuleset Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.DataStructure.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.DataStructure.html",
    "title": "Class DataStructure | VTL Processing API documentation",
    "keywords": "Class DataStructure The VTL 2.0 expression data structure representation. Inheritance System.Object DataStructure Implements IDataStructure Namespace : StatisticsPoland.VtlProcessing.Core.Models.Logical Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DataStructure : object, IDataStructure Constructors DataStructure(ILogger<IDataStructure>) Initializes a new instance of the DataStructure class. Declaration public DataStructure(ILogger<IDataStructure> logger = null) Parameters Type Name Description ILogger < IDataStructure > logger The errors logger. DataStructure(String, ComponentType, BasicDataType, ILogger<IDataStructure>) Initializes a new instance of the DataStructure class for a single component structure. . Declaration public DataStructure(string compName, ComponentType compType, BasicDataType dataType, ILogger<IDataStructure> logger = null) Parameters Type Name Description System.String compName The name of the component. ComponentType compType The component type. BasicDataType dataType The data type of the component. ILogger < IDataStructure > logger The errors logger. Properties Components Declaration public IList<StructureComponent> Components { get; } Property Value Type Description IList < StructureComponent > DatasetName Declaration public string DatasetName { get; set; } Property Value Type Description System.String DatasetType Declaration public DatasetType DatasetType { get; set; } Property Value Type Description DatasetType Identifiers Declaration public IList<StructureComponent> Identifiers { get; set; } Property Value Type Description IList < StructureComponent > IsSingleComponent Declaration public bool IsSingleComponent { get; } Property Value Type Description System.Boolean Measures Declaration public IList<StructureComponent> Measures { get; set; } Property Value Type Description IList < StructureComponent > NonViralAttributes Declaration public IList<StructureComponent> NonViralAttributes { get; set; } Property Value Type Description IList < StructureComponent > ViralAttributes Declaration public IList<StructureComponent> ViralAttributes { get; set; } Property Value Type Description IList < StructureComponent > Methods AddStructure(IDataStructure) Declaration public void AddStructure(IDataStructure structure) Parameters Type Name Description IDataStructure structure GetCopy(Boolean) Declaration public IDataStructure GetCopy(bool copyName = false) Parameters Type Name Description System.Boolean copyName Returns Type Description IDataStructure IsSupersetOf(IDataStructure, Boolean, Boolean, Boolean) Declaration public bool IsSupersetOf(IDataStructure structure, bool checkMeasures = false, bool checkAttributes = false, bool allowNulls = false) Parameters Type Name Description IDataStructure structure System.Boolean checkMeasures System.Boolean checkAttributes System.Boolean allowNulls Returns Type Description System.Boolean RemoveComponentDuplicates() Declaration public void RemoveComponentDuplicates() RemoveComponentDuplicates(IDataStructure) Declaration public void RemoveComponentDuplicates(IDataStructure duplicatesDataStructure) Parameters Type Name Description IDataStructure duplicatesDataStructure WithAttributesOf(IDataStructure) Declaration public IDataStructure WithAttributesOf(IDataStructure dataStructure) Parameters Type Name Description IDataStructure dataStructure Returns Type Description IDataStructure Implements IDataStructure Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.Expression.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.Expression.html",
    "title": "Class Expression | VTL Processing API documentation",
    "keywords": "Class Expression The single VTL 2.0 expression representation. Inheritance System.Object Expression JoinExpression RuleExpression Implements IExpression Namespace : StatisticsPoland.VtlProcessing.Core.Models.Logical Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class Expression : object, IExpression Constructors Expression(IExpression) Initialises a new instance of the Expression class. Declaration public Expression(IExpression parentExpr = null) Parameters Type Name Description IExpression parentExpr The parent expression. Properties ContainingSchema Declaration public ITransformationSchema ContainingSchema { get; set; } Property Value Type Description ITransformationSchema CurrentJoinExpr Declaration public IJoinExpression CurrentJoinExpr { get; } Property Value Type Description IJoinExpression ExpressionText Declaration public string ExpressionText { get; set; } Property Value Type Description System.String IsApplyComponent Declaration public bool IsApplyComponent { get; } Property Value Type Description System.Boolean IsScalar Declaration public bool IsScalar { get; } Property Value Type Description System.Boolean LineNumber Declaration public int LineNumber { get; set; } Property Value Type Description System.Int32 Operands Declaration public IDictionary<string, IExpression> Operands { get; } Property Value Type Description IDictionary < System.String , IExpression > OperandsCollection Declaration public ICollection<IExpression> OperandsCollection { get; set; } Property Value Type Description ICollection < IExpression > OperatorDefinition Declaration public IOperatorDefinition OperatorDefinition { get; set; } Property Value Type Description IOperatorDefinition OperatorSymbol Declaration public string OperatorSymbol { get; } Property Value Type Description System.String ParamSignature Declaration public string ParamSignature { get; set; } Property Value Type Description System.String ParentExpression Declaration public IExpression ParentExpression { get; set; } Property Value Type Description IExpression ReferenceExpression Declaration public IExpression ReferenceExpression { get; set; } Property Value Type Description IExpression ResultMappedName Declaration public string ResultMappedName { get; set; } Property Value Type Description System.String ResultName Declaration public string ResultName { get; set; } Property Value Type Description System.String Structure Declaration public IDataStructure Structure { get; set; } Property Value Type Description IDataStructure Methods AddOperand(String, IExpression) Declaration public void AddOperand(string signature, IExpression expression) Parameters Type Name Description System.String signature IExpression expression GetDescendantExprs(String) Declaration public ICollection<IExpression> GetDescendantExprs(string resultName) Parameters Type Name Description System.String resultName Returns Type Description ICollection < IExpression > GetFirstAncestorExpr() Declaration public IExpression GetFirstAncestorExpr() Returns Type Description IExpression GetFirstAncestorExpr(String) Declaration public IExpression GetFirstAncestorExpr(string resultName) Parameters Type Name Description System.String resultName Returns Type Description IExpression SetContainingSchema(ITransformationSchema) Declaration public void SetContainingSchema(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema Implements IExpression Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Models.Logical | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Models.Logical Classes DatapointRuleset The VTL 2.0 datapoint ruleset representation. DataStructure The VTL 2.0 expression data structure representation. Expression The single VTL 2.0 expression representation. JoinExpression The single VTL 2.0 \"join\" operator expression representation. RuleExpression The single VTL 2.0 ruie expression representation. TransformationSchema The VTL 2.0 transformation schema representation."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.JoinExpression.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.JoinExpression.html",
    "title": "Class JoinExpression | VTL Processing API documentation",
    "keywords": "Class JoinExpression The single VTL 2.0 \"join\" operator expression representation. Inheritance System.Object Expression JoinExpression Implements IJoinExpression IExpression Inherited Members Expression.ExpressionText Expression.ResultName Expression.ResultMappedName Expression.OperatorSymbol Expression.ParamSignature Expression.IsScalar Expression.IsApplyComponent Expression.LineNumber Expression.ContainingSchema Expression.ParentExpression Expression.CurrentJoinExpr Expression.ReferenceExpression Expression.Structure Expression.OperatorDefinition Expression.OperandsCollection Expression.Operands Expression.AddOperand(String, IExpression) Expression.SetContainingSchema(ITransformationSchema) Expression.GetFirstAncestorExpr() Expression.GetFirstAncestorExpr(String) Expression.GetDescendantExprs(String) Namespace : StatisticsPoland.VtlProcessing.Core.Models.Logical Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinExpression : Expression, IJoinExpression, IExpression Constructors JoinExpression(IExpression) Initialises a new instance of the JoinExpression class. Declaration public JoinExpression(IExpression expression) Parameters Type Name Description IExpression expression The base expression with a \"join\" operator. Properties BasicStructure Declaration public IDataStructure BasicStructure { get; set; } Property Value Type Description IDataStructure Methods GetAliasesSignatures(String) Declaration public string[] GetAliasesSignatures(string compName = null) Parameters Type Name Description System.String compName Returns Type Description System.String [] GetAliasExpression(String) Declaration public IExpression GetAliasExpression(string name) Parameters Type Name Description System.String name Returns Type Description IExpression GetSubsetAlias(ICollection<IExpression>) Gets the alias expression, whose structure is a subset of others. Declaration public static IExpression GetSubsetAlias(ICollection<IExpression> aliasExprs) Parameters Type Name Description ICollection < IExpression > aliasExprs The collection of alias expressions. Returns Type Description IExpression The alias expression, whose structure is a subset of others. GetSubsetAliasStructure() Declaration public IDataStructure GetSubsetAliasStructure() Returns Type Description IDataStructure GetSupersetAlias(ICollection<IExpression>) Gets the alias expression, whose structure is a superset of others. Declaration public static IExpression GetSupersetAlias(ICollection<IExpression> aliasExprs) Parameters Type Name Description ICollection < IExpression > aliasExprs The collection of alias expressions. Returns Type Description IExpression The alias expression, whose structure is a superset of others. GetSupersetAliasStructure() Declaration public IDataStructure GetSupersetAliasStructure() Returns Type Description IDataStructure IsPartOfBranch(String, IExpression) Declaration public bool IsPartOfBranch(string branchName, IExpression expr) Parameters Type Name Description System.String branchName IExpression expr Returns Type Description System.Boolean Implements IJoinExpression IExpression Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.RuleExpression.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.RuleExpression.html",
    "title": "Class RuleExpression | VTL Processing API documentation",
    "keywords": "Class RuleExpression The single VTL 2.0 ruie expression representation. Inheritance System.Object Expression RuleExpression Implements IRuleExpression IExpression Inherited Members Expression.ExpressionText Expression.ResultName Expression.ResultMappedName Expression.OperatorSymbol Expression.ParamSignature Expression.IsScalar Expression.IsApplyComponent Expression.LineNumber Expression.ContainingSchema Expression.ParentExpression Expression.CurrentJoinExpr Expression.ReferenceExpression Expression.Structure Expression.OperatorDefinition Expression.OperandsCollection Expression.Operands Expression.AddOperand(String, IExpression) Expression.SetContainingSchema(ITransformationSchema) Expression.GetFirstAncestorExpr() Expression.GetFirstAncestorExpr(String) Expression.GetDescendantExprs(String) Namespace : StatisticsPoland.VtlProcessing.Core.Models.Logical Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class RuleExpression : Expression, IRuleExpression, IExpression Constructors RuleExpression(IExpression, IRuleset, String, Nullable<Int32>) Initialises a new instance of the RuleExpression class. Declaration public RuleExpression(IExpression expression, IRuleset containingRuleset, string errorCode = null, int? errorLevel = null) Parameters Type Name Description IExpression expression The base expression. IRuleset containingRuleset The ruleset containing this rule expression. System.String errorCode The error code. System.Nullable < System.Int32 > errorLevel The error level. Properties ContainingRuleset Declaration public IRuleset ContainingRuleset { get; set; } Property Value Type Description IRuleset ErrorCode Declaration public string ErrorCode { get; set; } Property Value Type Description System.String ErrorLevel Declaration public int? ErrorLevel { get; set; } Property Value Type Description System.Nullable < System.Int32 > Implements IRuleExpression IExpression Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.TransformationSchema.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Logical.TransformationSchema.html",
    "title": "Class TransformationSchema | VTL Processing API documentation",
    "keywords": "Class TransformationSchema The VTL 2.0 transformation schema representation. Inheritance System.Object TransformationSchema Implements ITransformationSchema Namespace : StatisticsPoland.VtlProcessing.Core.Models.Logical Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class TransformationSchema : object, ITransformationSchema Constructors TransformationSchema() Initialises a new instance of the TransformationSchema class. Declaration public TransformationSchema() Properties AssignmentObjects Declaration public AssignmentObjectCollection AssignmentObjects { get; } Property Value Type Description AssignmentObjectCollection Rulesets Declaration public ICollection<IRuleset> Rulesets { get; } Property Value Type Description ICollection < IRuleset > Methods GetExpressions() Declaration public ICollection<IExpression> GetExpressions() Returns Type Description ICollection < IExpression > Implements ITransformationSchema Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.StructureComponent.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.StructureComponent.html",
    "title": "Class StructureComponent | VTL Processing API documentation",
    "keywords": "Class StructureComponent The VTL 2.0 structure component representation. Inheritance System.Object StructureComponent Namespace : StatisticsPoland.VtlProcessing.Core.Models Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class StructureComponent : object Constructors StructureComponent() Initialises a new instance of the StructureComponent class. Declaration public StructureComponent() StructureComponent(BasicDataType, String, ComponentType) Initialises a new instance of the StructureComponent class. Declaration public StructureComponent(BasicDataType dataType, string name = \"VALUE\", ComponentType compType = default(ComponentType)) Parameters Type Name Description BasicDataType dataType The data type. System.String name The component name. ComponentType compType The component type. StructureComponent(ValueDomain, String, ComponentType) Initialises a new instance of the StructureComponent class. Declaration public StructureComponent(ValueDomain valueDomain, string name = \"VALUE\", ComponentType compType = default(ComponentType)) Parameters Type Name Description ValueDomain valueDomain The value domain. System.String name The component name. ComponentType compType The component type. Properties BaseComponentName Gets or sets the base name of the component. Declaration public string BaseComponentName { get; set; } Property Value Type Description System.String ComponentName Gets or sets the name of the component. Declaration public string ComponentName { get; set; } Property Value Type Description System.String ComponentType Gets or sets the type of the component. Declaration public ComponentType ComponentType { get; set; } Property Value Type Description ComponentType MappedName Gets or sets the component name on the target storage. Declaration public string MappedName { get; set; } Property Value Type Description System.String ValueDomain Gets or sets the value domain. Declaration public ValueDomain ValueDomain { get; set; } Property Value Type Description ValueDomain Extension Methods ObjectsComparer.EqualsObj(StructureComponent, StructureComponent) Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Types.BasicDataType.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Types.BasicDataType.html",
    "title": "Enum BasicDataType | VTL Processing API documentation",
    "keywords": "Enum BasicDataType The VTL 2.0 basic data types. Namespace : StatisticsPoland.VtlProcessing.Core.Models.Types Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public enum BasicDataType : int Fields Name Description Boolean The boolean value, possible true or false. Date The single date. Duration The length of a time interval. Integer The number without a fractional component. None The type not determined (the null value). Number The fixed or floating point number. String The character sequence. Time The date range. TimePeriod Time intervals having a regular duration. Extension Methods ObjectsComparer.EqualsObj(BasicDataType, Boolean, Boolean) Utilities.In<BasicDataType>(BasicDataType[]) Utilities.GetVariableName()"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Types.ComponentType.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Types.ComponentType.html",
    "title": "Enum ComponentType | VTL Processing API documentation",
    "keywords": "Enum ComponentType VTL 2.0 dataset components types. Namespace : StatisticsPoland.VtlProcessing.Core.Models.Types Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public enum ComponentType : int Fields Name Description Identifier The identifier component. Measure The measure component. NonViralAttribute The non-viral attribute component. ViralAttribute The viral attribute component. Extension Methods Utilities.In<ComponentType>(ComponentType[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Types.DatasetType.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Types.DatasetType.html",
    "title": "Enum DatasetType | VTL Processing API documentation",
    "keywords": "Enum DatasetType Data structure types. Namespace : StatisticsPoland.VtlProcessing.Core.Models.Types Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public enum DatasetType : int Fields Name Description Pivoted The pivoted structure. Regular The regular structure. Extension Methods Utilities.In<DatasetType>(DatasetType[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Types.ErrorType.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Types.ErrorType.html",
    "title": "Enum ErrorType | VTL Processing API documentation",
    "keywords": "Enum ErrorType VTL 2.0 error types. Namespace : StatisticsPoland.VtlProcessing.Core.Models.Types Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public enum ErrorType : int Fields Name Description Common The VTL common error. Operator The VTL operator error. Syntax The VTL syntax error. Target The VTL target error. Extension Methods Utilities.In<ErrorType>(ErrorType[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Types.ExpressionFactoryNameTarget.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Types.ExpressionFactoryNameTarget.html",
    "title": "Enum ExpressionFactoryNameTarget | VTL Processing API documentation",
    "keywords": "Enum ExpressionFactoryNameTarget The expression factory target where a name should be assigned to. Namespace : StatisticsPoland.VtlProcessing.Core.Models.Types Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public enum ExpressionFactoryNameTarget : int Fields Name Description OperatorSymbol The assignation to an expression's operator symbol. ResultName The assignation to an expression's result name. Extension Methods Utilities.In<ExpressionFactoryNameTarget>(ExpressionFactoryNameTarget[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.Types.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.Types.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Models.Types | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Models.Types Enums BasicDataType The VTL 2.0 basic data types. ComponentType VTL 2.0 dataset components types. DatasetType Data structure types. ErrorType VTL 2.0 error types. ExpressionFactoryNameTarget The expression factory target where a name should be assigned to."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Models.ValueDomain.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Models.ValueDomain.html",
    "title": "Class ValueDomain | VTL Processing API documentation",
    "keywords": "Class ValueDomain The VTL 2.0 value domain representation. Inheritance System.Object ValueDomain Namespace : StatisticsPoland.VtlProcessing.Core.Models Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ValueDomain : object Constructors ValueDomain(BasicDataType, String) Initializes a new instance of the ValueDomain class. Declaration public ValueDomain(BasicDataType dataType, string signature = null) Parameters Type Name Description BasicDataType dataType The type of the data. System.String signature The domain signature. ValueDomain(String) Initializes a new instance of the ValueDomain class for value domains of basic data types. . Declaration public ValueDomain(string signature) Parameters Type Name Description System.String signature The domain signature. Properties DataType Gets or sets the type of the data. Declaration public BasicDataType DataType { get; } Property Value Type Description BasicDataType Signature Gets or sets the signature of value domain. Declaration public string Signature { get; } Property Value Type Description System.String Extension Methods ObjectsComparer.EqualsObj(ValueDomain, ValueDomain, Boolean, Boolean) Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Modifiers.Utilities.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Modifiers.Utilities.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Modifiers.Utilities.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Modifiers.Utilities.Interfaces Interfaces IComponentTypeInference The component type inference interface."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Modifiers.Utilities.Interfaces.IComponentTypeInference.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Modifiers.Utilities.Interfaces.IComponentTypeInference.html",
    "title": "Interface IComponentTypeInference | VTL Processing API documentation",
    "keywords": "Interface IComponentTypeInference The component type inference interface. Namespace : StatisticsPoland.VtlProcessing.Core.Modifiers.Utilities.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IComponentTypeInference Methods InferTypeOfComponent(IExpression, Nullable<ComponentType>) Infers a basic data type of the component. Declaration BasicDataType InferTypeOfComponent(IExpression expr, ComponentType? componentType = null) Parameters Type Name Description IExpression expr The component expression. System.Nullable < ComponentType > componentType The type of a component. Returns Type Description BasicDataType The basic data type type of a component. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.AggrFunctionOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.AggrFunctionOperator.html",
    "title": "Class AggrFunctionOperator | VTL Processing API documentation",
    "keywords": "Class AggrFunctionOperator The \"Aggregation function\" operator definition. Inheritance System.Object AggrFunctionOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class AggrFunctionOperator : object, IOperatorDefinition Constructors AggrFunctionOperator(IJoinApplyMeasuresOperator, DataStructureResolver) Initialises a new instance of the AggrFunctionOperator class. Declaration public AggrFunctionOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp, DataStructureResolver dsResolver) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Symbols Gets operator symbols using a dataset clause operator. Declaration public static string[] Symbols { get; } Property Value Type Description System.String [] Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.AggrOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.AggrOperator.html",
    "title": "Class AggrOperator | VTL Processing API documentation",
    "keywords": "Class AggrOperator The \"Aggregation\" operator definition. Inheritance System.Object AggrOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class AggrOperator : object, IOperatorDefinition Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.AnalyticFunctionOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.AnalyticFunctionOperator.html",
    "title": "Class AnalyticFunctionOperator | VTL Processing API documentation",
    "keywords": "Class AnalyticFunctionOperator The \"Analytic function\" operator definition. Inheritance System.Object AnalyticFunctionOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class AnalyticFunctionOperator : object, IOperatorDefinition Constructors AnalyticFunctionOperator(IJoinApplyMeasuresOperator, DataStructureResolver) Initialises a new instance of the AnalyticFunctionOperator class. Declaration public AnalyticFunctionOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp, DataStructureResolver dsResolver) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Symbols Gets operator symbols of analytic operators. Declaration public static string[] Symbols { get; } Property Value Type Description System.String [] Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.ArithmeticOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.ArithmeticOperator.html",
    "title": "Class ArithmeticOperator | VTL Processing API documentation",
    "keywords": "Class ArithmeticOperator The \"Arithmetic\" operator definition. Inheritance System.Object ArithmeticOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ArithmeticOperator : object, IOperatorDefinition Constructors ArithmeticOperator(IJoinApplyMeasuresOperator) Initialises a new instance of the ArithmeticOperator class. Declaration public ArithmeticOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.CalcExprOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.CalcExprOperator.html",
    "title": "Class CalcExprOperator | VTL Processing API documentation",
    "keywords": "Class CalcExprOperator The \"Calc expression\" operator definition. Inheritance System.Object CompCreateOperator CalcExprOperator Implements IOperatorDefinition Inherited Members CompCreateOperator.Keyword CompCreateOperator.GetOutputStructure(IExpression) Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class CalcExprOperator : CompCreateOperator, IOperatorDefinition Constructors CalcExprOperator(DataStructureResolver) Initialises a new instance of the CalcExprOperator class. Declaration public CalcExprOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.CollectionOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.CollectionOperator.html",
    "title": "Class CollectionOperator | VTL Processing API documentation",
    "keywords": "Class CollectionOperator The \"Collection\" operator definition. Inheritance System.Object CollectionOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class CollectionOperator : object, IOperatorDefinition Constructors CollectionOperator(DataStructureResolver) Initialises a new instance of the CollectionOperator class. Declaration public CollectionOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.ComponentManagement.CompCollectorOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.ComponentManagement.CompCollectorOperator.html",
    "title": "Class CompCollectorOperator | VTL Processing API documentation",
    "keywords": "Class CompCollectorOperator Definition of an operator that collects components from operand expressions of its epxression. Inheritance System.Object CompCollectorOperator GroupOperator OrderOperator PartitionOperator CalcOperator RenameOperator SubspaceOperator Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.ComponentManagement Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class CompCollectorOperator : object Constructors CompCollectorOperator(DataStructureResolver, String) Initialises a new instance of the CompCollectorOperator class. Declaration public CompCollectorOperator(DataStructureResolver dsResolver, string name) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. System.String name The name of a main operator. Methods GetOutputStructure(IExpression) Gets the structure of the resulting operator parameter for specified operands. Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression The expression. Returns Type Description IDataStructure A dynamically defined structure of the output parameter for the given input parameters. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.ComponentManagement.CompCreateOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.ComponentManagement.CompCreateOperator.html",
    "title": "Class CompCreateOperator | VTL Processing API documentation",
    "keywords": "Class CompCreateOperator Definition of an operator that expressions creates new components. Inheritance System.Object CompCreateOperator CalcExprOperator Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.ComponentManagement Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class CompCreateOperator : object Constructors CompCreateOperator(DataStructureResolver, String) Initialises a new instance of the CompCreateOperator class. Declaration public CompCreateOperator(DataStructureResolver dsResolver, string name) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. System.String name The name of a main operator. Properties Keyword Gets or sets the operator keyword. Declaration public string Keyword { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Gets the structure of the resulting operator parameter for specified operands. Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression The expression. Returns Type Description IDataStructure A dynamically defined structure of the output parameter for the given input parameters. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.ComponentManagement.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.ComponentManagement.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.ComponentManagement | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.ComponentManagement Classes CompCollectorOperator Definition of an operator that collects components from operand expressions of its epxression. CompCreateOperator Definition of an operator that expressions creates new components. JoinApplyMeasuresOperator Definition of component version of any operator."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.ComponentManagement.JoinApplyMeasuresOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.ComponentManagement.JoinApplyMeasuresOperator.html",
    "title": "Class JoinApplyMeasuresOperator | VTL Processing API documentation",
    "keywords": "Class JoinApplyMeasuresOperator Definition of component version of any operator. Inheritance System.Object JoinApplyMeasuresOperator Implements IJoinApplyMeasuresOperator Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.ComponentManagement Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinApplyMeasuresOperator : object, IJoinApplyMeasuresOperator Constructors JoinApplyMeasuresOperator(IExpressionFactory, DataStructureResolver) Initialises a new instance of the JoinApplyMeasuresOperator class. Declaration public JoinApplyMeasuresOperator(IExpressionFactory exprFac, DataStructureResolver dsResolver) Parameters Type Name Description IExpressionFactory exprFac The expression factory. DataStructureResolver dsResolver The data structure resolver. Methods GetMeasuresStructure(IExpression) Declaration public IDataStructure GetMeasuresStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IJoinApplyMeasuresOperator Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.DatasetClauseOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.DatasetClauseOperator.html",
    "title": "Class DatasetClauseOperator | VTL Processing API documentation",
    "keywords": "Class DatasetClauseOperator The \"Dataset clause\" operator definition. Inheritance System.Object DatasetClauseOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class DatasetClauseOperator : object, IOperatorDefinition Properties ClauseNames Gets non-root result names of expressions using in a dataset clause operator. Declaration public static string[] ClauseNames { get; } Property Value Type Description System.String [] Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.GroupOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.GroupOperator.html",
    "title": "Class GroupOperator | VTL Processing API documentation",
    "keywords": "Class GroupOperator The \"Group\" operator definition. Inheritance System.Object CompCollectorOperator GroupOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class GroupOperator : CompCollectorOperator, IOperatorDefinition Constructors GroupOperator(DataStructureResolver) Initialises a new instance of the GroupOperator class. Declaration public GroupOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary Classes CalcExprOperator The \"Calc expression\" operator definition. CollectionOperator The \"Collection\" operator definition. DatasetClauseOperator The \"Dataset clause\" operator definition. GroupOperator The \"Group\" operator definition. OrderOperator The \"Order\" operator definition. PartitionOperator The \"Partition\" operator definition class. RenameExprOperator The \"Rename expression\" operator definition. SubspaceExprOperator The \"Subspace expression\" operator definition. WhenOperator The \"When\" operator definition."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.OrderOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.OrderOperator.html",
    "title": "Class OrderOperator | VTL Processing API documentation",
    "keywords": "Class OrderOperator The \"Order\" operator definition. Inheritance System.Object CompCollectorOperator OrderOperator Implements IOperatorDefinition Inherited Members CompCollectorOperator.GetOutputStructure(IExpression) Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class OrderOperator : CompCollectorOperator, IOperatorDefinition Constructors OrderOperator(DataStructureResolver) Initialises a new instance of the OrderOperator class. Declaration public OrderOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.PartitionOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.PartitionOperator.html",
    "title": "Class PartitionOperator | VTL Processing API documentation",
    "keywords": "Class PartitionOperator The \"Partition\" operator definition class. Inheritance System.Object CompCollectorOperator PartitionOperator Implements IOperatorDefinition Inherited Members CompCollectorOperator.GetOutputStructure(IExpression) Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class PartitionOperator : CompCollectorOperator, IOperatorDefinition Constructors PartitionOperator(DataStructureResolver) Initialises a new instance of the PartitionOperator class. Declaration public PartitionOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.RenameExprOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.RenameExprOperator.html",
    "title": "Class RenameExprOperator | VTL Processing API documentation",
    "keywords": "Class RenameExprOperator The \"Rename expression\" operator definition. Inheritance System.Object RenameExprOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class RenameExprOperator : object, IOperatorDefinition Constructors RenameExprOperator(DataStructureResolver) Initialises a new instance of the RenameExprOperator class. Declaration public RenameExprOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.SubspaceExprOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.SubspaceExprOperator.html",
    "title": "Class SubspaceExprOperator | VTL Processing API documentation",
    "keywords": "Class SubspaceExprOperator The \"Subspace expression\" operator definition. Inheritance System.Object SubspaceExprOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class SubspaceExprOperator : object, IOperatorDefinition Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.WhenOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary.WhenOperator.html",
    "title": "Class WhenOperator | VTL Processing API documentation",
    "keywords": "Class WhenOperator The \"When\" operator definition. Inheritance System.Object WhenOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Auxiliary Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class WhenOperator : object, IOperatorDefinition Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.BetweenOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.BetweenOperator.html",
    "title": "Class BetweenOperator | VTL Processing API documentation",
    "keywords": "Class BetweenOperator The \"Between\" operator definition. Inheritance System.Object BetweenOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class BetweenOperator : object, IOperatorDefinition Constructors BetweenOperator(IJoinApplyMeasuresOperator, DataStructureResolver) Initialises a new instance of the BetweenOperator class. Declaration public BetweenOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp, DataStructureResolver dsResolver) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.BooleanOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.BooleanOperator.html",
    "title": "Class BooleanOperator | VTL Processing API documentation",
    "keywords": "Class BooleanOperator The \"Boolean\" operator definition. Inheritance System.Object BooleanOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class BooleanOperator : object, IOperatorDefinition Constructors BooleanOperator(IJoinApplyMeasuresOperator, DataStructureResolver) Initialises a new instance of the BooleanOperator class. Declaration public BooleanOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp, DataStructureResolver dsResolver) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.CalcOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.CalcOperator.html",
    "title": "Class CalcOperator | VTL Processing API documentation",
    "keywords": "Class CalcOperator The \"Calculation of a Component\" operator definition. Inheritance System.Object CompCollectorOperator CalcOperator Implements IOperatorDefinition Inherited Members CompCollectorOperator.GetOutputStructure(IExpression) Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class CalcOperator : CompCollectorOperator, IOperatorDefinition Constructors CalcOperator(DataStructureResolver) Initialises a new instance of the CalcOperator class. Declaration public CalcOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.CheckDatapointOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.CheckDatapointOperator.html",
    "title": "Class CheckDatapointOperator | VTL Processing API documentation",
    "keywords": "Class CheckDatapointOperator The \"Check datapoint\" operator definition. Inheritance System.Object CheckDatapointOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class CheckDatapointOperator : object, IOperatorDefinition Constructors CheckDatapointOperator(DataStructureResolver, IExpressionFactory) Initialises a new instance of the CheckDatapointOperator class. Declaration public CheckDatapointOperator(DataStructureResolver dsResolver, IExpressionFactory exprFac) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. IExpressionFactory exprFac The expression factory. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.ComparisonOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.ComparisonOperator.html",
    "title": "Class ComparisonOperator | VTL Processing API documentation",
    "keywords": "Class ComparisonOperator The \"Comparison\" operator definition. Inheritance System.Object ComparisonOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ComparisonOperator : object, IOperatorDefinition Constructors ComparisonOperator(IJoinApplyMeasuresOperator, DataStructureResolver) Initialises a new instance of the ComparisonOperator class. Declaration public ComparisonOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp, DataStructureResolver dsResolver) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.ComponentOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.ComponentOperator.html",
    "title": "Class ComponentOperator | VTL Processing API documentation",
    "keywords": "Class ComponentOperator The \"Component\" operator definition. Inheritance System.Object ComponentOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ComponentOperator : object, IOperatorDefinition Constructors ComponentOperator(DataStructureResolver, IComponentTypeInference) Initialises a new instance of the ComponentOperator class. Declaration public ComponentOperator(DataStructureResolver dsResolver, IComponentTypeInference compTypeInference) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. IComponentTypeInference compTypeInference The component type inferencer. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.ConstantOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.ConstantOperator.html",
    "title": "Class ConstantOperator | VTL Processing API documentation",
    "keywords": "Class ConstantOperator The \"Constant\" operator definition. Inheritance System.Object ConstantOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ConstantOperator : object, IOperatorDefinition Constructors ConstantOperator(DataStructureResolver) Initialises a new instance of the ConstantOperator class. Declaration public ConstantOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.CurrentDateOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.CurrentDateOperator.html",
    "title": "Class CurrentDateOperator | VTL Processing API documentation",
    "keywords": "Class CurrentDateOperator The \"Current date\" operator definition. Inheritance System.Object CurrentDateOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class CurrentDateOperator : object, IOperatorDefinition Constructors CurrentDateOperator(DataStructureResolver) Initialises a new instance of the CurrentDateOperator class. Declaration public CurrentDateOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.ExistsInOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.ExistsInOperator.html",
    "title": "Class ExistsInOperator | VTL Processing API documentation",
    "keywords": "Class ExistsInOperator The \"Exists in\" operator definition. Inheritance System.Object ExistsInOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ExistsInOperator : object, IOperatorDefinition Constructors ExistsInOperator(DataStructureResolver) Initialises a new instance of the ExistsInOperator class. Declaration public ExistsInOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.GetOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.GetOperator.html",
    "title": "Class GetOperator | VTL Processing API documentation",
    "keywords": "Class GetOperator The \"Get\" operator definition. Inheritance System.Object GetOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class GetOperator : object, IOperatorDefinition Constructors GetOperator(IDataModelProvider) Initialises a new instance of the GetOperator class. Declaration public GetOperator(IDataModelProvider dataModel) Parameters Type Name Description IDataModelProvider dataModel Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Operators | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Operators Classes AggrFunctionOperator The \"Aggregation function\" operator definition. AggrOperator The \"Aggregation\" operator definition. AnalyticFunctionOperator The \"Analytic function\" operator definition. ArithmeticOperator The \"Arithmetic\" operator definition. BetweenOperator The \"Between\" operator definition. BooleanOperator The \"Boolean\" operator definition. CalcOperator The \"Calculation of a Component\" operator definition. CheckDatapointOperator The \"Check datapoint\" operator definition. ComparisonOperator The \"Comparison\" operator definition. ComponentOperator The \"Component\" operator definition. ConstantOperator The \"Constant\" operator definition. CurrentDateOperator The \"Current date\" operator definition. ExistsInOperator The \"Exists in\" operator definition. GetOperator The \"Get\" operator definition. IfThenElseOperator The \"If-Then-Else\" operator definition. InOperator The \"Element of\" operator definition. IsNullOperator The \"Isnull\" operator definition. JoinOperator The \"Join\" operator definition. KeepDropOperator The \"Maintaining/Removing Components\" operator definition. MatchCharactersOperator The \"Match characters\" operator definition. MembershipOperator The \"Membership\" operator definition. NumericOperator The \"Numeric\" operator definition. NvlOperator The \"Nvl\" operator definition. OptionalOperator The \"Optional\" operator definition. PeriodIndicatorOperator The \"Period indicator\" operator definition. PivotOperator The \"Pivoting\" operator definition. ReferenceOperator The \"Reference\" operator definition. RenameOperator The \"Change of Component name\" operator definition. SetOperator The \"Set\" operator definition. StringOperator The \"String\" operator definition. SubspaceOperator The \"Subspace\" operator definition. TimeOperator The \"Time\" operator definition. UnaryArithmeticOperator The \"Unary arithmetic\" operator definition. UnpivotOperator The \"Unpivoting\" operator definition."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.IfThenElseOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.IfThenElseOperator.html",
    "title": "Class IfThenElseOperator | VTL Processing API documentation",
    "keywords": "Class IfThenElseOperator The \"If-Then-Else\" operator definition. Inheritance System.Object IfThenElseOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class IfThenElseOperator : object, IOperatorDefinition Constructors IfThenElseOperator(IJoinApplyMeasuresOperator, DataStructureResolver) Initialises a new instance of the IfThenElseOperator class. Declaration public IfThenElseOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp, DataStructureResolver dsResolver) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.InOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.InOperator.html",
    "title": "Class InOperator | VTL Processing API documentation",
    "keywords": "Class InOperator The \"Element of\" operator definition. Inheritance System.Object InOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class InOperator : object, IOperatorDefinition Constructors InOperator(IJoinApplyMeasuresOperator, DataStructureResolver) Initialises a new instance of the InOperator class. Declaration public InOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp, DataStructureResolver dsResolver) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Operators.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Operators.Interfaces Interfaces IJoinApplyMeasuresOperator Definition of a component version of any operator interface. IOperatorDefinition The operator definition interface."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Interfaces.IJoinApplyMeasuresOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Interfaces.IJoinApplyMeasuresOperator.html",
    "title": "Interface IJoinApplyMeasuresOperator | VTL Processing API documentation",
    "keywords": "Interface IJoinApplyMeasuresOperator Definition of a component version of any operator interface. Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IJoinApplyMeasuresOperator Methods GetMeasuresStructure(IExpression) Gets the structure of the resulting component version of an operator parameter for a given expression. Declaration IDataStructure GetMeasuresStructure(IExpression expression) Parameters Type Name Description IExpression expression The expression. Returns Type Description IDataStructure A dynamically defined structure. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.Interfaces.IOperatorDefinition.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.Interfaces.IOperatorDefinition.html",
    "title": "Interface IOperatorDefinition | VTL Processing API documentation",
    "keywords": "Interface IOperatorDefinition The operator definition interface. Namespace : StatisticsPoland.VtlProcessing.Core.Operators.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface IOperatorDefinition Properties Keyword Gets or sets the operator keyword. Declaration string Keyword { get; set; } Property Value Type Description System.String Name Gets the name of operator. Declaration string Name { get; } Property Value Type Description System.String Symbol Gets or sets the operator symbol. Declaration string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Gets the structure of the resulting operator parameter for a given expression. Declaration IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression The expression. Returns Type Description IDataStructure A dynamically defined structure. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.IsNullOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.IsNullOperator.html",
    "title": "Class IsNullOperator | VTL Processing API documentation",
    "keywords": "Class IsNullOperator The \"Isnull\" operator definition. Inheritance System.Object IsNullOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class IsNullOperator : object, IOperatorDefinition Constructors IsNullOperator(IJoinApplyMeasuresOperator, DataStructureResolver) Initialises a new instance of the IsNullOperator class. Declaration public IsNullOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp, DataStructureResolver dsResolver) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.JoinOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.JoinOperator.html",
    "title": "Class JoinOperator | VTL Processing API documentation",
    "keywords": "Class JoinOperator The \"Join\" operator definition. Inheritance System.Object JoinOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class JoinOperator : object, IOperatorDefinition Constructors JoinOperator(DataStructureResolver) Initialises a new instance of the JoinOperator class. Declaration public JoinOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.KeepDropOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.KeepDropOperator.html",
    "title": "Class KeepDropOperator | VTL Processing API documentation",
    "keywords": "Class KeepDropOperator The \"Maintaining/Removing Components\" operator definition. Inheritance System.Object KeepDropOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class KeepDropOperator : object, IOperatorDefinition Constructors KeepDropOperator(DataStructureResolver) Initialises a new instance of the KeepDropOperator class. Declaration public KeepDropOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.MatchCharactersOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.MatchCharactersOperator.html",
    "title": "Class MatchCharactersOperator | VTL Processing API documentation",
    "keywords": "Class MatchCharactersOperator The \"Match characters\" operator definition. Inheritance System.Object MatchCharactersOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class MatchCharactersOperator : object, IOperatorDefinition Constructors MatchCharactersOperator(IJoinApplyMeasuresOperator, DataStructureResolver) Initialises a new instance of the MatchCharactersOperator class. Declaration public MatchCharactersOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp, DataStructureResolver dsResolver) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.MembershipOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.MembershipOperator.html",
    "title": "Class MembershipOperator | VTL Processing API documentation",
    "keywords": "Class MembershipOperator The \"Membership\" operator definition. Inheritance System.Object MembershipOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class MembershipOperator : object, IOperatorDefinition Constructors MembershipOperator() Initializes a new instance of the MembershipOperator class. Declaration public MembershipOperator() Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.NumericOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.NumericOperator.html",
    "title": "Class NumericOperator | VTL Processing API documentation",
    "keywords": "Class NumericOperator The \"Numeric\" operator definition. Inheritance System.Object NumericOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class NumericOperator : object, IOperatorDefinition Constructors NumericOperator(IJoinApplyMeasuresOperator, DataStructureResolver) Initialises a new instance of the NumericOperator class. Declaration public NumericOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp, DataStructureResolver dsResolver) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.NvlOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.NvlOperator.html",
    "title": "Class NvlOperator | VTL Processing API documentation",
    "keywords": "Class NvlOperator The \"Nvl\" operator definition. Inheritance System.Object NvlOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class NvlOperator : object, IOperatorDefinition Constructors NvlOperator(IJoinApplyMeasuresOperator) Initialises a new instance of the NvlOperator class. Declaration public NvlOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.OptionalOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.OptionalOperator.html",
    "title": "Class OptionalOperator | VTL Processing API documentation",
    "keywords": "Class OptionalOperator The \"Optional\" operator definition. Inheritance System.Object OptionalOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class OptionalOperator : object, IOperatorDefinition Constructors OptionalOperator(DataStructureResolver) Initialises a new instance of the OptionalOperator class. Declaration public OptionalOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.PeriodIndicatorOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.PeriodIndicatorOperator.html",
    "title": "Class PeriodIndicatorOperator | VTL Processing API documentation",
    "keywords": "Class PeriodIndicatorOperator The \"Period indicator\" operator definition. Inheritance System.Object PeriodIndicatorOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class PeriodIndicatorOperator : object, IOperatorDefinition Constructors PeriodIndicatorOperator(IJoinApplyMeasuresOperator, DataStructureResolver, IExpressionFactory) Initialises a new instance of the NumericOperator class. Declaration public PeriodIndicatorOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp, DataStructureResolver dsResolver, IExpressionFactory exprFac) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. DataStructureResolver dsResolver The data structure resolver. IExpressionFactory exprFac The expression factory. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.PivotOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.PivotOperator.html",
    "title": "Class PivotOperator | VTL Processing API documentation",
    "keywords": "Class PivotOperator The \"Pivoting\" operator definition. Inheritance System.Object PivotOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class PivotOperator : object, IOperatorDefinition Constructors PivotOperator(DataStructureResolver) Initialises a new instance of the PivotOperator class. Declaration public PivotOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.ReferenceOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.ReferenceOperator.html",
    "title": "Class ReferenceOperator | VTL Processing API documentation",
    "keywords": "Class ReferenceOperator The \"Reference\" operator definition. Inheritance System.Object ReferenceOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class ReferenceOperator : object, IOperatorDefinition Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.RenameOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.RenameOperator.html",
    "title": "Class RenameOperator | VTL Processing API documentation",
    "keywords": "Class RenameOperator The \"Change of Component name\" operator definition. Inheritance System.Object CompCollectorOperator RenameOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class RenameOperator : CompCollectorOperator, IOperatorDefinition Constructors RenameOperator(DataStructureResolver) Initialises a new instance of the RenameOperator class. Declaration public RenameOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.SetOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.SetOperator.html",
    "title": "Class SetOperator | VTL Processing API documentation",
    "keywords": "Class SetOperator The \"Set\" operator definition. Inheritance System.Object SetOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class SetOperator : object, IOperatorDefinition Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.StringOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.StringOperator.html",
    "title": "Class StringOperator | VTL Processing API documentation",
    "keywords": "Class StringOperator The \"String\" operator definition. Inheritance System.Object StringOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class StringOperator : object, IOperatorDefinition Constructors StringOperator(IJoinApplyMeasuresOperator, DataStructureResolver) Initialises a new instance of the StringOperator class. Declaration public StringOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp, DataStructureResolver dsResolver) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.SubspaceOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.SubspaceOperator.html",
    "title": "Class SubspaceOperator | VTL Processing API documentation",
    "keywords": "Class SubspaceOperator The \"Subspace\" operator definition. Inheritance System.Object CompCollectorOperator SubspaceOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class SubspaceOperator : CompCollectorOperator, IOperatorDefinition Constructors SubspaceOperator(DataStructureResolver) Initialises a new instance of the SubspaceOperator class. Declaration public SubspaceOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.TimeOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.TimeOperator.html",
    "title": "Class TimeOperator | VTL Processing API documentation",
    "keywords": "Class TimeOperator The \"Time\" operator definition. Inheritance System.Object TimeOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class TimeOperator : object, IOperatorDefinition Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.UnaryArithmeticOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.UnaryArithmeticOperator.html",
    "title": "Class UnaryArithmeticOperator | VTL Processing API documentation",
    "keywords": "Class UnaryArithmeticOperator The \"Unary arithmetic\" operator definition. Inheritance System.Object UnaryArithmeticOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class UnaryArithmeticOperator : object, IOperatorDefinition Constructors UnaryArithmeticOperator(IJoinApplyMeasuresOperator) Initialises a new instance of the UnaryArithmeticOperator class. Declaration public UnaryArithmeticOperator(IJoinApplyMeasuresOperator joinApplyMeasuresOp) Parameters Type Name Description IJoinApplyMeasuresOperator joinApplyMeasuresOp The join apply measure operator. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Operators.UnpivotOperator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Operators.UnpivotOperator.html",
    "title": "Class UnpivotOperator | VTL Processing API documentation",
    "keywords": "Class UnpivotOperator The \"Unpivoting\" operator definition. Inheritance System.Object UnpivotOperator Implements IOperatorDefinition Namespace : StatisticsPoland.VtlProcessing.Core.Operators Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class UnpivotOperator : object, IOperatorDefinition Constructors UnpivotOperator(DataStructureResolver) Initialises a new instance of the UnpivotOperator class. Declaration public UnpivotOperator(DataStructureResolver dsResolver) Parameters Type Name Description DataStructureResolver dsResolver The data structure resolver. Properties Keyword Declaration public string Keyword { get; set; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Symbol Declaration public string Symbol { get; set; } Property Value Type Description System.String Methods GetOutputStructure(IExpression) Declaration public IDataStructure GetOutputStructure(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description IDataStructure Implements IOperatorDefinition Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.TargetsCollection.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.TargetsCollection.html",
    "title": "Class TargetsCollection | VTL Processing API documentation",
    "keywords": "Class TargetsCollection Collection of translation targets. Inheritance System.Object TargetsCollection Namespace : StatisticsPoland.VtlProcessing.Core Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class TargetsCollection : object Constructors TargetsCollection(IServiceCollection) Initializes a new instance of the TargetsCollection class. Declaration public TargetsCollection(IServiceCollection services) Parameters Type Name Description IServiceCollection services The service collection. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Transformations.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Transformations.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Transformations | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Transformations Classes VisitorTransformer Transforms a CST tree into a transformation schema structure by using an ANTRL4 visitor."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Transformations.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Transformations.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Core.Transformations.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Core.Transformations.Interfaces Interfaces ITreeTransformer Interface transforming a CST tree into a transformation schema structure."
  },
  "api/StatisticsPoland.VtlProcessing.Core.Transformations.Interfaces.ITreeTransformer.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Transformations.Interfaces.ITreeTransformer.html",
    "title": "Interface ITreeTransformer | VTL Processing API documentation",
    "keywords": "Interface ITreeTransformer Interface transforming a CST tree into a transformation schema structure. Namespace : StatisticsPoland.VtlProcessing.Core.Transformations.Interfaces Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public interface ITreeTransformer Methods TransformToSchema(IParseTree) Transform a CST tree into a transformation schema structure. Declaration ITransformationSchema TransformToSchema(IParseTree tree) Parameters Type Name Description IParseTree tree The input tree. Returns Type Description ITransformationSchema The transformation schema. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Transformations.VisitorTransformer.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Transformations.VisitorTransformer.html",
    "title": "Class VisitorTransformer | VTL Processing API documentation",
    "keywords": "Class VisitorTransformer Transforms a CST tree into a transformation schema structure by using an ANTRL4 visitor. Inheritance System.Object VtlBaseVisitor < IExpression > VisitorTransformer Implements IVtlVisitor < IExpression > IParseTreeVisitor < IExpression > ITreeTransformer Inherited Members VtlBaseVisitor<IExpression>.VisitDataset(VtlParser.DatasetContext) VtlBaseVisitor<IExpression>.VisitDatasetComplex(VtlParser.DatasetComplexContext) VtlBaseVisitor<IExpression>.VisitUnopenedDataset(VtlParser.UnopenedDatasetContext) VtlBaseVisitor<IExpression>.VisitJoinClause(VtlParser.JoinClauseContext) VtlBaseVisitor<IExpression>.VisitJoinBody(VtlParser.JoinBodyContext) VtlBaseVisitor<IExpression>.VisitAggrFunctionName(VtlParser.AggrFunctionNameContext) VtlBaseVisitor<IExpression>.VisitAnalyticFunctionName(VtlParser.AnalyticFunctionNameContext) VtlBaseVisitor<IExpression>.VisitVarID(VtlParser.VarIDContext) VtlBaseVisitor<IExpression>.VisitJoinKeyword(VtlParser.JoinKeywordContext) VtlBaseVisitor<IExpression>.VisitGroupKeyword(VtlParser.GroupKeywordContext) VtlBaseVisitor<IExpression>.VisitComponentRole(VtlParser.ComponentRoleContext) VtlBaseVisitor<IExpression>.VisitValueDomainName(VtlParser.ValueDomainNameContext) VtlBaseVisitor<IExpression>.VisitRetainType(VtlParser.RetainTypeContext) VtlBaseVisitor<IExpression>.VisitLimitsMethod(VtlParser.LimitsMethodContext) VtlBaseVisitor<IExpression>.VisitDefExpr(VtlParser.DefExprContext) VtlBaseVisitor<IExpression>.VisitRuleClauseDatapoint(VtlParser.RuleClauseDatapointContext) VtlBaseVisitor<IExpression>.VisitErrorCode(VtlParser.ErrorCodeContext) VtlBaseVisitor<IExpression>.VisitErrorLevel(VtlParser.ErrorLevelContext) VtlBaseVisitor<IExpression>.VisitRuleID(VtlParser.RuleIDContext) Namespace : StatisticsPoland.VtlProcessing.Core.Transformations Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public sealed class VisitorTransformer : VtlBaseVisitor<IExpression>, IVtlVisitor<IExpression>, IParseTreeVisitor<IExpression>, ITreeTransformer Constructors VisitorTransformer(TransformationSchemaResolver, DatapointRulesetResolver, IExpressionFactory, IJoinBuilder, ILogger<VisitorTransformer>) Initializes a new instance of the VisitorTransformer class. Declaration public VisitorTransformer(TransformationSchemaResolver schemaResolver, DatapointRulesetResolver dprReslover, IExpressionFactory exprFactory, IJoinBuilder joinBuilder, ILogger<VisitorTransformer> logger = null) Parameters Type Name Description TransformationSchemaResolver schemaResolver The transformation schema resolver. DatapointRulesetResolver dprReslover The datapoint ruleset resolver. IExpressionFactory exprFactory The expressions factory. IJoinBuilder joinBuilder The \"join\" operator expressions builder. ILogger < VisitorTransformer > logger The errors logger. Methods TransformToSchema(IParseTree) Declaration public ITransformationSchema TransformToSchema(IParseTree tree) Parameters Type Name Description IParseTree tree Returns Type Description ITransformationSchema VisitAggrClause(VtlParser.AggrClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of an \"aggr\" clause. Declaration public override IExpression VisitAggrClause(VtlParser.AggrClauseContext context) Parameters Type Name Description VtlParser.AggrClauseContext context The \"aggr\" clause context. Returns Type Description IExpression The VTL 2.0 expression of an \"aggr\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitAggrClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrClauseContext) VisitAggrExpr(VtlParser.AggrExprContext) Node to walk through a CST tree. Represents a single VTL 2.0 \"aggr\" expression. Declaration public override IExpression VisitAggrExpr(VtlParser.AggrExprContext context) Parameters Type Name Description VtlParser.AggrExprContext context The \"aggr\" expression context. Returns Type Description IExpression The VTL 2.0 \"aggr\" expression. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitAggrExpr(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrExprContext) VisitAggrFunction(VtlParser.AggrFunctionContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of an aggregate function. Declaration public override IExpression VisitAggrFunction(VtlParser.AggrFunctionContext context) Parameters Type Name Description VtlParser.AggrFunctionContext context The aggregate function context. Returns Type Description IExpression The VTL 2.0 expression of an aggregate function. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitAggrFunction(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrFunctionContext) VisitAggrInvocation(VtlParser.AggrInvocationContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of an aggregate invocation. Declaration public override IExpression VisitAggrInvocation(VtlParser.AggrInvocationContext context) Parameters Type Name Description VtlParser.AggrInvocationContext context The aggregate invocation context. Returns Type Description IExpression The VTL 2.0 expression of an aggregate invocation. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitAggrInvocation(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AggrInvocationContext) VisitAnalyticClause(VtlParser.AnalyticClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"analytic\" clause. Declaration public override IExpression VisitAnalyticClause(VtlParser.AnalyticClauseContext context) Parameters Type Name Description VtlParser.AnalyticClauseContext context The \"analytic\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"analytic\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitAnalyticClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AnalyticClauseContext) VisitAnalyticFunction(VtlParser.AnalyticFunctionContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of an analytic function. Declaration public override IExpression VisitAnalyticFunction(VtlParser.AnalyticFunctionContext context) Parameters Type Name Description VtlParser.AnalyticFunctionContext context The analytic function context. Returns Type Description IExpression The VTL 2.0 expression of an analytic function. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitAnalyticFunction(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AnalyticFunctionContext) VisitAnalyticInvocation(VtlParser.AnalyticInvocationContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of an analytic invocation. Declaration public override IExpression VisitAnalyticInvocation(VtlParser.AnalyticInvocationContext context) Parameters Type Name Description VtlParser.AnalyticInvocationContext context The analytic invocation context. Returns Type Description IExpression The VTL 2.0 expression of an analytic invocation. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitAnalyticInvocation(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.AnalyticInvocationContext) VisitCalcClause(VtlParser.CalcClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"calc\" clause. Declaration public override IExpression VisitCalcClause(VtlParser.CalcClauseContext context) Parameters Type Name Description VtlParser.CalcClauseContext context The \"calc\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"calc\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitCalcClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.CalcClauseContext) VisitCalcExpr(VtlParser.CalcExprContext) Node to walk through a CST tree. Represents a single VTL 2.0 \"calc\" expression. Declaration public override IExpression VisitCalcExpr(VtlParser.CalcExprContext context) Parameters Type Name Description VtlParser.CalcExprContext context The \"calc\" expression context. Returns Type Description IExpression The VTL 2.0 \"calc\" expression. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitCalcExpr(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.CalcExprContext) VisitCheckDatapoint(VtlParser.CheckDatapointContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a checking datapoint. Declaration public override IExpression VisitCheckDatapoint(VtlParser.CheckDatapointContext context) Parameters Type Name Description VtlParser.CheckDatapointContext context The checking datapoint context. Returns Type Description IExpression The VTL 2.0 expression of a checking datapoint. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitCheckDatapoint(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.CheckDatapointContext) VisitClosedDataset(VtlParser.ClosedDatasetContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"closed\" dataset. Declaration public override IExpression VisitClosedDataset(VtlParser.ClosedDatasetContext context) Parameters Type Name Description VtlParser.ClosedDatasetContext context The \"closed\" dataset context. Returns Type Description IExpression The VTL 2.0 expression of a \"closed\" dataset. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitClosedDataset(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ClosedDatasetContext) VisitComponent(VtlParser.ComponentContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a component. Declaration public override IExpression VisitComponent(VtlParser.ComponentContext context) Parameters Type Name Description VtlParser.ComponentContext context The component context. Returns Type Description IExpression The VTL 2.0 expression of a component. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitComponent(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ComponentContext) VisitComponentID(VtlParser.ComponentIDContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a component identifier. Declaration public override IExpression VisitComponentID(VtlParser.ComponentIDContext context) Parameters Type Name Description VtlParser.ComponentIDContext context The component identifier context. Returns Type Description IExpression The VTL 2.0 expression of a component identifier. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitComponentID(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ComponentIDContext) VisitConstant(VtlParser.ConstantContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a constant. Declaration public override IExpression VisitConstant(VtlParser.ConstantContext context) Parameters Type Name Description VtlParser.ConstantContext context The constant context. Returns Type Description IExpression The VTL 2.0 expression of a constant. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitConstant(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ConstantContext) VisitDatasetClause(VtlParser.DatasetClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"dataset\" clause. Declaration public override IExpression VisitDatasetClause(VtlParser.DatasetClauseContext context) Parameters Type Name Description VtlParser.DatasetClauseContext context The \"dataset\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"dataset\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitDatasetClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DatasetClauseContext) VisitDatasetID(VtlParser.DatasetIDContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a dataset identifier. Declaration public override IExpression VisitDatasetID(VtlParser.DatasetIDContext context) Parameters Type Name Description VtlParser.DatasetIDContext context The dataset identifier context. Returns Type Description IExpression The VTL 2.0 expression of a dataset identifier. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitDatasetID(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DatasetIDContext) VisitDefDatapoint(VtlParser.DefDatapointContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a datapoint definition. Declaration public override IExpression VisitDefDatapoint(VtlParser.DefDatapointContext context) Parameters Type Name Description VtlParser.DefDatapointContext context The datapoint definition context. Returns Type Description IExpression The VTL 2.0 expression of a datapoint definition. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitDefDatapoint(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DefDatapointContext) VisitDropClause(VtlParser.DropClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"drop\" clause. Declaration public override IExpression VisitDropClause(VtlParser.DropClauseContext context) Parameters Type Name Description VtlParser.DropClauseContext context The \"drop\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"drop\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitDropClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.DropClauseContext) VisitFilterClause(VtlParser.FilterClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"filter\" clause. Declaration public override IExpression VisitFilterClause(VtlParser.FilterClauseContext context) Parameters Type Name Description VtlParser.FilterClauseContext context The \"filter\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"filter\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitFilterClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.FilterClauseContext) VisitFirstWindowLimit(VtlParser.FirstWindowLimitContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"first window limit\". Declaration public override IExpression VisitFirstWindowLimit(VtlParser.FirstWindowLimitContext context) Parameters Type Name Description VtlParser.FirstWindowLimitContext context The \"first window limit\" context. Returns Type Description IExpression The VTL 2.0 expression of a \"first window limit\". Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitFirstWindowLimit(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.FirstWindowLimitContext) VisitGroupingClause(VtlParser.GroupingClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"grouping\" clause. Declaration public override IExpression VisitGroupingClause(VtlParser.GroupingClauseContext context) Parameters Type Name Description VtlParser.GroupingClauseContext context The \"grouping\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"grouping\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitGroupingClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.GroupingClauseContext) VisitHavingClause(VtlParser.HavingClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"having\" clause. Declaration public override IExpression VisitHavingClause(VtlParser.HavingClauseContext context) Parameters Type Name Description VtlParser.HavingClauseContext context The \"having\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"having\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitHavingClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.HavingClauseContext) VisitHavingExpr(VtlParser.HavingExprContext) Node to walk through a CST tree. Represents a single VTL 2.0 \"having\" expression. Declaration public override IExpression VisitHavingExpr(VtlParser.HavingExprContext context) Parameters Type Name Description VtlParser.HavingExprContext context The \"having\" expression context. Returns Type Description IExpression The VTL 2.0 \"having\" expression. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitHavingExpr(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.HavingExprContext) VisitIfThenElseDataset(VtlParser.IfThenElseDatasetContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of an \"if then else\" dataset. Declaration public override IExpression VisitIfThenElseDataset(VtlParser.IfThenElseDatasetContext context) Parameters Type Name Description VtlParser.IfThenElseDatasetContext context The \"if then else\" dataset context. Returns Type Description IExpression The VTL 2.0 expression of an \"if then else\" dataset. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitIfThenElseDataset(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.IfThenElseDatasetContext) VisitIfThenElseScalar(VtlParser.IfThenElseScalarContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of an \"if then else\" scalar. Declaration public override IExpression VisitIfThenElseScalar(VtlParser.IfThenElseScalarContext context) Parameters Type Name Description VtlParser.IfThenElseScalarContext context The \"if then else\" scalar context. Returns Type Description IExpression The VTL 2.0 expression of an \"if then else\" scalar. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitIfThenElseScalar(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.IfThenElseScalarContext) VisitJoinAggrClause(VtlParser.JoinAggrClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"join aggr\" clause. Declaration public override IExpression VisitJoinAggrClause(VtlParser.JoinAggrClauseContext context) Parameters Type Name Description VtlParser.JoinAggrClauseContext context The \"join aggr\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"join aggr\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitJoinAggrClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinAggrClauseContext) VisitJoinAliasesClause(VtlParser.JoinAliasesClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"join aliases\" clause. Declaration public override IExpression VisitJoinAliasesClause(VtlParser.JoinAliasesClauseContext context) Parameters Type Name Description VtlParser.JoinAliasesClauseContext context The \"join aliases\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"join aliases\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitJoinAliasesClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinAliasesClauseContext) VisitJoinAliasExpr(VtlParser.JoinAliasExprContext) Node to walk through a CST tree. Represents a single VTL 2.0 \"join alias\" expression. Declaration public override IExpression VisitJoinAliasExpr(VtlParser.JoinAliasExprContext context) Parameters Type Name Description VtlParser.JoinAliasExprContext context The \"join alias\" expression context. Returns Type Description IExpression The VTL 2.0 \"join alias\" expression. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitJoinAliasExpr(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinAliasExprContext) VisitJoinApplyClause(VtlParser.JoinApplyClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"join apply\" clause. Declaration public override IExpression VisitJoinApplyClause(VtlParser.JoinApplyClauseContext context) Parameters Type Name Description VtlParser.JoinApplyClauseContext context The \"join apply\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"join apply\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitJoinApplyClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinApplyClauseContext) VisitJoinCalcClause(VtlParser.JoinCalcClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"join calc\" clause. Declaration public override IExpression VisitJoinCalcClause(VtlParser.JoinCalcClauseContext context) Parameters Type Name Description VtlParser.JoinCalcClauseContext context The \"join calc\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"join calc\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitJoinCalcClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinCalcClauseContext) VisitJoinDropClause(VtlParser.JoinDropClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"join drop\" clause. Declaration public override IExpression VisitJoinDropClause(VtlParser.JoinDropClauseContext context) Parameters Type Name Description VtlParser.JoinDropClauseContext context The \"join drop\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"join drop\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitJoinDropClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinDropClauseContext) VisitJoinExpr(VtlParser.JoinExprContext) Node to walk through a CST tree. Represents a single VTL 2.0 \"join\" expression. Declaration public override IExpression VisitJoinExpr(VtlParser.JoinExprContext context) Parameters Type Name Description VtlParser.JoinExprContext context The \"join\" expression context. Returns Type Description IExpression The VTL 2.0 \"join\" expression. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitJoinExpr(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinExprContext) VisitJoinFilterClause(VtlParser.JoinFilterClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"join filter\" clause. Declaration public override IExpression VisitJoinFilterClause(VtlParser.JoinFilterClauseContext context) Parameters Type Name Description VtlParser.JoinFilterClauseContext context The \"join filter\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"join filter\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitJoinFilterClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinFilterClauseContext) VisitJoinKeepClause(VtlParser.JoinKeepClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"join keep\" clause. Declaration public override IExpression VisitJoinKeepClause(VtlParser.JoinKeepClauseContext context) Parameters Type Name Description VtlParser.JoinKeepClauseContext context The \"join keep\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"join keep\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitJoinKeepClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinKeepClauseContext) VisitJoinRenameClause(VtlParser.JoinRenameClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"join rename\" clause. Declaration public override IExpression VisitJoinRenameClause(VtlParser.JoinRenameClauseContext context) Parameters Type Name Description VtlParser.JoinRenameClauseContext context The \"join rename\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"join rename\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitJoinRenameClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinRenameClauseContext) VisitJoinUsingClause(VtlParser.JoinUsingClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"join using\" clause. Declaration public override IExpression VisitJoinUsingClause(VtlParser.JoinUsingClauseContext context) Parameters Type Name Description VtlParser.JoinUsingClauseContext context The \"join using\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"join using\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitJoinUsingClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.JoinUsingClauseContext) VisitKeepClause(VtlParser.KeepClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"keep\" clause. Declaration public override IExpression VisitKeepClause(VtlParser.KeepClauseContext context) Parameters Type Name Description VtlParser.KeepClauseContext context The \"keep\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"keep\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitKeepClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.KeepClauseContext) VisitList(VtlParser.ListContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a list. Declaration public override IExpression VisitList(VtlParser.ListContext context) Parameters Type Name Description VtlParser.ListContext context The list context. Returns Type Description IExpression The VTL 2.0 expression of a list. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitList(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ListContext) VisitMembershipDataset(VtlParser.MembershipDatasetContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"membership\" dataset. Declaration public override IExpression VisitMembershipDataset(VtlParser.MembershipDatasetContext context) Parameters Type Name Description VtlParser.MembershipDatasetContext context The \"membership\" dataset context. Returns Type Description IExpression The VTL 2.0 expression of a \"membership\" dataset. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitMembershipDataset(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.MembershipDatasetContext) VisitOpenedDataset(VtlParser.OpenedDatasetContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of an \"opened\" dataset. Declaration public override IExpression VisitOpenedDataset(VtlParser.OpenedDatasetContext context) Parameters Type Name Description VtlParser.OpenedDatasetContext context The \"opened\" dataset context. Returns Type Description IExpression The VTL 2.0 expression of an \"opened\" dataset. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitOpenedDataset(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.OpenedDatasetContext) VisitOptionalExpr(VtlParser.OptionalExprContext) Node to walk through a CST tree. Represents a single VTL 2.0 optional expression. Declaration public override IExpression VisitOptionalExpr(VtlParser.OptionalExprContext context) Parameters Type Name Description VtlParser.OptionalExprContext context The optional expression context. Returns Type Description IExpression The VTL 2.0 optional expression. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitOptionalExpr(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.OptionalExprContext) VisitOrderClause(VtlParser.OrderClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"order\" clause. Declaration public override IExpression VisitOrderClause(VtlParser.OrderClauseContext context) Parameters Type Name Description VtlParser.OrderClauseContext context The \"order\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"order\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitOrderClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.OrderClauseContext) VisitOrderExpr(VtlParser.OrderExprContext) Node to walk through a CST tree. Represents a single VTL 2.0 \"order\" expression. Declaration public override IExpression VisitOrderExpr(VtlParser.OrderExprContext context) Parameters Type Name Description VtlParser.OrderExprContext context The \"order\" expression context. Returns Type Description IExpression The VTL 2.0 \"order\" expression. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitOrderExpr(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.OrderExprContext) VisitPartitionClause(VtlParser.PartitionClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"partition\" clause. Declaration public override IExpression VisitPartitionClause(VtlParser.PartitionClauseContext context) Parameters Type Name Description VtlParser.PartitionClauseContext context The \"partition\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"partition\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitPartitionClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.PartitionClauseContext) VisitPivotClause(VtlParser.PivotClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"pivot\" clause. Declaration public override IExpression VisitPivotClause(VtlParser.PivotClauseContext context) Parameters Type Name Description VtlParser.PivotClauseContext context The \"pivot\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"pivot\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitPivotClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.PivotClauseContext) VisitRenameClause(VtlParser.RenameClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"rename\" clause. Declaration public override IExpression VisitRenameClause(VtlParser.RenameClauseContext context) Parameters Type Name Description VtlParser.RenameClauseContext context The \"rename\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"rename\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitRenameClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RenameClauseContext) VisitRenameExpr(VtlParser.RenameExprContext) Node to walk through a CST tree. Represents a single VTL 2.0 \"rename\" expression. Declaration public override IExpression VisitRenameExpr(VtlParser.RenameExprContext context) Parameters Type Name Description VtlParser.RenameExprContext context The \"rename\" expression context. Returns Type Description IExpression The VTL 2.0 \"rename\" expression. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitRenameExpr(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RenameExprContext) VisitRuleItemDatapoint(VtlParser.RuleItemDatapointContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a ruleset rule item. Declaration public override IExpression VisitRuleItemDatapoint(VtlParser.RuleItemDatapointContext context) Parameters Type Name Description VtlParser.RuleItemDatapointContext context The ruleset rule item context. Returns Type Description IExpression The VTL 2.0 expression of a ruleset rule item. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitRuleItemDatapoint(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RuleItemDatapointContext) VisitRulesetID(VtlParser.RulesetIDContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a ruleset identifier. Declaration public override IExpression VisitRulesetID(VtlParser.RulesetIDContext context) Parameters Type Name Description VtlParser.RulesetIDContext context The ruleset identifier context. Returns Type Description IExpression The VTL 2.0 expression of a ruleset identifier. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitRulesetID(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RulesetIDContext) VisitRulesetSignature(VtlParser.RulesetSignatureContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a ruleset signature. Declaration public override IExpression VisitRulesetSignature(VtlParser.RulesetSignatureContext context) Parameters Type Name Description VtlParser.RulesetSignatureContext context The ruleset signature context. Returns Type Description IExpression The VTL 2.0 expression of a ruleset signature. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitRulesetSignature(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.RulesetSignatureContext) VisitScalar(VtlParser.ScalarContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a scalar. Declaration public override IExpression VisitScalar(VtlParser.ScalarContext context) Parameters Type Name Description VtlParser.ScalarContext context The scalar context. Returns Type Description IExpression The VTL 2.0 expression of a scalar. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitScalar(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.ScalarContext) VisitSecondWindowLimit(VtlParser.SecondWindowLimitContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"second window limit\". Declaration public override IExpression VisitSecondWindowLimit(VtlParser.SecondWindowLimitContext context) Parameters Type Name Description VtlParser.SecondWindowLimitContext context The \"second window limit\" context. Returns Type Description IExpression The VTL 2.0 expression of a \"second window limit\". Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitSecondWindowLimit(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.SecondWindowLimitContext) VisitSetExpr(VtlParser.SetExprContext) Node to walk through a CST tree. Represents a single VTL 2.0 \"set\" expression. Declaration public override IExpression VisitSetExpr(VtlParser.SetExprContext context) Parameters Type Name Description VtlParser.SetExprContext context The \"set\" expression context. Returns Type Description IExpression The VTL 2.0 \"set\" expression. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitSetExpr(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.SetExprContext) VisitStart(VtlParser.StartContext) Node to walk through a CST tree. Starts walking. Declaration public override IExpression VisitStart(VtlParser.StartContext context) Parameters Type Name Description VtlParser.StartContext context The start context. Returns Type Description IExpression Null. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitStart(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.StartContext) VisitStatement(VtlParser.StatementContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of an assignment or a definition. Declaration public override IExpression VisitStatement(VtlParser.StatementContext context) Parameters Type Name Description VtlParser.StatementContext context The statement context. Returns Type Description IExpression The VTL 2.0 expression of an assignment or a definition with the assignment or defiition variable name as a result name. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitStatement(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.StatementContext) VisitSubspaceClause(VtlParser.SubspaceClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"subspace\" clause. Declaration public override IExpression VisitSubspaceClause(VtlParser.SubspaceClauseContext context) Parameters Type Name Description VtlParser.SubspaceClauseContext context The \"subspace\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"subspace\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitSubspaceClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.SubspaceClauseContext) VisitSubspaceExpr(VtlParser.SubspaceExprContext) Node to walk through a CST tree. Represents a single VTL 2.0 \"subspace\" expression. Declaration public override IExpression VisitSubspaceExpr(VtlParser.SubspaceExprContext context) Parameters Type Name Description VtlParser.SubspaceExprContext context The \"subspace\" expression context. Returns Type Description IExpression The VTL 2.0 \"subspace\" expression. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitSubspaceExpr(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.SubspaceExprContext) VisitUnpivotClause(VtlParser.UnpivotClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of an \"unpivot\" clause. Declaration public override IExpression VisitUnpivotClause(VtlParser.UnpivotClauseContext context) Parameters Type Name Description VtlParser.UnpivotClauseContext context The \"unpivot\" clause context. Returns Type Description IExpression The VTL 2.0 expression of an \"unpivot\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitUnpivotClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.UnpivotClauseContext) VisitVarSignature(VtlParser.VarSignatureContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a ruleset variable. Declaration public override IExpression VisitVarSignature(VtlParser.VarSignatureContext context) Parameters Type Name Description VtlParser.VarSignatureContext context The ruleset variable context. Returns Type Description IExpression The VTL 2.0 expression of a ruleset variable. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitVarSignature(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.VarSignatureContext) VisitWindowingClause(VtlParser.WindowingClauseContext) Node to walk through a CST tree. Represents a single VTL 2.0 expression of a \"windowing\" clause. Declaration public override IExpression VisitWindowingClause(VtlParser.WindowingClauseContext context) Parameters Type Name Description VtlParser.WindowingClauseContext context The \"windowing\" clause context. Returns Type Description IExpression The VTL 2.0 expression of a \"windowing\" clause. Overrides StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlBaseVisitor<StatisticsPoland.VtlProcessing.Core.Models.Interfaces.IExpression>.VisitWindowingClause(StatisticsPoland.VtlProcessing.Core.FrontEnd.Antlr.VtlParser.WindowingClauseContext) Implements IVtlVisitor<Result> IParseTreeVisitor<> ITreeTransformer Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Core.Translator.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Core.Translator.html",
    "title": "Class Translator | VTL Processing API documentation",
    "keywords": "Class Translator The VTL 2.0 translator representation. Inheritance System.Object Translator Namespace : StatisticsPoland.VtlProcessing.Core Assembly : StatisticsPoland.VtlProcessing.Core.dll Syntax public class Translator : object Constructors Translator(Action<ITranslatorConfig>) Initializes a new instance of the Translator class. Declaration public Translator(Action<ITranslatorConfig> configuration) Parameters Type Name Description Action < ITranslatorConfig > configuration The configuration of the translator. Properties DataModels Gets the data models aggregator. Declaration public IDataModelAggregator DataModels { get; } Property Value Type Description IDataModelAggregator EnvironmentMapper Gets the environment mapper. Declaration public IEnvironmentMapper EnvironmentMapper { get; } Property Value Type Description IEnvironmentMapper Errors Gets the translation errors collection. Declaration public ErrorsCollection Errors { get; } Property Value Type Description ErrorsCollection Targets Gets the targets collection. Declaration public TargetsCollection Targets { get; } Property Value Type Description TargetsCollection Methods CreateSchema(String) Creates and returns the transformation schema from a given VTL 2.0 source code. Declaration public ITransformationSchema CreateSchema(string vtlSource) Parameters Type Name Description System.String vtlSource The VTL 2.0 source code. Returns Type Description ITransformationSchema The transformation schema. Translate(ITransformationSchema, String, Boolean) Translates a given transformation schema to target's language code whose target name is given. Declaration public string Translate(ITransformationSchema schema, string targetName, bool schemaProcessed = false) Parameters Type Name Description ITransformationSchema schema The transformation schema. System.String targetName The name of a target. System.Boolean schemaProcessed Specifies if the schema has been processed by middle-end operations (ex. type inference). Returns Type Description System.String Translate(String, String) Translates a given VTL 2.0 source code to target's language code whose target name is given. Declaration public string Translate(string vtlSource, string targetName) Parameters Type Name Description System.String vtlSource The VTL 2.0 source code. System.String targetName The name of a target. Returns Type Description System.String Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.PlantUML.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.PlantUML.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Target.PlantUML | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Target.PlantUML Classes PlantUmlTargetRenderer The PlantUML target renderer for the VTL 2.0 translation."
  },
  "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.ExpressionsType.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.ExpressionsType.html",
    "title": "Enum ExpressionsType | VTL Processing API documentation",
    "keywords": "Enum ExpressionsType The VTL 2.0 expressions type. Namespace : StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Target.PlantUML.dll Syntax public enum ExpressionsType : int Fields Name Description Rulesets The ruleset VTL 2.0 expressions type. Standard The standard VTL 2.0 expressions type. Extension Methods Utilities.In<ExpressionsType>(ExpressionsType[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure Classes PlantUmlUrlConverter The converter of a PlantUML code to an URL of a diagram. ServiceCollectionExtensions The extension methods whose add the PlantUML target renderer to it. TranslatorConfigExtensions The ITranslatorConfig extension methods whose add the PlantUML target renderer to it. Enums ExpressionsType The VTL 2.0 expressions type."
  },
  "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.Interfaces Interfaces ITargetBuilder The builder interface for the PlantUML target renderer. ITargetConfiguration The interface of the PlantUML target renderer configuration."
  },
  "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.Interfaces.ITargetBuilder.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.Interfaces.ITargetBuilder.html",
    "title": "Interface ITargetBuilder | VTL Processing API documentation",
    "keywords": "Interface ITargetBuilder The builder interface for the PlantUML target renderer. Namespace : StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.Interfaces Assembly : StatisticsPoland.VtlProcessing.Target.PlantUML.dll Syntax public interface ITargetBuilder Methods AddDataStructureObject() Adds to a graphic presentation of a transformation schema the objects describing data structures of expressions. Declaration ITargetBuilder AddDataStructureObject() Returns Type Description ITargetBuilder The PlantUML target renderer builder. ShowNumberLine() Adds to graphic presentation of a transformation schema expressions a field describing a line number of an expression. Declaration ITargetBuilder ShowNumberLine() Returns Type Description ITargetBuilder The PlantUML target renderer builder. UseArrowFirstToLast() Changes lines of a graphic presentation of a transformation schema to arrows pointing by the method \"from the root to leafs\". Declaration ITargetBuilder UseArrowFirstToLast() Returns Type Description ITargetBuilder The PlantUML target renderer builder. UseArrowLastToFirst() Changes lines of a graphic presentation of a transformation schema to arrows pointing by the method \"from leafs to the root\". Declaration ITargetBuilder UseArrowLastToFirst() Returns Type Description ITargetBuilder The PlantUML target renderer builder. UseHorizontalView() Changes a graphic presentation method of a transformation schema to horizontal view. Declaration ITargetBuilder UseHorizontalView() Returns Type Description ITargetBuilder The PlantUML target renderer builder. UseRuleExpressionsModel() Changes a graphic presentation method of a transformation schema to a rulesets expressions view. Declaration ITargetBuilder UseRuleExpressionsModel() Returns Type Description ITargetBuilder The PlantUML target renderer builder. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.Interfaces.ITargetConfiguration.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.Interfaces.ITargetConfiguration.html",
    "title": "Interface ITargetConfiguration | VTL Processing API documentation",
    "keywords": "Interface ITargetConfiguration The interface of the PlantUML target renderer configuration. Namespace : StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.Interfaces Assembly : StatisticsPoland.VtlProcessing.Target.PlantUML.dll Syntax public interface ITargetConfiguration Properties ExprType The type of expressions to show in a graphic presentation of a transformation schema. Declaration ExpressionsType ExprType { get; set; } Property Value Type Description ExpressionsType LineConnection The style of line connections of a graphic presentation of a transformation schema. Declaration string LineConnection { get; set; } Property Value Type Description System.String ShowDataStructure The value specifying if to show objects of a graphic presentation of a transformation schema, describing data structures of expressions. Declaration bool ShowDataStructure { get; set; } Property Value Type Description System.Boolean ShowNumberLine The value specifying if to show fields of expressions of a graphic presentation of a transformation schema, describing a line number of an expression. Declaration bool ShowNumberLine { get; set; } Property Value Type Description System.Boolean UseHorizontalView The value specifying if a graphic presentation method of a transformation schema is a horizontal view. Declaration bool UseHorizontalView { get; set; } Property Value Type Description System.Boolean Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.PlantUmlUrlConverter.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.PlantUmlUrlConverter.html",
    "title": "Class PlantUmlUrlConverter | VTL Processing API documentation",
    "keywords": "Class PlantUmlUrlConverter The converter of a PlantUML code to an URL of a diagram. Inheritance System.Object PlantUmlUrlConverter Namespace : StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Target.PlantUML.dll Syntax public class PlantUmlUrlConverter : object Constructors PlantUmlUrlConverter(String, String) Initializes a new instance of the PlantUmlUrlConverter class. Declaration public PlantUmlUrlConverter(string source = null, string apiAddress = \"http://www.plantuml.com/plantuml\") Parameters Type Name Description System.String source The PlantUML source code. System.String apiAddress The PlantUML server address. Properties ApiAddress Gets the URL of a PlantUML Server. Declaration public string ApiAddress { get; } Property Value Type Description System.String PNGUrl Gets the URL of a diagram (PNG). Declaration public string PNGUrl { get; } Property Value Type Description System.String Source Gets or sets the PlantUML source code to process. Declaration public string Source { get; set; } Property Value Type Description System.String SVGUrl Gets the URL of a diagram (SVG). Declaration public string SVGUrl { get; } Property Value Type Description System.String TXTUrl Gets the URL of a diagram (TXT). Declaration public string TXTUrl { get; } Property Value Type Description System.String Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.ServiceCollectionExtensions.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | VTL Processing API documentation",
    "keywords": "Class ServiceCollectionExtensions The extension methods whose add the PlantUML target renderer to it. Inheritance System.Object ServiceCollectionExtensions Namespace : StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Target.PlantUML.dll Syntax public static class ServiceCollectionExtensions : object Methods AddPlantUmlTarget(IServiceCollection, Action<ITargetBuilder>) Adds the PlantUML target renderer to a service collection. Declaration public static IServiceCollection AddPlantUmlTarget(this IServiceCollection services, Action<ITargetBuilder> config) Parameters Type Name Description IServiceCollection services The instance of the service collection. Action < ITargetBuilder > config The builder of the PlantUML target renderer. Returns Type Description IServiceCollection The service collection."
  },
  "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.TranslatorConfigExtensions.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure.TranslatorConfigExtensions.html",
    "title": "Class TranslatorConfigExtensions | VTL Processing API documentation",
    "keywords": "Class TranslatorConfigExtensions The ITranslatorConfig extension methods whose add the PlantUML target renderer to it. Inheritance System.Object TranslatorConfigExtensions Namespace : StatisticsPoland.VtlProcessing.Target.PlantUML.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Target.PlantUML.dll Syntax public static class TranslatorConfigExtensions : object Methods AddPlantUmlTarget(ITranslatorConfig, Action<ITargetBuilder>) Adds the PlantUML target renderer to a translator configuration. Declaration public static void AddPlantUmlTarget(this ITranslatorConfig config, Action<ITargetBuilder> configure = null) Parameters Type Name Description ITranslatorConfig config The instance of the translator configuration. Action < ITargetBuilder > configure The builder of the PlantUML target renderer."
  },
  "api/StatisticsPoland.VtlProcessing.Target.PlantUML.PlantUmlTargetRenderer.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.PlantUML.PlantUmlTargetRenderer.html",
    "title": "Class PlantUmlTargetRenderer | VTL Processing API documentation",
    "keywords": "Class PlantUmlTargetRenderer The PlantUML target renderer for the VTL 2.0 translation. Inheritance System.Object PlantUmlTargetRenderer Implements ITargetRenderer Namespace : StatisticsPoland.VtlProcessing.Target.PlantUML Assembly : StatisticsPoland.VtlProcessing.Target.PlantUML.dll Syntax public class PlantUmlTargetRenderer : object, ITargetRenderer Constructors PlantUmlTargetRenderer(ITargetConfiguration) Initializes a new instance of the PlantUmlTargetRenderer class. Declaration public PlantUmlTargetRenderer(ITargetConfiguration configuration) Parameters Type Name Description ITargetConfiguration configuration The target configuration. Properties Name Declaration public string Name { get; } Property Value Type Description System.String Methods Render(IExpression) Declaration public string Render(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description System.String Render(ITransformationSchema) Declaration public string Render(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema Returns Type Description System.String Implements ITargetRenderer Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL Classes TsqlTargetRenderer The TSQL target renderer for the VTL 2.0 translation."
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.AttributePropagationAlgorithm.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.AttributePropagationAlgorithm.html",
    "title": "Class AttributePropagationAlgorithm | VTL Processing API documentation",
    "keywords": "Class AttributePropagationAlgorithm The standard VTL 2.0 attribute propagation algorithm representation. Inheritance System.Object AttributePropagationAlgorithm Implements IAttributePropagationAlgorithm Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public class AttributePropagationAlgorithm : object, IAttributePropagationAlgorithm Methods Propagate(StructureComponent, ICollection<String>) Declaration public string Propagate(StructureComponent attribute, ICollection<string> aliases) Parameters Type Name Description StructureComponent attribute ICollection < System.String > aliases Returns Type Description System.String Implements IAttributePropagationAlgorithm Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Attributes.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Attributes.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Attributes | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Attributes Classes OperatorRendererSymbolAttribute Attribute allows to find the definition of the operator renderer with the specified symbol."
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Attributes.OperatorRendererSymbolAttribute.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Attributes.OperatorRendererSymbolAttribute.html",
    "title": "Class OperatorRendererSymbolAttribute | VTL Processing API documentation",
    "keywords": "Class OperatorRendererSymbolAttribute Attribute allows to find the definition of the operator renderer with the specified symbol. Inheritance System.Object OperatorRendererSymbolAttribute Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Attributes Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public sealed class OperatorRendererSymbolAttribute : Attribute Constructors OperatorRendererSymbolAttribute(String[]) Initialises a new instance of the OperatorRendererSymbolAttribute class. Declaration public OperatorRendererSymbolAttribute(params string[] symbols) Parameters Type Name Description System.String [] symbols The symbol of the operator renderer used by a \"join\" operator. Properties Symbols Gets operator symbols array. Declaration public string[] Symbols { get; } Property Value Type Description System.String [] Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure Classes AttributePropagationAlgorithm The standard VTL 2.0 attribute propagation algorithm representation. JoinExpressionExtensions Auxiliary methods for \"join\" operator expressions. ServiceCollectionExtensions The extension methods whose add the TSQL target renderer to it. TemporaryTables The temporary tables data. TranslatorConfigExtensions The ITranslatorConfig extension methods whose add the TSQL target renderer to it. Delegates JoinMeasuresRenderer Visits an \"apply\" branch of a \"join\" operator expression and renders measures for the TSQL \"join select\" query. OperatorRendererResolver Initializes a new instance of the IOperatorRenderer interface."
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Interfaces Interfaces IAttributePropagationAlgorithm The attribute propagation algorithm interface. ITargetBuilder The builder interface for the TSQL target renderer. ITargetConfiguration The interface of the TSQL target renderer configuration."
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Interfaces.IAttributePropagationAlgorithm.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Interfaces.IAttributePropagationAlgorithm.html",
    "title": "Interface IAttributePropagationAlgorithm | VTL Processing API documentation",
    "keywords": "Interface IAttributePropagationAlgorithm The attribute propagation algorithm interface. Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Interfaces Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public interface IAttributePropagationAlgorithm Methods Propagate(StructureComponent, ICollection<String>) Propagates an attribute from a given aliases collection and returns a TSQL translated code. Declaration string Propagate(StructureComponent attribute, ICollection<string> aliases) Parameters Type Name Description StructureComponent attribute The attribute to propagate. ICollection < System.String > aliases The aliases collection. Returns Type Description System.String The TSQL translated code. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Interfaces.ITargetBuilder.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Interfaces.ITargetBuilder.html",
    "title": "Interface ITargetBuilder | VTL Processing API documentation",
    "keywords": "Interface ITargetBuilder The builder interface for the TSQL target renderer. Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Interfaces Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public interface ITargetBuilder Methods AddComments() Adds comments to the translated TSQL code. Declaration ITargetBuilder AddComments() Returns Type Description ITargetBuilder Instance of the builder. SetAttributePropagationAlgorithm(IAttributePropagationAlgorithm) Sets an attribute propagation algorithm used by the target. Declaration ITargetBuilder SetAttributePropagationAlgorithm(IAttributePropagationAlgorithm propagationAlgorithm) Parameters Type Name Description IAttributePropagationAlgorithm propagationAlgorithm The attribute propagation algorithm. Returns Type Description ITargetBuilder Instance of the builder. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Interfaces.ITargetConfiguration.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Interfaces.ITargetConfiguration.html",
    "title": "Interface ITargetConfiguration | VTL Processing API documentation",
    "keywords": "Interface ITargetConfiguration The interface of the TSQL target renderer configuration. Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.Interfaces Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public interface ITargetConfiguration Properties AttributePropagationAlgorithm The attribute propagation algorithm. Declaration IAttributePropagationAlgorithm AttributePropagationAlgorithm { get; set; } Property Value Type Description IAttributePropagationAlgorithm UseComments Gets or sets the value specifying if comments shall be appended in the TSQL rendered code. Declaration bool UseComments { get; set; } Property Value Type Description System.Boolean Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.JoinExpressionExtensions.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.JoinExpressionExtensions.html",
    "title": "Class JoinExpressionExtensions | VTL Processing API documentation",
    "keywords": "Class JoinExpressionExtensions Auxiliary methods for \"join\" operator expressions. Inheritance System.Object JoinExpressionExtensions Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public static class JoinExpressionExtensions : object Methods GetAliasExprWithId(IJoinExpression, String) Gets an expression with a given id name from an aliases collection from a \"ds\" branch. Declaration public static IExpression GetAliasExprWithId(this IJoinExpression joinExpr, string idName) Parameters Type Name Description IJoinExpression joinExpr The \"join\" operator expression. System.String idName The name of the identifier. Returns Type Description IExpression Operand containing a given id name. GetAliasExprWithMeasure(IJoinExpression, String) Gets an expression with a given measure name from an aliases collection from a \"ds\" branch. Declaration public static IExpression GetAliasExprWithMeasure(this IJoinExpression joinExpr, string measureName) Parameters Type Name Description IJoinExpression joinExpr The \"join\" operator expression. System.String measureName The name of the measure. Returns Type Description IExpression Operand containing a given measure name. GettAliasExprWithViralAttribute(IJoinExpression, String) Gets an expression with a given viral attribute from an aliases collection from a \"ds\" branch. Declaration public static IExpression GettAliasExprWithViralAttribute(this IJoinExpression joinExpr, string attributeName) Parameters Type Name Description IJoinExpression joinExpr the \"join\" operator expression. System.String attributeName The name of the viral attribute. Returns Type Description IExpression Operand containing a given viral attribute."
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.JoinMeasuresRenderer.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.JoinMeasuresRenderer.html",
    "title": "Delegate JoinMeasuresRenderer | VTL Processing API documentation",
    "keywords": "Delegate JoinMeasuresRenderer Visits an \"apply\" branch of a \"join\" operator expression and renders measures for the TSQL \"join select\" query. Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public delegate string JoinMeasuresRenderer(IExpression applyBranch, StructureComponent measure, StructureComponent renamedMeasure); Parameters Type Name Description IExpression applyBranch The \"apply\" branch of a \"join\" operator which parameters shall be used to render. StructureComponent measure The selected measure with the old name to assign in the translated code. StructureComponent renamedMeasure The selected measure with the new name to assign in the translated code. Returns Type Description System.String The TSQL translated code with measures. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.OperatorRendererResolver.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.OperatorRendererResolver.html",
    "title": "Delegate OperatorRendererResolver | VTL Processing API documentation",
    "keywords": "Delegate OperatorRendererResolver Initializes a new instance of the IOperatorRenderer interface. Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public delegate IOperatorRenderer OperatorRendererResolver(string key); Parameters Type Name Description System.String key The operator key. Returns Type Description IOperatorRenderer Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.ServiceCollectionExtensions.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | VTL Processing API documentation",
    "keywords": "Class ServiceCollectionExtensions The extension methods whose add the TSQL target renderer to it. Inheritance System.Object ServiceCollectionExtensions Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public static class ServiceCollectionExtensions : object Methods AddTsqlTarget(IServiceCollection, Action<ITargetBuilder>) Adds the TSQL target renderer to a service collection. Declaration public static IServiceCollection AddTsqlTarget(this IServiceCollection services, Action<ITargetBuilder> config = null) Parameters Type Name Description IServiceCollection services The instance of the service collection. Action < ITargetBuilder > config The builder of the TSQL target renderer. Returns Type Description IServiceCollection The service collection."
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.TemporaryTables.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.TemporaryTables.html",
    "title": "Class TemporaryTables | VTL Processing API documentation",
    "keywords": "Class TemporaryTables The temporary tables data. Inheritance System.Object TemporaryTables Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public class TemporaryTables : object Constructors TemporaryTables() Initializes a new instance of the TemporaryTables class. Declaration public TemporaryTables() Properties Count Gets the count of used temporary tables. Declaration public int Count { get; set; } Property Value Type Description System.Int32 Name Gets the name of temporary tables. Declaration public string Name { get; set; } Property Value Type Description System.String Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.TranslatorConfigExtensions.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure.TranslatorConfigExtensions.html",
    "title": "Class TranslatorConfigExtensions | VTL Processing API documentation",
    "keywords": "Class TranslatorConfigExtensions The ITranslatorConfig extension methods whose add the TSQL target renderer to it. Inheritance System.Object TranslatorConfigExtensions Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Infrastructure Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public static class TranslatorConfigExtensions : object Methods AddTsqlTarget(ITranslatorConfig, Action<ITargetBuilder>) Adds the TSQL target renderer to a translator configuration. Declaration public static void AddTsqlTarget(this ITranslatorConfig config, Action<ITargetBuilder> configure = null) Parameters Type Name Description ITranslatorConfig config The instance of the translator configuration. Action < ITargetBuilder > configure The builder of the TSQL target renderer."
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Preparers.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Preparers.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL.Preparers | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL.Preparers Classes Mapper Mapper of VTL 2.0 to target names. ReferencesManager The references manager."
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Preparers.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Preparers.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL.Preparers.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL.Preparers.Interfaces Interfaces IReferencesManager The references manager interface."
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Preparers.Interfaces.IReferencesManager.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Preparers.Interfaces.IReferencesManager.html",
    "title": "Interface IReferencesManager | VTL Processing API documentation",
    "keywords": "Interface IReferencesManager The references manager interface. Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Preparers.Interfaces Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public interface IReferencesManager Methods ContainsExpression(IExpression) Checks if an expression exists in references. Declaration bool ContainsExpression(IExpression expr) Parameters Type Name Description IExpression expr The expression. Returns Type Description System.Boolean Value determining whether the expression exists in references. RenderDroppingOfTables() Renders a TSQL translated code for a dropping of tables of its non-persistent assignment expressions. Declaration string RenderDroppingOfTables() Returns Type Description System.String The TSQL translated code. RenderNonPersistentExpr(IExpression) Renders a TSQL translated code for its non-persistent assignment expression. Declaration string RenderNonPersistentExpr(IExpression expr) Parameters Type Name Description IExpression expr The expression. Returns Type Description System.String The TSQL translated code. TakeNonPersistentExprs(ITransformationSchema) Assigns non-persistent assignment expressions from a schema to its dictionary. Declaration void TakeNonPersistentExprs(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema The transformation schema. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Preparers.Mapper.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Preparers.Mapper.html",
    "title": "Class Mapper | VTL Processing API documentation",
    "keywords": "Class Mapper Mapper of VTL 2.0 to target names. Inheritance System.Object Mapper Implements IMapper Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Preparers Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public class Mapper : object, IMapper Methods MapNames(ITransformationSchema) Declaration public void MapNames(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema Implements IMapper Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Preparers.ReferencesManager.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Preparers.ReferencesManager.html",
    "title": "Class ReferencesManager | VTL Processing API documentation",
    "keywords": "Class ReferencesManager The references manager. Inheritance System.Object ReferencesManager Implements IReferencesManager Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Preparers Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public class ReferencesManager : object, IReferencesManager Constructors ReferencesManager(OperatorRendererResolver, ITargetConfiguration) Initializes a new instance of the ReferencesManager class. Declaration public ReferencesManager(OperatorRendererResolver opRendererResolver, ITargetConfiguration configuration) Parameters Type Name Description OperatorRendererResolver opRendererResolver The operator renderer resolver. ITargetConfiguration configuration The configuration of the target. Methods ContainsExpression(IExpression) Declaration public bool ContainsExpression(IExpression expr) Parameters Type Name Description IExpression expr Returns Type Description System.Boolean RenderDroppingOfTables() Declaration public string RenderDroppingOfTables() Returns Type Description System.String RenderNonPersistentExpr(IExpression) Declaration public string RenderNonPersistentExpr(IExpression expr) Parameters Type Name Description IExpression expr Returns Type Description System.String TakeNonPersistentExprs(ITransformationSchema) Declaration public void TakeNonPersistentExprs(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema Implements IReferencesManager Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Renderers.Interfaces.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Renderers.Interfaces.html",
    "title": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL.Renderers.Interfaces | VTL Processing API documentation",
    "keywords": "Namespace StatisticsPoland.VtlProcessing.Target.TSQL.Renderers.Interfaces Interfaces IOperatorRenderer The operator renderer interface."
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.Renderers.Interfaces.IOperatorRenderer.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.Renderers.Interfaces.IOperatorRenderer.html",
    "title": "Interface IOperatorRenderer | VTL Processing API documentation",
    "keywords": "Interface IOperatorRenderer The operator renderer interface. Namespace : StatisticsPoland.VtlProcessing.Target.TSQL.Renderers.Interfaces Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public interface IOperatorRenderer Methods Render(IExpression, StructureComponent) Renders a TSQL translated code for the expression. Declaration string Render(IExpression expr, StructureComponent component = null) Parameters Type Name Description IExpression expr The expression which parameters shall be used to render. StructureComponent component The selected component to assign in the translated code. Returns Type Description System.String The TSQL translated code. Extension Methods Utilities.In<T>(T, T[])"
  },
  "api/StatisticsPoland.VtlProcessing.Target.TSQL.TsqlTargetRenderer.html": {
    "href": "api/StatisticsPoland.VtlProcessing.Target.TSQL.TsqlTargetRenderer.html",
    "title": "Class TsqlTargetRenderer | VTL Processing API documentation",
    "keywords": "Class TsqlTargetRenderer The TSQL target renderer for the VTL 2.0 translation. Inheritance System.Object TsqlTargetRenderer Implements ITargetRenderer Namespace : StatisticsPoland.VtlProcessing.Target.TSQL Assembly : StatisticsPoland.VtlProcessing.Target.TSQL.dll Syntax public class TsqlTargetRenderer : object, ITargetRenderer Constructors TsqlTargetRenderer(TransformationSchemaResolver, OperatorRendererResolver, TemporaryTables, IReferencesManager, IMapper, ITargetConfiguration, IEnvironmentMapper, ILogger<ITargetRenderer>) Initializes a new instance of the TsqlTargetRenderer class. Declaration public TsqlTargetRenderer(TransformationSchemaResolver schemaResolver, OperatorRendererResolver opRendererResolver, TemporaryTables tmpTables, IReferencesManager references, IMapper mapper, ITargetConfiguration configuration, IEnvironmentMapper envMapper, ILogger<ITargetRenderer> logger = null) Parameters Type Name Description TransformationSchemaResolver schemaResolver The transformation schema resolver. OperatorRendererResolver opRendererResolver The operator renderer resolver. TemporaryTables tmpTables The temporary tables informations. IReferencesManager references The references manager. IMapper mapper The objects names mapper. ITargetConfiguration configuration The configuration of the target. IEnvironmentMapper envMapper The environment names mapper. ILogger < ITargetRenderer > logger The errors logger. Properties Name Gets the name of the target renderer. Declaration public string Name { get; } Property Value Type Description System.String Methods Render(IExpression) Declaration public string Render(IExpression expression) Parameters Type Name Description IExpression expression Returns Type Description System.String Render(ITransformationSchema) Declaration public string Render(ITransformationSchema schema) Parameters Type Name Description ITransformationSchema schema Returns Type Description System.String Implements ITargetRenderer Extension Methods Utilities.In<T>(T, T[])"
  }
}